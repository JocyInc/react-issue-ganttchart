{"version":3,"sources":["functions/Common/Parser.js","functions/Common/CommonHelper.js","functions/GitHub/GitHubHelper.js","functions/GitLab/GitLabHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","components/Gantt/Gantt.js","components/Gantt/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","App.js","serviceWorker.js","index.js"],"names":["removeLastSlash","url","length","test","slice","removeLastSpace","adjustURL","git_url","getStartDateFromDescriptionString","description","str","match","Date","replaceStartDateInDescriptionString","write_str","replace","getDueDateFromDescriptionString","getProgressFromDescriptionString","parseFloat","replaceProgressInDescriptionString","write_float_number","progress","write_round_str","Math","round","calculateDueDate","start_date_str","duration","start_date","moment","add","toDate","toLocaleDateString","getGanttStartDate","due_date","created_at","getGanttDuration","start_date_moment","diff","calculateDuration","getGanttUnscheduled","updateGanttIssue","issue","gantt","data","push","links","parse","sort","isGitHubURL","getGitHubNameSpaceFromGitURL","split_git_url","split","getGitHubProjectFromGitURL","adjustGitHubAPIURL","adjustGitHubURL","generateGanttTaskFromGitHub","issue_info","id","number","text","title","unscheduled","updateGitHubDescriptionStringFromGanttTask","gantt_task","due_date_str","replaceDueDateInDescriptionString","isGitLabURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","adjustGitLabAPIURL","adjustGitLabURL","generateGanttTaskFromGitLab","iid","getGitHubIssuesFromAPI","a","axios","get","then","res","map","body","getGitLabIssuesFromAPI","token","updateGitLabIssueFromGanttTask","get_url","encodeURIComponent","updateGitLabDescriptionStringFromGanttTask","put_url","put","console","log","catch","err","alert","getIssuesFromAPI","clearAll","updateIssueByAPI","gantt_task_id","post","headers","updateGitHubIssueFromGanttTask","openIssueAtBrowser","window","open","openGitHubIssueAtBrowser","openGitLabIssueAtBrowser","openNewIssueAtBrowser","openGitHubNewIssueAtBrowser","openGitLabNewIssueAtBrowser","Gantt","props","dataProcessor","initZoom","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","onDataUpdated","this","createDataProcessor","type","action","item","Promise","resolve","reject","nextProps","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","show_unscheduled","attachEvent","e","ganttContainer","initGanttDataProcessor","updateGantt","destructor","setZoom","ref","input","style","width","height","Component","Toolbar","handleZoomChange","onZoomChange","target","handleTokenChange","onTokenChange","handleGitURLChange","onGitURLChange","handleUpdateClick","onUpdateClick","zoomRadios","isActive","key","className","checked","onChange","onClick","App","setState","currentZoom","bake_cookie","GanttRef","current","state","messages","React","createRef","read_cookie","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8XAAMA,EAAkB,SAACC,GAIvB,OAHIA,EAAIC,OAAS,GAAK,MAAMC,KAAKF,KAC/BA,EAAMA,EAAIG,MAAM,GAAI,IAEfH,GAEHI,EAAkB,SAACJ,GAIvB,OAHIA,EAAIC,OAAS,GAAK,MAAMC,KAAKF,KAC/BA,EAAMA,EAAIG,MAAM,GAAI,IAEfH,GAGIK,EAAY,SAACC,GACxB,IAAIN,EAAMM,EAKV,OAJAN,EAAMD,EAAgBC,GACtBA,EAAMI,EAAgBJ,GACtBA,EAAMD,EAAgBC,GACtBA,EAAMI,EAAgBJ,IAIXO,EAAoC,SAACC,GAChD,GAAmB,MAAfA,EACF,OAAO,KAET,IAAIC,EAAMD,EAAYE,MAAM,uCAC5B,OAAW,MAAPD,EACK,MAETA,EAAMA,EAAI,GAAGC,MAAM,2BAA2B,GACvC,IAAIC,KAAKF,KAGLG,EAAsC,SAACJ,EAAaK,GAE/D,OAAkB,MADDN,EAAkCC,GAE1CA,EAAYM,QAAQ,sCAAuC,eAAiBD,GAE5E,eAAiBA,EAAY,OAASL,GAIpCO,EAAkC,SAACP,GAC9C,GAAmB,MAAfA,EACF,OAAO,KAET,IAAIC,EAAMD,EAAYE,MAAM,qCAC5B,OAAW,MAAPD,EACK,MAETA,EAAMA,EAAI,GAAGC,MAAM,2BAA2B,GACvC,IAAIC,KAAKF,KAYLO,EAAmC,SAACR,GAC/C,GAAmB,MAAfA,EACF,OAAO,KAET,IAAIC,EAAMD,EAAYE,MAAM,0BAC5B,OAAW,MAAPD,EACK,IAETA,EAAMA,EAAI,GAAGC,MAAM,gBAAgB,GAC5BO,WAAWR,KAGPS,EAAqC,SAACV,EAAaW,GAC9D,IAAIC,EAAWJ,EAAiCR,GAC5Ca,EAAkBC,KAAKC,MAA2B,GAArBJ,GAA2B,GAC5D,OAAgB,MAAZC,EACKZ,EAAYM,QAAQ,yBAA0B,aAAeO,GAE7D,aAAeA,EAAkB,OAASb,G,iBC1ExCgB,EAAmB,SAACC,EAAgBC,GAC/C,IAAIC,EAAa,IAAIhB,KAAKc,GAE1B,OADeG,IAAOD,GAAYE,IAAIH,EAAW,EAAG,KAAKI,SACzCC,mBAAmB,UAGxBC,EAAoB,SAACL,EAAYM,EAAUC,GAOtD,OALkB,MAAdP,GAAkC,MAAZM,EACPN,EAAWI,mBAAmB,SAE9B,IAAIpB,KAAKuB,GAAYH,mBAAmB,UAKhDI,EAAmB,SAACR,EAAYM,GAO3C,OALkB,MAAdN,GAAkC,MAAZM,EAxBF,SAACN,EAAYM,GACrC,IAAIG,EAAoBR,IAAOD,GAE/B,OADsBC,IAAOK,GACNI,KAAKD,EAAmB,QAAU,EAsB5CE,CAAkBX,EAAYM,GAE9B,GAKFM,EAAsB,SAACZ,EAAYM,GAO9C,OALkB,MAAdN,GAAkC,MAAZM,GAQfO,EAAmB,SAACC,EAAOC,GACtC,IAAIC,EAAO,GAEXA,EAAKC,KAAKH,GACVE,EAAO,CAAEA,KAAMA,EAAME,MAFT,IAGZH,EAAMI,MAAMH,GACZD,EAAMK,KAAK,cAAc,IClCdC,EAAc,SAAC1C,GAC1B,MAAO,cAAcJ,KAAKI,IAGtB2C,EAA+B,SAAC3C,GACpC,IAAI4C,EAAgB5C,EAAQ6C,MAAM,KAClC,GAAID,EAAcjD,QAAU,EAC1B,OAAOiD,EAAc,IAInBE,EAA6B,SAAC9C,GAClC,IAAI4C,EAAgB5C,EAAQ6C,MAAM,KAClC,GAAID,EAAcjD,QAAU,EAC1B,OAAOiD,EAAc,IAIZG,EAAqB,SAAC/C,GACjC,IAAIN,EAAMK,EAAUC,GACpB,MAAO,gCAAkC2C,EAA6BjD,GAAO,IAAMoD,EAA2BpD,IAGnGsD,EAAkB,SAAChD,GAC9B,IAAIN,EAAMK,EAAUC,GACpB,MAAO,sBAAwB2C,EAA6BjD,GAAO,IAAMoD,EAA2BpD,IAIzFuD,EAA8B,SAAC/C,EAAagD,GACvD,IAAI7B,EAAapB,EAAkCC,GAC/CyB,EAAWlB,EAAgCP,GAU/C,MARiB,CACfiD,GAAID,EAAWE,OACfC,KAAMH,EAAWI,MACjBjC,WAAYK,EAAkBL,EAAYM,EAAUuB,EAAWtB,YAC/DR,SAAUS,EAAiBR,EAAYM,GACvCb,SAAUJ,EAAiCR,GAC3CqD,YAAatB,EAAoBZ,EAAYM,KAKpC6B,EAA6C,SAACtD,EAAauD,GACtE,IAAItC,EAAiB,IAAId,KAAKoD,EAAWpC,YAAYI,mBAAmB,SACpEiC,EAAexC,EAAiBC,EAAgBsC,EAAWrC,UAM/D,OAHAlB,EFV+C,SAACA,EAAaK,GAE7D,OAAgB,MADDE,EAAgCP,GAEtCA,EAAYM,QAAQ,oCAAqC,aAAeD,GAExE,aAAeA,EAAY,OAASL,EEK/ByD,CADdzD,EAAcU,EAAmCV,EAAauD,EAAW3C,UACZ4C,GAC7DxD,EAAcI,EAAoCJ,EAAaiB,ICrDpDyC,EAAc,SAAC5D,GAC1B,MAAO,cAAcJ,KAAKI,IAGtB6D,EAA+B,SAAC7D,GACpC,IAAI4C,EAAgB5C,EAAQ6C,MAAM,KAClC,GAAID,EAAcjD,QAAU,EAC1B,OAAOiD,EAAc,IAInBkB,EAA6B,SAAC9D,GAClC,IAAI4C,EAAgB5C,EAAQ6C,MAAM,KAClC,GAAID,EAAcjD,QAAU,EAC1B,OAAOiD,EAAc,IAIZmB,EAAqB,SAAC/D,GACjC,IAAIN,EAAMK,EAAUC,GACpB,MAAO,sCAAwC6D,EAA6BnE,GAAO,MAAQoE,EAA2BpE,IAG3GsE,EAAkB,SAAChE,GAC9B,IAAIN,EAAMK,EAAUC,GACpB,MAAO,sBAAwB6D,EAA6BnE,GAAO,IAAMoE,EAA2BpE,IAGzFuE,EAA8B,SAACf,GAC1C,IAAI7B,EAAapB,EAAkCiD,EAAWhD,aAC1DyB,EAAW,IAAItB,KAAK6C,EAAWvB,UAAUF,mBAAmB,SAUhE,MARiB,CACf0B,GAAID,EAAWgB,IACfb,KAAMH,EAAWI,MACjBjC,WAAYK,EAAkBL,EAAYM,EAAUuB,EAAWtB,YAC/DR,SAAUS,EAAiBR,EAAYM,GACvCb,SAAUJ,EAAiCwC,EAAWhD,aACtDqD,YAAatB,EAAoBZ,EAAYM,K,gBC1CpCwC,EAAsB,uCAAG,WAAO/B,EAAOpC,GAAd,eAAAoE,EAAA,sDAC9B1E,EAAMqD,EAAmB/C,GAAW,UAC1CqE,IAAMC,IAAI5E,GAAK6E,MAAK,SAACC,GACnBA,EAAInC,KAAKoC,KAAI,SAACvB,GAKZ,OAJAmB,IAAMC,IAAI5E,EAAM,IAAMwD,EAAWE,QAAQmB,MAAK,SAACC,GAC7C,IAAIf,EAAaR,EAA4BuB,EAAInC,KAAKqC,KAAMxB,GAC5DhB,EAAiBuB,EAAYrB,MAExB,WARyB,2CAAH,wDCGtBuC,EAAsB,uCAAG,WAAOvC,EAAOpC,EAAS4E,GAAvB,eAAAR,EAAA,sDAC9B1E,EAAMqE,EAAmB/D,GAAW,wBAA0B4E,EACpEP,IAAMC,IAAI5E,GAAK6E,MAAK,SAACC,GACnBA,EAAInC,KAAKoC,KAAI,SAACvB,GACZ,IAAIO,EAAaQ,EAA4Bf,GAE7C,OADAhB,EAAiBuB,EAAYrB,GACtB,WANyB,2CAAH,0DAWtByC,EAAiC,SAACpB,EAAYmB,EAAOxC,EAAOpC,GAEvE,IAAM8E,EAAUf,EAAmB/D,GAAW,wBAA0B4E,EACxEP,IAAMC,IAAIQ,GAASP,MAAK,SAACC,GACvBA,EAAInC,KAAKoC,KAAI,SAACvB,GACZ,GAAIA,EAAWgB,MAAQT,EAAWN,GAAI,CACpC,IAAMjD,EF2B4C,SAACA,EAAauD,GACtE,IAAItC,EAAiB,IAAId,KAAKoD,EAAWpC,YAAYI,mBAAmB,SAKxE,OAHAvB,EAAcU,EAAmCV,EAAauD,EAAW3C,UACzEZ,EAAcI,EAAoCJ,EAAaiB,GAExD4D,mBAAmB7E,GEjCA8E,CAA2C9B,EAAWhD,YAAauD,GACjFtC,EAAiB,IAAId,KAAKoD,EAAWpC,YAAYI,mBAAmB,SACpEiC,EAAexC,EAAiBC,EAAgBsC,EAAWrC,UAC3D6D,EAAUlB,EAAmB/D,GAAW,WAAayD,EAAWN,GAClE,iBAAmByB,EACnB,gBAAkB1E,EAClB,aAAewD,EACnBW,IAAMa,IAAID,GAASV,MAAK,SAACC,GACvBW,QAAQC,IAAI,2BACXC,OAAM,SAACC,GACRC,MAAM,iDACNZ,EAAuBvC,EAAOpC,MAGlC,OAAO,YC5BAwF,EAAgB,uCAAG,WAAOpD,EAAOpC,EAAS4E,GAAvB,SAAAR,EAAA,sDAC9BhC,EAAMqD,WACF/C,EAAY1C,IACdmE,EAAuB/B,EAAOpC,GAE5B4D,EAAY5D,IACd2E,EAAuBvC,EAAOpC,EAAS4E,GANX,2CAAH,0DAUhBc,EAAmB,SAACC,EAAef,EAAOxC,EAAOpC,GACxD0C,EAAY1C,IFJ4B,SAACyD,EAAYmB,EAAOxC,EAAOpC,GACvE,IAAMN,EAAMqD,EAAmB/C,GAAW,WAAayD,EAAWN,GAClEkB,IAAMC,IAAI5E,GAAK6E,MAAK,SAACC,GACnB,IAAIE,EAAOlB,EAA2CgB,EAAInC,KAAKqC,KAAMjB,GACrEY,IAAMuB,KAAKlG,EAAK,CACdgF,KAAMA,GACL,CACDmB,QAAS,CACP,cAAgB,SAAhB,OAA0BjB,MAE3BL,MAAK,SAACC,GACPW,QAAQC,IAAI,2BACXC,OAAM,SAACC,GACRC,MAAM,iDACNpB,EAAuB/B,EAAOpC,SEThC8F,CAA+BH,EAAef,EAAOxC,EAAOpC,GAE1D4D,EAAY5D,IACd6E,EAA+Bc,EAAef,EAAOxC,EAAOpC,IAInD+F,EAAqB,SAACJ,EAAe3F,GAC5C0C,EAAY1C,IFOsB,SAAC2F,EAAe3F,GACtDgG,OAAOC,KAAKjD,EAAgBhD,GAAW,WAAa2F,EAAe,UEPjEO,CAAyBP,EAAe3F,GAEtC4D,EAAY5D,IDUsB,SAACmD,EAAInD,GAC3CgG,OAAOC,KAAKjC,EAAgBhE,GAAW,aAAemD,EAAI,UCVxDgD,CAAyBR,EAAe3F,IAI/BoG,EAAwB,SAACT,EAAe3F,GAC/C0C,EAAY1C,IFEyB,SAAC2F,EAAe3F,GACzD,IAAI0E,EAAO,GACXA,GAAQ,kBAAmB,IAAIrE,MAAOoB,mBAAmB,SAAW,SACpEiD,GAAQ,gBAAiB,IAAIrE,MAAOoB,mBAAmB,SAAW,SAClEiD,GAAQ,wBACRsB,OAAOC,KAAKjD,EAAgBhD,GAAW,8CAAgD0E,EAAM,UEN3F2B,CAA4BV,EAAe3F,GAEzC4D,EAAY5D,IDKyB,SAACmD,EAAInD,GAC9C,IAAI0E,EAAO,GACXA,GAAQ,kBAAmB,IAAIrE,MAAOoB,mBAAmB,SAAW,eACpEiD,GAAQ,wBACRsB,OAAOC,KAAKjC,EAAgBhE,GAAW,kCAAoC0E,EAAM,UCR/E4B,CAA4BX,EAAe3F,ICtC1BuG,E,YAEnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAKRC,cAAgB,KAJd,EAAKC,WAFY,E,wEASjBtE,QAAMuE,IAAIC,KAAKC,KAAK,CAClBC,OAAQ,CACN,CACEC,KAAM,OACNC,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,CACN,CAAEC,KAAM,OAAQC,KAAM,EAAGC,OAAQ,eACjC,CAAEF,KAAM,MAAOC,KAAM,EAAGC,OAAQ,WAGpC,CACEN,KAAM,SACNC,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,CACN,CAAEC,KAAM,QAASC,KAAM,EAAGC,OAAQ,SAClC,CAAEF,KAAM,OAAQC,KAAM,EAAGC,OAAQ,sB,8BAOnCC,GACNlF,QAAMuE,IAAIC,KAAKW,SAASD,K,+CASxB,IAAME,EAAgBC,KAAKjB,MAAMgB,cACjCC,KAAKhB,cAAgBrE,QAAMsF,qBAAoB,SAACC,EAAMC,EAAQC,EAAM1E,GAClE,OAAO,IAAI2E,SAAQ,SAACC,EAASC,GAO3B,OANIR,GACFA,EAAcG,EAAMC,EAAQC,EAAM1E,GAK7B4E,Y,oCAMXvC,EAAiBpD,QAAOqF,KAAKjB,MAAMxG,QAASyH,KAAKjB,MAAM5B,S,4CAGnCqD,GACpB,OAAOR,KAAKjB,MAAMI,OAASqB,EAAUrB,O,0CAGlB,IAAD,OAClBxE,QAAM8F,OAAOC,SAAW,iBACxB/F,QAAM8F,OAAOE,cAAe,EAC5BhG,QAAM8F,OAAOG,mBAAoB,EAEjCjG,QAAM8F,OAAOI,iBAAkB,EAC/BlG,QAAM8F,OAAOK,aAAc,EAE3BnG,QAAM8F,OAAOM,kBAAmB,EAChCpG,QAAM8F,OAAOzF,MAAO,EAEpBL,QAAMqG,YAAY,kBAAkB,SAAC9C,EAAe+C,GAClD3C,EAAmBJ,EAAe,EAAKa,MAAMxG,YAG/CoC,QAAMqG,YAAY,iBAAiB,SAAC9C,EAAe+C,GACjDtC,EAAsBT,EAAe,EAAKa,MAAMxG,YAGlDoC,QAAMqG,YAAY,qBAAqB,SAACtF,EAAIM,GAC1CiC,EAAiBjC,EAAY,EAAK+C,MAAM5B,MAAOxC,QAAO,EAAKoE,MAAMxG,YAGnEoC,QAAMyE,KAAKY,KAAKkB,gBAChBlB,KAAKmB,yBACLnB,KAAKoB,gB,6CAIDpB,KAAKhB,gBACPgB,KAAKhB,cAAcqC,aACnBrB,KAAKhB,cAAgB,Q,+BAIf,IAAD,OACCG,EAASa,KAAKjB,MAAdI,KAER,OADAa,KAAKsB,QAAQnC,GAEX,yBACEoC,IAAK,SAACC,GAAY,EAAKN,eAAiBM,GACxCC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,c,GA5GLC,aCRpB9C,I,MAAAA,GCDM+C,G,2MACnBC,iBAAmB,SAACb,GACd,EAAKlC,MAAMgD,cACb,EAAKhD,MAAMgD,aAAad,EAAEe,OAAOnC,Q,EAIrCoC,kBAAoB,SAAChB,GACf,EAAKlC,MAAMmD,eACb,EAAKnD,MAAMmD,cAAcjB,EAAEe,OAAOnC,Q,EAItCsC,mBAAqB,SAAClB,GAChB,EAAKlC,MAAMqD,gBACb,EAAKrD,MAAMqD,eAAenB,EAAEe,OAAOnC,Q,EAIvCwC,kBAAoB,SAACpB,GACf,EAAKlC,MAAMuD,eACb,EAAKvD,MAAMuD,iB,wEAIL,IAAD,OACDC,EAAa,CAAC,OAAQ,UAAUvF,KAAI,SAAC6C,GACzC,IAAM2C,EAAW,EAAKzD,MAAMI,OAASU,EACrC,OACE,2BAAO4C,IAAK5C,EAAO6C,UAAS,sBAAiBF,EAAW,qBAAuB,KAC7E,2BAAOtC,KAAK,QACVyC,QAASH,EACTI,SAAU,EAAKd,iBACfjC,MAAOA,IACRA,MAKP,OACE,yBAAK6C,UAAU,YACb,oCACA,2BAAOxC,KAAK,OACVL,MAAOG,KAAKjB,MAAM9G,IAClB2K,SAAU5C,KAAKmC,mBACfO,UAAU,qBACZ,sCACA,2BAAOxC,KAAK,WACVL,MAAOG,KAAKjB,MAAM5B,MAClByF,SAAU5C,KAAKiC,kBACfS,UAAU,sBACZ,4BACEG,QAAS7C,KAAKqC,kBACdK,UAAU,UAFZ,UAKA,qCACCH,O,GAzD4BX,aCCtBC,I,MAAAA,I,QC8EAiB,I,kBAzEb,WAAY/D,GAAQ,IAAD,8BACjB,4CAAMA,KAUR+C,iBAAmB,SAAC3C,GAClB,EAAK4D,SAAS,CACZC,YAAa7D,IAEf8D,uBAAY,cAAe9D,IAfV,EAkBnB8C,kBAAoB,SAAC9E,GACnB,EAAK4F,SAAS,CAAE5F,WAnBC,EAsBnBgF,mBAAqB,SAAC5J,GACpB,EAAKwK,SAAS,CAAExK,aAvBC,EA0BnB8J,kBAAoB,WAClB,EAAKa,SAASC,QAAQ/B,cACtB6B,uBAAY,QAAS,EAAKG,MAAMjG,OAChC8F,uBAAY,UAAW,EAAKG,MAAM7K,UA3BlC,EAAK6K,MAAQ,CACXJ,YAAa,SACbK,SAAU,GACV9K,QAAS,GACT4E,MAAO,IAET,EAAK+F,SAAWI,IAAMC,YARL,E,iFAiCjBvD,KAAK+C,SAAS,CACZ5F,MAAOqG,uBAAY,WAErBxD,KAAK+C,SAAS,CACZxK,QAASiL,uBAAY,aAEY,SAA/BA,uBAAY,gBAA4D,WAA/BA,uBAAY,gBACvDxD,KAAK+C,SAAS,CACZC,YAAaQ,uBAAY,mB,+BAIrB,IAAD,EACiCxD,KAAKoD,MAArCJ,EADD,EACCA,YAAazK,EADd,EACcA,QAAS4E,EADvB,EACuBA,MAC9B,OACE,6BACE,yBAAKuF,UAAU,YACb,kBAAC,GAAD,CACEvD,KAAM6D,EACNjB,aAAc/B,KAAK8B,iBACnBvJ,QAASA,EACT6J,eAAgBpC,KAAKmC,mBACrBhF,MAAOA,EACP+E,cAAelC,KAAKiC,kBACpBK,cAAetC,KAAKqC,qBAGxB,yBAAKK,UAAU,mBACb,kBAAC,GAAD,CACEnB,IAAKvB,KAAKkD,SACV/D,KAAM6D,EACNzK,QAASA,EACT4E,MAAOA,U,GAlEDyE,cCME6B,QACW,cAA7BlF,OAAOmF,SAASC,UAEe,UAA7BpF,OAAOmF,SAASC,UAEhBpF,OAAOmF,SAASC,SAAShL,MACvB,2DCZNiL,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpH,MAAK,SAAAqH,GACjCA,EAAaC,kB","file":"static/js/main.126efa91.chunk.js","sourcesContent":["const removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\nconst removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\n\nexport const adjustURL = (git_url) => {\n  let url = git_url;\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  return url;\n}\n\nexport const getStartDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceStartDateInDescriptionString = (description, write_str) => {\n  let start_date = getStartDateFromDescriptionString(description);\n  if (start_date != null) {\n    return description.replace(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"start_date: \" + write_str);\n  } else {\n    return \"start_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getDueDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceDueDateInDescriptionString = (description, write_str) => {\n  let due_date = getDueDateFromDescriptionString(description);\n  if (due_date != null) {\n    return description.replace(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"due_date: \" + write_str);\n  } else {\n    return \"due_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getProgressFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/progress: \\d{1}\\.\\d{1}/);\n  if (str == null) {\n    return 0.1;\n  }\n  str = str[0].match(/\\d{1}\\.\\d{1}/)[0];\n  return parseFloat(str);\n}\n\nexport const replaceProgressInDescriptionString = (description, write_float_number) => {\n  let progress = getProgressFromDescriptionString(description);\n  let write_round_str = Math.round(write_float_number * 10) / 10;\n  if (progress != null) {\n    return description.replace(/progress: \\d{1}\\.\\d{1}/, \"progress: \" + write_round_str);\n  } else {\n    return \"progress: \" + write_round_str + \"  \\n\" + description;\n  }\n}","import moment from 'moment';\n\nconst calculateDuration = (start_date, due_date) => {\n  let start_date_moment = moment(start_date);\n  let due_date_moment = moment(due_date);\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n}\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  let start_date = new Date(start_date_str);\n  let due_date = moment(start_date).add(duration - 1, 'd').toDate();\n  return due_date.toLocaleDateString(\"ja-JP\");\n}\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = start_date.toLocaleDateString(\"ja-JP\");\n  } else {\n    start_date_str = new Date(created_at).toLocaleDateString(\"ja-JP\");\n  }\n  return start_date_str;\n}\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n}\n\nexport const getGanttUnscheduled = (start_date, due_date) => {\n  let unscheduled = null;\n  if (start_date != null && due_date != null) {\n    unscheduled = false;\n  } else {\n    unscheduled = true;\n  }\n  return unscheduled;\n}\n\nexport const updateGanttIssue = (issue, gantt) => {\n  let data = [];\n  let links = [];\n  data.push(issue);\n  data = { data: data, links: links }\n  gantt.parse(data);\n  gantt.sort(\"start_date\", false);\n} ","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getDueDateFromDescriptionString,\n  replaceDueDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n  adjustURL,\n} from '../Common/Parser.js';\nimport { \n  calculateDueDate,\n  getGanttStartDate,\n  getGanttUnscheduled,\n  getGanttDuration,\n } from '../Common/CommonHelper.js';\n\nexport const isGitHubURL = (git_url) => {\n  return /github\\.com/.test(git_url);\n}\n\nconst getGitHubNameSpaceFromGitURL = (git_url) => {\n  let split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitHubProjectFromGitURL = (git_url) => {\n  let split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nexport const adjustGitHubAPIURL = (git_url) => {\n  let url = adjustURL(git_url);\n  return \"https://api.github.com/repos/\" + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url);\n}\n\nexport const adjustGitHubURL = (git_url) => {\n  let url = adjustURL(git_url);\n  return \"https://github.com/\" + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url);\n}\n\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  let start_date = getStartDateFromDescriptionString(description);\n  let due_date = getDueDateFromDescriptionString(description);\n\n  let gantt_task = {\n    id: issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(description),\n    unscheduled: getGanttUnscheduled(start_date, due_date),\n  }\n  return gantt_task;\n}\n\nexport const updateGitHubDescriptionStringFromGanttTask = (description, gantt_task) => {\n  let start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n  let due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n  \n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceDueDateInDescriptionString(description, due_date_str);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return description;\n}","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n  adjustURL,\n} from '../Common/Parser.js';\nimport { \n  getGanttStartDate,\n  getGanttUnscheduled,\n  getGanttDuration,\n } from '../Common/CommonHelper.js';\n\nexport const isGitLabURL = (git_url) => {\n  return /gitlab\\.com/.test(git_url);\n}\n\nconst getGitLabNameSpaceFromGitURL = (git_url) => {\n  let split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitLabProjectFromGitURL = (git_url) => {\n  let split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nexport const adjustGitLabAPIURL = (git_url) => {\n  let url = adjustURL(git_url);\n  return \"https://gitlab.com/api/v4/projects/\" + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url);\n}\n\nexport const adjustGitLabURL = (git_url) => {\n  let url = adjustURL(git_url);\n  return \"https://gitlab.com/\" + getGitLabNameSpaceFromGitURL(url) + \"/\" + getGitLabProjectFromGitURL(url);\n}\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  let start_date = getStartDateFromDescriptionString(issue_info.description);\n  let due_date = new Date(issue_info.due_date).toLocaleDateString(\"ja-JP\");\n  \n  let gantt_task = {\n    id: issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(issue_info.description),\n    unscheduled: getGanttUnscheduled(start_date, due_date),\n  }\n  return gantt_task;\n}\n\nexport const updateGitLabDescriptionStringFromGanttTask = (description, gantt_task) => {\n  let start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n\n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return encodeURIComponent(description);\n}","import axios from 'axios';\nimport {\n  adjustGitHubAPIURL,\n  adjustGitHubURL,\n  generateGanttTaskFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n} from './GitHubHelper.js';\nimport { updateGanttIssue } from '../Common/CommonHelper.js';\n\nexport const getGitHubIssuesFromAPI = async (gantt, git_url) => {\n  const url = adjustGitHubAPIURL(git_url) + '/issues';\n  axios.get(url).then((res) => {\n    res.data.map((issue_info) => {\n      axios.get(url + '/' + issue_info.number).then((res) => {\n        let gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n        updateGanttIssue(gantt_task, gantt);\n      });\n      return null;\n    });\n  });\n};\n\nexport const updateGitHubIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n  const url = adjustGitHubAPIURL(git_url) + '/issues/' + gantt_task.id;\n  axios.get(url).then((res) => {\n    let body = updateGitHubDescriptionStringFromGanttTask(res.data.body, gantt_task);\n    axios.post(url, {\n      body: body,\n    }, {\n      headers: {\n        'Authorization': `token ${token}`\n      }\n    }).then((res) => {\n      console.log(\"success update issue\");\n    }).catch((err) => {\n      alert('failed update GitHub issue. check your token.');\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(adjustGitHubURL(git_url) + \"/issues/\" + gantt_task_id, \"_blank\");\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"due_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(adjustGitHubURL(git_url) + \"/issues/new?assignees=&labels=&title=&body=\" + body, \"_blank\");\n};","import axios from 'axios';\nimport {\n  adjustGitLabAPIURL,\n  adjustGitLabURL,\n  generateGanttTaskFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n} from './GitLabHelper.js';\nimport { \n  calculateDueDate,\n  updateGanttIssue,\n } from '../Common/CommonHelper.js';\n\nexport const getGitLabIssuesFromAPI = async (gantt, git_url, token) => {\n  const url = adjustGitLabAPIURL(git_url) + '/issues?access_token=' + token;\n  axios.get(url).then((res) => {\n    res.data.map((issue_info) => {\n      let gantt_task = generateGanttTaskFromGitLab(issue_info);\n      updateGanttIssue(gantt_task, gantt);\n      return null;\n    });\n  });\n};\n\nexport const updateGitLabIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n\n  const get_url = adjustGitLabAPIURL(git_url) + '/issues?access_token=' + token;\n  axios.get(get_url).then((res) => {\n    res.data.map((issue_info) => {\n      if (issue_info.iid === gantt_task.id) {\n        const description = updateGitLabDescriptionStringFromGanttTask(issue_info.description, gantt_task);\n        const start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n        const due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n        const put_url = adjustGitLabAPIURL(git_url) + '/issues/' + gantt_task.id\n          + \"?access_token=\" + token\n          + \"&description=\" + description\n          + \"&due_date=\" + due_date_str;\n        axios.put(put_url).then((res) => {\n          console.log(\"success update issue\")\n        }).catch((err) => {\n          alert('failed update GitLab issue. check your token.')\n          getGitLabIssuesFromAPI(gantt, git_url);\n        });\n      }\n      return null;\n    });\n  });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(adjustGitLabURL(git_url) + \"/-/issues/\" + id, \"_blank\");\n};\n\nexport const openGitLabNewIssueAtBrowser = (id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%20%20%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(adjustGitLabURL(git_url) + \"/issues/new?issue[description]=\" + body, \"_blank\");\n};","import { isGitHubURL } from '../GitHub/GitHubHelper.js';\nimport { isGitLabURL } from '../GitLab/GitLabHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n} from '../GitLab/GitLabAPI.js';\n\nexport const getIssuesFromAPI = async (gantt, git_url, token) => {\n  gantt.clearAll(); \n  if (isGitHubURL(git_url)) {\n    getGitHubIssuesFromAPI(gantt, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    getGitLabIssuesFromAPI(gantt, git_url, token);\n  }\n}\n\nexport const updateIssueByAPI = (gantt_task_id, token, gantt, git_url) => {\n  if (isGitHubURL(git_url)) {\n    updateGitHubIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    updateGitLabIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n}\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    openGitLabNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n}","import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport {\n  getIssuesFromAPI,\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../../functions/Common/IssueAPI.js';\n\nexport default class Gantt extends Component {\n\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init({\n      levels: [\n        {\n          name: 'Days',\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: 'week', step: 1, format: '%M, %d week' },\n            { unit: 'day', step: 1, format: '%d %M' }\n          ]\n        },\n        {\n          name: 'Months',\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: \"month\", step: 1, format: '%Y %F' },\n            { unit: 'week', step: 1, format: '%M, %d week' },\n          ]\n        }\n      ]\n    });\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  updateGantt() {\n    getIssuesFromAPI(gantt, this.props.git_url, this.props.token);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    gantt.config.xml_date = \"%Y/%m/%d %H:%i\";\n    gantt.config.order_branch = true;\n    gantt.config.order_branch_free = true;\n\n    gantt.config.keep_grid_width = true;\n    gantt.config.grid_resize = true;\n\n    gantt.config.show_unscheduled = true;\n    gantt.config.sort = true;\n\n    gantt.attachEvent(\"onTaskDblClick\", (gantt_task_id, e) => {\n      openIssueAtBrowser(gantt_task_id, this.props.git_url);\n    });\n\n    gantt.attachEvent(\"onTaskCreated\", (gantt_task_id, e) => {\n      openNewIssueAtBrowser(gantt_task_id, this.props.git_url);\n    });\n\n    gantt.attachEvent(\"onAfterTaskUpdate\", (id, gantt_task) => {\n      updateIssueByAPI(gantt_task, this.props.token, gantt, this.props.git_url);\n    });\n\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    this.updateGantt();\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => { this.ganttContainer = input }}\n        style={{ width: '100%', height: '100%' }}\n      ></div>\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React, { Component } from 'react';\nexport default class Toolbar extends Component {\n  handleZoomChange = (e) => {\n    if (this.props.onZoomChange) {\n      this.props.onZoomChange(e.target.value)\n    }\n  }\n\n  handleTokenChange = (e) => {\n    if (this.props.onTokenChange) {\n      this.props.onTokenChange(e.target.value)\n    }\n  }\n\n  handleGitURLChange = (e) => {\n    if (this.props.onGitURLChange) {\n      this.props.onGitURLChange(e.target.value)\n    }\n  }\n\n  handleUpdateClick = (e) => {\n    if (this.props.onUpdateClick) {\n      this.props.onUpdateClick()\n    }\n  }\n\n  render() {\n    const zoomRadios = ['Days', 'Months'].map((value) => {\n      const isActive = this.props.zoom === value;\n      return (\n        <label key={value} className={`radio-label ${isActive ? 'radio-label-active' : ''}`}>\n          <input type='radio'\n            checked={isActive}\n            onChange={this.handleZoomChange}\n            value={value} />\n          {value}\n        </label>\n      );\n    });\n\n    return (\n      <div className=\"tool-bar\">\n        <b>URL: </b>\n        <input type=\"text\"\n          value={this.props.url}\n          onChange={this.handleGitURLChange}\n          className='text-input-label' />\n        <b>Token: </b>\n        <input type=\"password\"\n          value={this.props.token}\n          onChange={this.handleTokenChange}\n          className='token-input-label' />\n        <button\n          onClick={this.handleUpdateClick}\n          className='button' >\n          Update\n        </button>\n        <b>Zoom: </b>\n        {zoomRadios}\n      </div>\n    );\n  }\n}\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React, { Component } from 'react';\nimport Gantt from './components/Gantt';\nimport Toolbar from './components/Toolbar';\nimport { bake_cookie, read_cookie } from 'sfcookies';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoom: 'Months',\n      messages: [],\n      git_url: '',\n      token: '',\n    };\n    this.GanttRef = React.createRef();\n  }\n\n  handleZoomChange = (zoom) => {\n    this.setState({\n      currentZoom: zoom\n    });\n    bake_cookie('currentZoom', zoom);\n  }\n\n  handleTokenChange = (token) => {\n    this.setState({ token });\n  }\n\n  handleGitURLChange = (git_url) => {\n    this.setState({ git_url });\n  }\n\n  handleUpdateClick = () => {\n    this.GanttRef.current.updateGantt();\n    bake_cookie('token', this.state.token);\n    bake_cookie('git_url', this.state.git_url);\n  }\n\n  componentDidMount() {\n    this.setState({\n      token: read_cookie('token')\n    });\n    this.setState({\n      git_url: read_cookie('git_url')\n    });\n    if (read_cookie('currentZoom') === 'Days' || read_cookie('currentZoom') === 'Months')\n      this.setState({\n        currentZoom: read_cookie('currentZoom')\n      });\n  }\n\n  render() {\n    const { currentZoom, git_url, token } = this.state;\n    return (\n      <div>\n        <div className=\"zoom-bar\">\n          <Toolbar\n            zoom={currentZoom}\n            onZoomChange={this.handleZoomChange}\n            git_url={git_url}\n            onGitURLChange={this.handleGitURLChange}\n            token={token}\n            onTokenChange={this.handleTokenChange}\n            onUpdateClick={this.handleUpdateClick}\n          />\n        </div>\n        <div className=\"gantt-container\">\n          <Gantt\n            ref={this.GanttRef}\n            zoom={currentZoom}\n            git_url={git_url}\n            token={token}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}