{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","components/Gantt/Gantt.js","components/Gantt/index.js","functions/State/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","marginRight","props","classes","noValidate","TextField","className","required","placeholder","label","style","onChange","e","onGitURLChange","target","value","inputRef","register","name","type","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","Autocomplete","size","member_list","getOptionLabel","option","selected_assignee","assignee","onSelectedAssigneeChange","renderInput","params","variant","ButtonGroup","height","Button","onClick","onZoomChange","IconButton","color","onUpdateClick","Toolbar","isValidVariable","variable","Array","isArray","length","isValidIDName","id_name","isValidURL","url","test","orgRound","base","Math","round","calculateDueDate","start_date_str","duration","start_date","Date","due_date","moment","add","toDate","date2string","date","string","toLocaleDateString","getFullYear","getMonth","getDate","adjustDateString","date_str","getGanttStartDate","created_at","getGanttDueDate","getGanttDuration","start_date_moment","diff","calculateDuration","removeFirstSharp","id_str","substring","removeLastSpace","slice","parseYamlFromDescription","description","yaml_part","str","split","getYamlPartFromDescription","yaml_struct","yaml","load","gantt","message","text","getNumberFromDescriptionYaml","column_name","number","getDateFromDescriptionYaml","getStringFromDescriptionYaml","replacePropertyInDescriptionString","task","task_section","dump","first_section","convertIDNameListToString","list","map","info","id","convertIDNamesStringToList","split_string","forEach","element","index","array","isNaN","parseInt","push","GitHubAPIURL","GitHubURL","isGitHubURL","git_url","getGitHubNameSpaceFromGitURL","split_git_url","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","getGitHubAPIURLIssueFilterd","url_query_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","getGitHubURLIssuebyNumber","n","Number","isFinite","isGitLabURL","getSelfHostingGitLabDomain","getGitLabDomain","gitlab_domain","self_hosting_gitlab_domain","getGitLabURL","getGitLabAPIURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterd","getGitabAPIURLIssuebyNumber","getGitLabAPIURLLabel","getGitLabAPIURLMember","getGitHubAssignee","issue_info","login","generateGanttTaskFromGitHub","title","progress","parent","updateGitHubDescriptionStringFromGanttTask","gantt_task","replace","getGitHubIssuesFromAPI","gantt_parse","a","axios","get","then","res","data","body","addTask","sort","catch","err","console","log","setGitHubLabelListOfRepoFromAPI","setLabels","setGitHubMemberListOfRepoFromAPI","headers","Authorization","warn","openGitHubNewIssueAtBrowser","encodeURIComponent","window","open","getGitHubURLNewIssueWithTemplate","getGitLabAssignee","generateGanttTaskFromGitLab","iid","getGitLabIssuesFromAPI","links","setGitLabLabelListOfRepoFromAPI","lebel_info","setGitLabMemberListOfRepoFromAPI","updateGitLabIssueFromGanttTask","updateGitLabDescriptionStringFromGanttTask","due_date_str","put_url","put","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","setLabelListOfRepoFromAPI","setMemberListOfRepoFromAPI","setMemberList","updateIssueByAPI","gantt_task_id","post","updateGitHubIssueFromGanttTask","openIssueAtBrowser","openGitHubIssueAtBrowser","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","shortenDate","setGanttConfig","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","open_tree_initially","fit_tasks","columns","template","getWBSCode","align","tree","obj","templates","timeline_cell_class","item","getDay","rightside_text","start","end","task_text","plugins","quick_info","drag_timeline","ext","zoom","init","attachEvent","openNewIssueAtBrowser","getTask","locale","detail_button","$click","buttons","quickInfo","setContent","header","ReactDOMServer","renderToStaticMarkup","toString","content","Gantt","containerRef","useRef","useEffect","current","setLevel","eachTask","$open","clearAll","parse","update","ref","initialState","currentZoom","reducerFunc","state","action","handleGitURLChange","handleTokenChange","handleSelectedLabelsChange","handleSelectedAssigneeChange","handleOpenIssueAtBrowser","handleOpenNewIssueAtBrowser","handleUpdateIssueByAPI","setStateFromURLQueryString","setValue","setURLQuery","bake_cookie","URLSearchParams","location","search","set","history","selected_assignee_list","withRouter","useReducer","dispatch","useForm","read_cookie","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f46c03b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst Toolbar = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <form noValidate>\r\n      <TextField\r\n        className={classes.root}\r\n        required\r\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\r\n        label=\"Git Repository URL\"\r\n        style={{ width: '25%', verticalAlign: 'middle' }}\r\n        onChange={(e) => {\r\n          props.onGitURLChange(e.target.value);\r\n        }}\r\n        inputRef={props.register}\r\n        name=\"git_url\"\r\n      />\r\n      <TextField\r\n        className={classes.root}\r\n        type=\"password\"\r\n        placeholder=\"Access Token\"\r\n        label=\"Access Token\"\r\n        style={{ width: '10%', verticalAlign: 'middle' }}\r\n        onChange={(e) => {\r\n          props.onTokenChange(e.target.value);\r\n        }}\r\n        inputRef={props.register}\r\n        name=\"token\"\r\n      />\r\n      <Multiselect\r\n        className={classes.root}\r\n        options={props.labels}\r\n        selectedValues={props.selected_labels}\r\n        onSelect={(options) => {\r\n          props.onSelectedLabelChange(options);\r\n        }}\r\n        onRemove={(options) => {\r\n          props.onSelectedLabelChange(options);\r\n        }}\r\n        displayValue=\"name\"\r\n        style={selector_style}\r\n        placeholder=\"filter by labels\"\r\n        hidePlaceholder=\"false\"\r\n        emptyRecordMsg=\"No Labels\"\r\n        closeIcon=\"cancel\"\r\n      />\r\n      <Autocomplete\r\n        className={classes.root}\r\n        size=\"small\"\r\n        options={props.member_list}\r\n        getOptionLabel={(option) => option.name}\r\n        value={props.selected_assignee}\r\n        onChange={(e, assignee) => {\r\n          props.onSelectedAssigneeChange(assignee);\r\n        }}\r\n        style={{\r\n          width: '15%',\r\n          verticalAlign: 'middle',\r\n          display: 'inline-block',\r\n          marginRight: '15px',\r\n        }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            className={classes.root}\r\n            label=\"Assignee\"\r\n            variant=\"standard\"\r\n          />\r\n        )}\r\n      />\r\n      <ButtonGroup size=\"small\" style={{ height: '34px' }}>\r\n        <Button\r\n          onClick={(e) => {\r\n            props.onZoomChange('Weeks');\r\n          }}\r\n        >\r\n          Weeks\r\n        </Button>\r\n        <Button\r\n          onClick={(e) => {\r\n            props.onZoomChange('Days');\r\n          }}\r\n        >\r\n          Days\r\n        </Button>\r\n      </ButtonGroup>\r\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\r\n        <CachedIcon\r\n          onClick={(e) => {\r\n            props.onUpdateClick();\r\n          }}\r\n        />\r\n      </IconButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      fontSize: '13px',\r\n      marginRight: '4px',\r\n    },\r\n  },\r\n});\r\n\r\nconst selector_style = {\r\n  multiselectContainer: {\r\n    width: '30%',\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n    padding: '4px',\r\n    alignItems: 'flex-end',\r\n  },\r\n  chips: {\r\n    background: 'light blue',\r\n    fontSize: '15px',\r\n  },\r\n  searchBox: {\r\n    border: 'none',\r\n  },\r\n};\r\n\r\nexport default withStyles(styles)(Toolbar);\r\n","import Toolbar from './Toolbar';\r\nimport './Toolbar.css';\r\nexport default Toolbar;","import moment from 'moment';\r\n\r\nexport const isValidVariable = (variable) => {\r\n  if (\r\n    variable !== null &&\r\n    variable !== [] &&\r\n    variable !== void 0 &&\r\n    variable !== ''\r\n  ) {\r\n    return true;\r\n  }\r\n  if (Array.isArray(variable)) {\r\n    return variable.length > 0;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const validVariable = (variable) => {\r\n  if (isValidVariable(variable)) {\r\n    return variable;\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const isValidIDName = (id_name) => {\r\n  return isValidVariable(id_name) && 'id' in id_name && 'name' in id_name;\r\n};\r\n\r\nexport const isValidURL = (url) => {\r\n  if (!isValidVariable(url)) {\r\n    return false;\r\n  }\r\n  return /https:\\/\\//.test(url);\r\n};\r\n\r\nexport const isNumber = (n) => {\r\n  if (typeof n === 'number' && Number.isFinite(n)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const orgRound = (value, base) => {\r\n  return Math.round(value / base) * base;\r\n};\r\n\r\nconst calculateDuration = (start_date, due_date) => {\r\n  const start_date_moment = moment(start_date, 'YYYY/MM/DD');\r\n  const due_date_moment = moment(due_date, 'YYYY/MM/DD');\r\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\r\n};\r\n\r\nexport const calculateDueDate = (start_date_str, duration) => {\r\n  const start_date = new Date(start_date_str);\r\n  const due_date = moment(start_date, 'YYYY/MM/DD')\r\n    .add(duration - 1, 'd')\r\n    .toDate();\r\n  return date2string(due_date);\r\n};\r\n\r\nexport const date2string = (date) => {\r\n  let string = date.toLocaleDateString('ja-JP');\r\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(string)) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    string = year + '/' + month + '/' + day;\r\n  }\r\n  return string;\r\n};\r\n\r\nexport const adjustDateString = (date_str) => {\r\n  return date2string(new Date(date_str));\r\n};\r\n\r\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\r\n  let start_date_str = null;\r\n  if (start_date != null && due_date != null) {\r\n    start_date_str = date2string(start_date);\r\n  } else {\r\n    start_date_str = adjustDateString(created_at);\r\n  }\r\n  return start_date_str;\r\n};\r\n\r\nexport const getGanttDueDate = (start_date, due_date, created_at) => {\r\n  let due_date_str = null;\r\n  if (start_date != null && due_date != null) {\r\n    due_date_str = new Date(due_date);\r\n  } else {\r\n    due_date_str = new Date(created_at);\r\n  }\r\n  return due_date_str;\r\n};\r\n\r\nexport const getGanttDuration = (start_date, due_date) => {\r\n  let duration = null;\r\n  if (start_date != null && due_date != null) {\r\n    duration = calculateDuration(start_date, due_date);\r\n  } else {\r\n    duration = 1;\r\n  }\r\n  return duration;\r\n};\r\n","import { isValidVariable, isValidIDName, isNumber } from './CommonHelper.js';\r\nimport yaml from 'js-yaml';\r\nimport { gantt } from 'dhtmlx-gantt';\r\n\r\nexport const removeFirstSharp = (id_str) => {\r\n  if (id_str.length > 1 && /^#/.test(id_str)) {\r\n    id_str = id_str.substring(1);\r\n  }\r\n  return id_str;\r\n};\r\n\r\nexport const removeLastSlash = (url) => {\r\n  if (url.length > 1 && /\\/$/.test(url)) {\r\n    url = url.slice(0, -1);\r\n  }\r\n  return url;\r\n};\r\n\r\nexport const removeLastSpace = (url) => {\r\n  if (url.length > 1 && / +$/.test(url)) {\r\n    url = url.slice(0, -1);\r\n  }\r\n  return url;\r\n};\r\n\r\nexport const getYamlPartFromDescription = (description) => {\r\n  if (description === null) {\r\n    return null;\r\n  }\r\n  if (typeof description !== 'string') {\r\n    return null;\r\n  }\r\n  let str = description.split(/^```yaml/);\r\n  if (str === null || str.length < 2) {\r\n    return null;\r\n  }\r\n  str = str[1].split(/```/);\r\n  if (str === null || str.length < 2) {\r\n    return null;\r\n  }\r\n  return str[0];\r\n};\r\n\r\nexport const parseYamlFromDescription = (description) => {\r\n  if (description === null) {\r\n    return null;\r\n  }\r\n  const yaml_part = getYamlPartFromDescription(description);\r\n  if (yaml_part === null) {\r\n    return null;\r\n  }\r\n\r\n  let yaml_struct = null;\r\n  try {\r\n    yaml_struct = yaml.load(yaml_part);\r\n  } catch (e) {\r\n    gantt.message({ text: 'failed load yaml' + yaml_part, type: 'error' });\r\n  }\r\n  return yaml_struct;\r\n};\r\n\r\nexport const getStringFromDescriptionYaml = (description, column_name) => {\r\n  if (description === null) {\r\n    return null;\r\n  }\r\n  const yaml_struct = parseYamlFromDescription(description);\r\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\r\n    return null;\r\n  }\r\n  const string = yaml_struct[column_name];\r\n  if (typeof string !== 'string') {\r\n    return null;\r\n  }\r\n  return removeLastSpace(removeLastSpace(string));\r\n};\r\n\r\nexport const getNumberFromDescriptionYaml = (description, column_name) => {\r\n  if (description === null) {\r\n    return null;\r\n  }\r\n  const yaml_struct = parseYamlFromDescription(description);\r\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\r\n    return null;\r\n  }\r\n  const number = yaml_struct[column_name];\r\n  if (typeof number !== 'number') {\r\n    return null;\r\n  }\r\n  return number;\r\n};\r\n\r\nexport const getDateFromDescriptionYaml = (description, column_name) => {\r\n  if (description === null) {\r\n    return null;\r\n  }\r\n  const date = getStringFromDescriptionYaml(description, column_name);\r\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(date)) {\r\n    return null;\r\n  }\r\n  return new Date(date);\r\n};\r\n\r\nexport const replacePropertyInDescriptionString = (description, task) => {\r\n  if (description === null || task === null) {\r\n    return null;\r\n  }\r\n  let task_section = yaml.dump(task);\r\n  task_section =\r\n    `\\`\\`\\`yaml\r\n` +\r\n    task_section +\r\n    `\\`\\`\\``;\r\n  let str = description.split(/^```yaml/);\r\n  if (str === null || str.length < 2) {\r\n    if (/```/.test(description)) {\r\n      return null;\r\n    }\r\n    return task_section + '\\n' + description;\r\n  }\r\n  const first_section = str[0];\r\n  str = str[1].split(/```/);\r\n  if (str === null || str.length < 2) {\r\n    return null;\r\n  }\r\n  const end_section = str[1];\r\n  return first_section + task_section + end_section;\r\n};\r\n\r\nexport const convertIDNameListToString = (list) => {\r\n  let string = '';\r\n  if (isValidVariable(list)) {\r\n    list.map((info) => {\r\n      if (isValidIDName(info) && isValidVariable(info.id)) {\r\n        string += info.id + ':' + info.name + ',';\r\n      }\r\n      return null;\r\n    });\r\n    return string;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const convertIDNamesStringToList = (string) => {\r\n  let list = [];\r\n  if (isValidVariable(string)) {\r\n    const split_string = string.split(',');\r\n    split_string.forEach((element, index, array) => {\r\n      if (index < split_string.length - 1) {\r\n        const info = element.split(':');\r\n        if (!isNaN(parseInt(info[0]))) {\r\n          const label = {\r\n            id: parseInt(info[0]),\r\n            name: info[1],\r\n          };\r\n          list.push(label);\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    list = [{ id: 0, name: '' }];\r\n  }\r\n  return list;\r\n};\r\n","import {\r\n  isValidVariable,\r\n  isValidIDName,\r\n  isValidURL,\r\n  isNumber,\r\n} from '../Common/CommonHelper.js';\r\nimport { removeFirstSharp } from '../Common/Parser.js';\r\n\r\nconst GitHubAPIURL = 'https://api.github.com/repos/';\r\nconst GitHubURL = 'https://github.com/';\r\n\r\nexport const isGitHubURL = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return false;\r\n  }\r\n  if (git_url.split('/').length < 5) {\r\n    return false;\r\n  }\r\n  return /github\\.com/.test(git_url);\r\n};\r\n\r\nexport const getGitHubNameSpaceFromGitURL = (git_url) => {\r\n  if (!isGitHubURL(git_url)) {\r\n    return null;\r\n  }\r\n  const split_git_url = git_url.split('/');\r\n  if (split_git_url.length >= 5) {\r\n    return split_git_url[3];\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getGitHubProjectFromGitURL = (git_url) => {\r\n  if (!isGitHubURL(git_url)) {\r\n    return null;\r\n  }\r\n  const split_git_url = git_url.split('/');\r\n  if (split_git_url.length >= 5) {\r\n    return split_git_url[4];\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getGitHubAPIURLIssue = (git_url) => {\r\n  if (!isGitHubURL(git_url)) {\r\n    return null;\r\n  }\r\n  return (\r\n    GitHubAPIURL +\r\n    getGitHubNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitHubProjectFromGitURL(git_url) +\r\n    '/issues'\r\n  );\r\n};\r\n\r\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\r\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\r\n    return null;\r\n  }\r\n  return (\r\n    GitHubAPIURL +\r\n    getGitHubNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitHubProjectFromGitURL(git_url) +\r\n    '/issues/' +\r\n    number\r\n  );\r\n};\r\n\r\nexport const getGitHubAPIURLIssueFilterd = (git_url, labels, assignee) => {\r\n  if (\r\n    !isGitHubURL(git_url) ||\r\n    !isValidVariable(labels) ||\r\n    !isValidVariable(assignee)\r\n  ) {\r\n    return null;\r\n  }\r\n  let url_query_str = '?';\r\n  url_query_str += 'labels=';\r\n  labels.map((label) => {\r\n    if (isValidIDName(label)) {\r\n      url_query_str += label.name + ',';\r\n    }\r\n  });\r\n\r\n  if (isValidIDName(assignee)) {\r\n    if (assignee.name !== '') {\r\n      url_query_str += '&assignee=' + assignee.name;\r\n    }\r\n  }\r\n  return (\r\n    GitHubAPIURL +\r\n    getGitHubNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitHubProjectFromGitURL(git_url) +\r\n    '/issues' +\r\n    url_query_str\r\n  );\r\n};\r\n\r\nexport const getGitHubAPIURLLabel = (git_url) => {\r\n  if (!isGitHubURL(git_url)) {\r\n    return null;\r\n  }\r\n  return (\r\n    GitHubAPIURL +\r\n    getGitHubNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitHubProjectFromGitURL(git_url) +\r\n    '/labels'\r\n  );\r\n};\r\n\r\nexport const getGitHubAPIURLCollaborators = (git_url) => {\r\n  if (!isGitHubURL(git_url)) {\r\n    return null;\r\n  }\r\n  return (\r\n    GitHubAPIURL +\r\n    getGitHubNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitHubProjectFromGitURL(git_url) +\r\n    '/collaborators'\r\n  );\r\n};\r\n\r\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\r\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\r\n    return null;\r\n  }\r\n  if (!isNumber(number)) {\r\n    number = removeFirstSharp(number);\r\n  }\r\n  if (number <= 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    GitHubURL +\r\n    getGitHubNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitHubProjectFromGitURL(git_url) +\r\n    '/issues/' +\r\n    number\r\n  );\r\n};\r\n\r\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\r\n  if (!isGitHubURL(git_url)) {\r\n    return null;\r\n  }\r\n  return (\r\n    GitHubURL +\r\n    getGitHubNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitHubProjectFromGitURL(git_url) +\r\n    '/issues/new?assignees=&labels=&title=&body='\r\n  );\r\n};\r\n","import {\r\n  isValidVariable,\r\n  isValidIDName,\r\n  isValidURL,\r\n} from '../Common/CommonHelper.js';\r\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\r\n\r\nexport const isGitLabURL = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return false;\r\n  }\r\n  if (git_url.split('/').length < 5) {\r\n    return false;\r\n  }\r\n  return /gitlab\\.com/.test(git_url);\r\n};\r\n\r\nexport const getSelfHostingGitLabDomain = (git_url) => {\r\n  if (isGitHubURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  const split_git_url = git_url.split('/');\r\n  if (split_git_url.length >= 5) {\r\n    return split_git_url[2];\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getGitLabDomain = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  let gitlab_domain = null;\r\n  const self_hosting_gitlab_domain = getSelfHostingGitLabDomain(git_url);\r\n  if (self_hosting_gitlab_domain !== null) {\r\n    gitlab_domain = 'https://' + self_hosting_gitlab_domain + '/';\r\n  }\r\n  return gitlab_domain;\r\n};\r\n\r\nexport const getGitLabURL = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  return getGitLabDomain(git_url);\r\n};\r\n\r\nexport const getGitLabAPIURL = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  return getGitLabDomain(git_url) + 'api/v4/projects/';\r\n};\r\n\r\nexport const getGitLabNameSpaceFromGitURL = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  const split_git_url = git_url.split('/');\r\n  if (split_git_url.length >= 5) {\r\n    return split_git_url[3];\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getGitLabProjectFromGitURL = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  const split_git_url = git_url.split('/');\r\n  if (split_git_url.length >= 5) {\r\n    return split_git_url[4];\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const postFixToken = (token) => {\r\n  let post_fix_str = '?';\r\n  if (\r\n    isValidVariable(token) &&\r\n    token !== 'Tokens that have not yet been entered'\r\n  ) {\r\n    post_fix_str += 'access_token=' + token;\r\n  } \r\n  return post_fix_str;\r\n};\r\n\r\nexport const getGitLabAPIURLIssueFilterd = (\r\n  git_url,\r\n  token,\r\n  labels,\r\n  assignee\r\n) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (!isValidVariable(token)) {\r\n    return null;\r\n  }\r\n  if (!isValidVariable(labels)) {\r\n    return null;\r\n  }\r\n  if (!isValidIDName(assignee)) {\r\n    return null;\r\n  }\r\n  let post_fix_str = postFixToken(token);\r\n  if (isValidVariable(labels)) {\r\n    post_fix_str += '&labels=';\r\n    labels.map((label) => {\r\n      if (isValidIDName(label)) {\r\n        post_fix_str += label.name + ',';\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n  if (isValidIDName(assignee)) {\r\n    if (assignee.name !== '') {\r\n      post_fix_str += '&assignee_id=' + assignee.id;\r\n    }\r\n  }\r\n  post_fix_str += '&per_page=100&state=opened';\r\n  return (\r\n    getGitLabAPIURL(git_url) +\r\n    getGitLabNameSpaceFromGitURL(git_url) +\r\n    '%2F' +\r\n    getGitLabProjectFromGitURL(git_url) +\r\n    '/issues' +\r\n    post_fix_str\r\n  );\r\n};\r\n\r\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (!isValidVariable(token)) {\r\n    return null;\r\n  }\r\n  if (!isValidVariable(number)) {\r\n    return null;\r\n  }\r\n  const post_fix_str = postFixToken(token);\r\n  return (\r\n    getGitLabAPIURL(git_url) +\r\n    getGitLabNameSpaceFromGitURL(git_url) +\r\n    '%2F' +\r\n    getGitLabProjectFromGitURL(git_url) +\r\n    '/issues/' +\r\n    number +\r\n    post_fix_str\r\n  );\r\n};\r\n\r\nexport const getGitLabAPIURLLabel = (git_url, token) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  const post_fix_str = postFixToken(token);\r\n  return (\r\n    getGitLabAPIURL(git_url) +\r\n    getGitLabNameSpaceFromGitURL(git_url) +\r\n    '%2F' +\r\n    getGitLabProjectFromGitURL(git_url) +\r\n    '/labels' +\r\n    post_fix_str\r\n  );\r\n};\r\n\r\nexport const getGitLabAPIURLMember = (git_url, token) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  const post_fix_str = postFixToken(token);\r\n  return (\r\n    getGitLabAPIURL(git_url) +\r\n    getGitLabNameSpaceFromGitURL(git_url) +\r\n    '%2F' +\r\n    getGitLabProjectFromGitURL(git_url) +\r\n    '/members/all' +\r\n    post_fix_str\r\n  );\r\n};\r\n\r\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  return (\r\n    getGitLabURL(git_url) +\r\n    getGitLabNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitLabProjectFromGitURL(git_url) +\r\n    '/-/issues/' +\r\n    number\r\n  );\r\n};\r\n\r\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  return (\r\n    getGitLabURL(git_url) +\r\n    getGitLabNameSpaceFromGitURL(git_url) +\r\n    '/' +\r\n    getGitLabProjectFromGitURL(git_url) +\r\n    '/issues/new?issue[description]='\r\n  );\r\n};\r\n","import {\r\n  getDateFromDescriptionYaml,\r\n  getNumberFromDescriptionYaml,\r\n  removeFirstSharp,\r\n  replacePropertyInDescriptionString,\r\n} from '../Common/Parser.js';\r\nimport {\r\n  calculateDueDate,\r\n  getGanttStartDate,\r\n  getGanttDueDate,\r\n  getGanttDuration,\r\n  orgRound,\r\n  adjustDateString,\r\n} from '../Common/CommonHelper.js';\r\n\r\nconst getGitHubAssignee = (issue_info) => {\r\n  if (issue_info.assignee !== null) {\r\n    return issue_info.assignee.login;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\r\n  const start_date = getDateFromDescriptionYaml(description, 'start_date');\r\n  const due_date = getDateFromDescriptionYaml(description, 'due_date');\r\n\r\n  const gantt_task = {\r\n    id: '#' + issue_info.number,\r\n    text: issue_info.title,\r\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\r\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\r\n    duration: getGanttDuration(start_date, due_date),\r\n    progress: getNumberFromDescriptionYaml(description, 'progress'),\r\n    assignee: getGitHubAssignee(issue_info),\r\n    parent: '#' + getNumberFromDescriptionYaml(description, 'parent'),\r\n    description: description,\r\n  };\r\n  return gantt_task;\r\n};\r\n\r\nexport const updateGitHubDescriptionStringFromGanttTask = (\r\n  description,\r\n  gantt_task\r\n) => { \r\n  const start_date_str = adjustDateString(gantt_task.start_date)\r\n    .replace(/\\-/g, '/');\r\n  const due_date_str = calculateDueDate(\r\n    start_date_str,\r\n    gantt_task.duration\r\n  ).replace(/\\-/g, '/');\r\n  const task = {\r\n    start_date: start_date_str,\r\n    due_date: due_date_str,\r\n    progress: orgRound(gantt_task.progress, 0.01),\r\n  };\r\n  if ('parent' in gantt_task) {\r\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\r\n  }\r\n  description = replacePropertyInDescriptionString(description, task);\r\n  return description;\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  getGitHubAPIURLIssuebyNumber,\r\n  getGitHubAPIURLIssueFilterd,\r\n  getGitHubAPIURLLabel,\r\n  getGitHubAPIURLCollaborators,\r\n  getGitHubURLIssuebyNumber,\r\n  getGitHubURLNewIssueWithTemplate,\r\n} from './GitHubURLHelper.js';\r\nimport {\r\n  generateGanttTaskFromGitHub,\r\n  updateGitHubDescriptionStringFromGanttTask,\r\n} from './GitHubHelper.js';\r\nimport { date2string, isValidVariable } from '../Common/CommonHelper.js';\r\nimport {\r\n  removeFirstSharp,\r\n  replacePropertyInDescriptionString,\r\n} from '../Common/Parser.js';\r\n\r\nexport const getGitHubIssuesFromAPI = async (\r\n  gantt_parse,\r\n  gantt,\r\n  git_url,\r\n  selected_labels,\r\n  selected_assignee\r\n) => {\r\n  axios\r\n    .get(\r\n      getGitHubAPIURLIssueFilterd(git_url, selected_labels, selected_assignee)\r\n    )\r\n    .then((res) => {\r\n      res.data.map((issue_info) => {\r\n        axios\r\n          .get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number))\r\n          .then((res) => {\r\n            const gantt_task = generateGanttTaskFromGitHub(\r\n              res.data.body,\r\n              issue_info\r\n            );\r\n            gantt.addTask(gantt_task);\r\n            gantt.sort('due_date', false);\r\n          });\r\n        return null;\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      // gantt.message({\r\n      //   text: 'failed get GitHub issue. check your url or token.',\r\n      //   type: 'error',\r\n      // });\r\n    });\r\n};\r\n\r\nexport const setGitHubLabelListOfRepoFromAPI = async (\r\n  setLabels,\r\n  git_url,\r\n  token\r\n) => {\r\n  axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\r\n    let list = [];\r\n    res.data.map((info) => {\r\n      list.push({ id: info.id, name: info.name });\r\n      return null;\r\n    });\r\n    setLabels(list);\r\n  });\r\n};\r\n\r\nexport const setGitHubMemberListOfRepoFromAPI = async (\r\n  setLabels,\r\n  git_url,\r\n  token\r\n) => {\r\n  if (\r\n    isValidVariable(token) &&\r\n    token !== 'Tokens that have not yet been entered'\r\n  ) {\r\n    axios\r\n      .get(getGitHubAPIURLCollaborators(git_url), {\r\n        headers: { Authorization: `token ${token}` },\r\n        data: {},\r\n      })\r\n      .then((res) => {\r\n        let list = [];\r\n        res.data.map((info) => {\r\n          list.push({ id: info.id, name: info.login });\r\n          return null;\r\n        });\r\n        setLabels(list);\r\n      });\r\n  } else {\r\n    console.warn('token is not valid!');\r\n  }\r\n};\r\n\r\nexport const updateGitHubIssueFromGanttTask = (\r\n  gantt_task,\r\n  token,\r\n  gantt,\r\n  git_url\r\n) => {\r\n  const url = getGitHubAPIURLIssuebyNumber(\r\n    git_url,\r\n    removeFirstSharp(gantt_task.id)\r\n  );\r\n  axios\r\n    .get(url)\r\n    .then((res) => {\r\n      axios\r\n        .post(\r\n          url,\r\n          {\r\n            body: updateGitHubDescriptionStringFromGanttTask(\r\n              res.data.body,\r\n              gantt_task\r\n            ),\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `token ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          gantt.message({ text: 'success update issue.  ' + gantt_task.id });\r\n        })\r\n        .catch((err) => {\r\n          gantt.message({\r\n            text: 'failed update GitHub issue. check your token.',\r\n            type: 'error',\r\n          });\r\n          getGitHubIssuesFromAPI(gantt, git_url);\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      gantt.message({\r\n        text: 'failed get GitHub issue. check your url.',\r\n        type: 'error',\r\n      });\r\n      getGitHubIssuesFromAPI(gantt, git_url);\r\n    });\r\n  return null;\r\n};\r\n\r\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\r\n  window.open(\r\n    getGitHubURLIssuebyNumber(git_url, removeFirstSharp(gantt_task_id)),\r\n    '_blank'\r\n  );\r\n};\r\n\r\nexport const openGitHubNewIssueAtBrowser = (gantt_task, git_url) => {\r\n  const start_date_str = date2string(new Date());\r\n  const due_date_str = date2string(new Date());\r\n  const task = {\r\n    start_date: start_date_str,\r\n    due_date: due_date_str,\r\n    progress: 0.1,\r\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\r\n  };\r\n  let body = replacePropertyInDescriptionString('', task);\r\n  body = encodeURIComponent(body);\r\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, '_blank');\r\n};\r\n","import {\r\n  removeFirstSharp,\r\n  getDateFromDescriptionYaml,\r\n  getNumberFromDescriptionYaml,\r\n  replacePropertyInDescriptionString,\r\n} from '../Common/Parser.js';\r\nimport {\r\n  getGanttStartDate,\r\n  getGanttDueDate,\r\n  getGanttDuration,\r\n  orgRound,\r\n  adjustDateString,\r\n} from '../Common/CommonHelper.js';\r\n\r\nconst getGitLabAssignee = (issue_info) => {\r\n  if ('assignee' in issue_info) {\r\n    if ('name' in issue_info.assignee) {\r\n      return issue_info.assignee.name;\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const generateGanttTaskFromGitLab = (issue_info) => {\r\n  const start_date = getDateFromDescriptionYaml(\r\n    issue_info.description,\r\n    'start_date'\r\n  );\r\n  const due_date = adjustDateString(issue_info.due_date);\r\n  const gantt_task = {\r\n    id: '#' + issue_info.iid,\r\n    text: issue_info.title,\r\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\r\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\r\n    duration: getGanttDuration(start_date, due_date),\r\n    progress: getNumberFromDescriptionYaml(issue_info.description, 'progress'),\r\n    assignee: getGitLabAssignee(issue_info),\r\n    description: issue_info.description,\r\n  };\r\n  let parent = getNumberFromDescriptionYaml(issue_info.description, 'parent');\r\n  if (parent !== null) {\r\n    if (parent !== 0) {\r\n      gantt_task.parent = '#' + parent;\r\n    }\r\n  }\r\n  return gantt_task;\r\n};\r\n\r\nexport const updateGitLabDescriptionStringFromGanttTask = (\r\n  description,\r\n  gantt_task\r\n) => {\r\n  const start_date_str = adjustDateString(gantt_task.start_date).replace(\r\n    /\\-/g,\r\n    '/'\r\n  );\r\n  const task = {\r\n    start_date: start_date_str,\r\n    progress: orgRound(gantt_task.progress, 0.01),\r\n  };\r\n  if ('parent' in gantt_task) {\r\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\r\n  }\r\n  return replacePropertyInDescriptionString(description, task);\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  getGitLabAPIURLIssueFilterd,\r\n  getGitLabAPIURLLabel,\r\n  getGitLabAPIURLMember,\r\n  getGitabAPIURLIssuebyNumber,\r\n  getGitLabURLIssuebyNumber,\r\n  getGitLabURLNewIssueWithTemplate,\r\n} from './GitLabURLHelper.js';\r\nimport {\r\n  generateGanttTaskFromGitLab,\r\n  updateGitLabDescriptionStringFromGanttTask,\r\n} from './GitLabHelper.js';\r\nimport {\r\n  adjustDateString,\r\n  calculateDueDate,\r\n  date2string,\r\n} from '../Common/CommonHelper.js';\r\nimport {\r\n  removeFirstSharp,\r\n  replacePropertyInDescriptionString,\r\n} from '../Common/Parser.js';\r\n\r\nexport const getGitLabIssuesFromAPI = async (\r\n  gantt_parse,\r\n  gantt,\r\n  git_url,\r\n  token,\r\n  selected_labels,\r\n  assignee\r\n) => {\r\n  axios\r\n    .get(getGitLabAPIURLIssueFilterd(git_url, token, selected_labels, assignee))\r\n    .then((res) => {\r\n      let data = [];\r\n      let links = [];\r\n      res.data.map((issue_info) => {\r\n        const gantt_task = generateGanttTaskFromGitLab(issue_info);\r\n        data.push(gantt_task);\r\n        return null;\r\n      });\r\n      gantt_parse({ data: data, links: links });\r\n    })\r\n    .catch((err) => {\r\n      gantt.message({\r\n        text: 'failed get GitLab issue. check your url or token.',\r\n        type: 'error',\r\n      });\r\n    });\r\n};\r\n\r\nexport const setGitLabLabelListOfRepoFromAPI = async (\r\n  setLabels,\r\n  git_url,\r\n  token\r\n) => {\r\n  axios.get(getGitLabAPIURLLabel(git_url, token)).then((res) => {\r\n    let list = [];\r\n    res.data.map((lebel_info) => {\r\n      list.push(lebel_info);\r\n      return null;\r\n    });\r\n    setLabels(list);\r\n  });\r\n};\r\n\r\nexport const setGitLabMemberListOfRepoFromAPI = async (\r\n  setLabels,\r\n  git_url,\r\n  token\r\n) => {\r\n  axios.get(getGitLabAPIURLMember(git_url, token)).then((res) => {\r\n    let list = [];\r\n    res.data.map((info) => {\r\n      list.push({ id: info.id, name: info.name });\r\n      return null;\r\n    });\r\n    setLabels(list);\r\n  });\r\n};\r\n\r\nexport const updateGitLabIssueFromGanttTask = (\r\n  gantt_task,\r\n  token,\r\n  gantt,\r\n  git_url\r\n) => {\r\n  axios\r\n    .get(\r\n      getGitabAPIURLIssuebyNumber(\r\n        git_url,\r\n        token,\r\n        removeFirstSharp(gantt_task.id)\r\n      )\r\n    )\r\n    .then((res) => {\r\n      const issue_info = res.data;\r\n      if (\r\n        parseInt(issue_info.iid) === parseInt(removeFirstSharp(gantt_task.id))\r\n      ) {\r\n        let description = updateGitLabDescriptionStringFromGanttTask(\r\n          issue_info.description,\r\n          gantt_task\r\n        );\r\n        description = encodeURIComponent(description);\r\n        const start_date_str = adjustDateString(gantt_task.start_date);\r\n        const due_date_str = calculateDueDate(\r\n          start_date_str,\r\n          gantt_task.duration\r\n        );\r\n        const put_url =\r\n          getGitabAPIURLIssuebyNumber(\r\n            git_url,\r\n            token,\r\n            removeFirstSharp(gantt_task.id)\r\n          ) +\r\n          '&description=' +\r\n          description +\r\n          '&due_date=' +\r\n          due_date_str;\r\n        axios\r\n          .put(put_url)\r\n          .then((res) => {\r\n            gantt.message({ text: 'success update issue.  ' + gantt_task.id });\r\n          })\r\n          .catch((err) => {\r\n            gantt.message({\r\n              text: 'failed update GitLab issue. check your token.',\r\n              type: 'error',\r\n            });\r\n            getGitLabIssuesFromAPI(gantt, git_url);\r\n          });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      gantt.message({\r\n        text: 'failed get GitLab issue. check your token.',\r\n        type: 'error',\r\n      });\r\n    });\r\n};\r\n\r\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\r\n  window.open(\r\n    getGitLabURLIssuebyNumber(git_url, removeFirstSharp(id)),\r\n    '_blank'\r\n  );\r\n};\r\n\r\nexport const openGitLabNewIssueAtBrowser = (gantt_task, git_url) => {\r\n  const start_date_str = date2string(new Date());\r\n  const task = {\r\n    start_date: start_date_str,\r\n    progress: 0.1,\r\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\r\n  };\r\n  let body = replacePropertyInDescriptionString('', task);\r\n  body = encodeURIComponent(body);\r\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, '_blank');\r\n};\r\n","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\r\nimport {\r\n  isGitLabURL,\r\n  getSelfHostingGitLabDomain,\r\n} from '../GitLab/GitLabURLHelper.js';\r\nimport {\r\n  getGitHubIssuesFromAPI,\r\n  updateGitHubIssueFromGanttTask,\r\n  openGitHubIssueAtBrowser,\r\n  openGitHubNewIssueAtBrowser,\r\n  setGitHubLabelListOfRepoFromAPI,\r\n  setGitHubMemberListOfRepoFromAPI,\r\n} from '../GitHub/GitHubAPI.js';\r\nimport {\r\n  getGitLabIssuesFromAPI,\r\n  updateGitLabIssueFromGanttTask,\r\n  openGitLabIssueAtBrowser,\r\n  openGitLabNewIssueAtBrowser,\r\n  setGitLabLabelListOfRepoFromAPI,\r\n  setGitLabMemberListOfRepoFromAPI,\r\n} from '../GitLab/GitLabAPI.js';\r\nimport { isValidURL } from '../Common/CommonHelper.js';\r\n\r\nexport const getIssuesFromAPI = async (\r\n  gantt_parse,\r\n  gantt,\r\n  git_url,\r\n  token,\r\n  selected_labels,\r\n  selected_assignee\r\n) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (isGitHubURL(git_url)) {\r\n    getGitHubIssuesFromAPI(\r\n      gantt_parse,\r\n      gantt,\r\n      git_url,\r\n      selected_labels,\r\n      selected_assignee\r\n    );\r\n  }\r\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\r\n    getGitLabIssuesFromAPI(\r\n      gantt_parse,\r\n      gantt,\r\n      git_url,\r\n      token,\r\n      selected_labels,\r\n      selected_assignee\r\n    );\r\n  }\r\n};\r\n\r\nexport const setLabelListOfRepoFromAPI = async (setLabels, git_url, token) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (isGitHubURL(git_url)) {\r\n    setGitHubLabelListOfRepoFromAPI(setLabels, git_url, token);\r\n  }\r\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\r\n    setGitLabLabelListOfRepoFromAPI(setLabels, git_url, token);\r\n  }\r\n};\r\n\r\nexport const setMemberListOfRepoFromAPI = async (\r\n  setMemberList,\r\n  git_url,\r\n  token\r\n) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (isGitHubURL(git_url)) {\r\n    setGitHubMemberListOfRepoFromAPI(setMemberList, git_url, token);\r\n  }\r\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\r\n    setGitLabMemberListOfRepoFromAPI(setMemberList, git_url, token);\r\n  }\r\n};\r\n\r\nexport const updateIssueByAPI = (gantt_task_id, token, gantt, git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (isGitHubURL(git_url)) {\r\n    updateGitHubIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\r\n  }\r\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\r\n    updateGitLabIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\r\n  }\r\n};\r\n\r\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (isGitHubURL(git_url)) {\r\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\r\n  }\r\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\r\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\r\n  }\r\n};\r\n\r\nexport const openNewIssueAtBrowser = (gantt_task, git_url) => {\r\n  if (!isValidURL(git_url)) {\r\n    return null;\r\n  }\r\n  if (isGitHubURL(git_url)) {\r\n    openGitHubNewIssueAtBrowser(gantt_task, git_url);\r\n  }\r\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\r\n    openGitLabNewIssueAtBrowser(gantt_task, git_url);\r\n  }\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\nimport { getIssuesFromAPI } from '../../functions/Common/IssueAPI.js';\r\nimport { date2string } from '../../functions/Common/CommonHelper.js';\r\n\r\nconst Gantt = (props) => {\r\n  const containerRef = useRef(null);\r\n  useEffect(() => {\r\n    setGanttConfig(gantt);\r\n    attachEvent(gantt, props);\r\n    gantt.init(containerRef.current);\r\n    gantt.ext.zoom.setLevel(props.zoom);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.zoom === 'Days') {\r\n      gantt.eachTask(function (task) {\r\n        task.$open = true;\r\n      });\r\n    } else {\r\n      gantt.eachTask(function (task) {\r\n        task.$open = false;\r\n      });\r\n    }\r\n    gantt.ext.zoom.setLevel(props.zoom);\r\n  }, [props.zoom]);\r\n\r\n  useEffect(() => {\r\n    gantt.clearAll();\r\n    getIssuesFromAPI(\r\n      (data) => {\r\n        gantt.parse(data);\r\n        gantt.sort('start_date', false);\r\n      },\r\n      gantt,\r\n      props.git_url,\r\n      props.token,\r\n      props.selected_labels,\r\n      props.selected_assignee\r\n    );\r\n  }, [\r\n    props.git_url,\r\n    props.token,\r\n    props.selected_labels,\r\n    props.selected_assignee,\r\n    props.update,\r\n  ]);\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}></div>\r\n  );\r\n};\r\n\r\nconst zoom_level = {\r\n  levels: [\r\n    {\r\n      name: 'Days',\r\n      scale_height: 60,\r\n      min_column_width: 70,\r\n      scales: [{ unit: 'day', step: 1, format: '%n/%d' }],\r\n    },\r\n    {\r\n      name: 'Weeks',\r\n      scale_height: 60,\r\n      min_column_width: 70,\r\n      scales: [\r\n        { unit: 'month', step: 1, format: '%Y年 %n月' },\r\n        { unit: 'week', step: 1, format: '%n/%d~' },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst shortenDate = (date) => {\r\n  const m = ('00' + (date.getMonth() + 1)).slice(-2);\r\n  const d = ('00' + date.getDate()).slice(-2);\r\n  const shorten_date = m + '/' + d;\r\n  return shorten_date;\r\n};\r\n\r\nconst setGanttConfig = (gantt) => {\r\n  gantt.config.xml_date = '%Y/%m/%d %H:%i';\r\n  gantt.config.order_branch = true;\r\n  gantt.config.order_branch_free = true;\r\n\r\n  gantt.config.keep_grid_width = true;\r\n  gantt.config.grid_resize = true;\r\n  gantt.config.open_tree_initially = true;\r\n  gantt.config.fit_tasks = true;\r\n\r\n  gantt.config.sort = true;\r\n\r\n  gantt.config.columns = [\r\n    { name: 'wbs', label: 'WBS', width: 40, template: gantt.getWBSCode },\r\n    { name: 'id', label: 'No.', align: 'left', tree: true, width: '*' },\r\n    {\r\n      name: 'start_date',\r\n      label: 'Start ',\r\n      align: 'center',\r\n      width: '100',\r\n      template: (obj) => {\r\n        return shortenDate(obj.start_date);\r\n      },\r\n    },\r\n    {\r\n      name: 'due_date',\r\n      label: 'due ',\r\n      align: 'center',\r\n      width: '100',\r\n      template: (obj) => {\r\n        return shortenDate(obj.due_date);\r\n      },\r\n    },\r\n    { name: 'assignee', label: 'Assignee', align: 'center', width: '150' },\r\n    { name: 'add', label: '' },\r\n  ];\r\n\r\n  gantt.templates.timeline_cell_class = function (item, date) {\r\n    if (\r\n      date2string(date) === date2string(new Date())\r\n    ) {\r\n      return 'today';\r\n    }\r\n    if (date.getDay() === 0 || date.getDay() === 6) {\r\n      return 'weekend';\r\n    }\r\n  };\r\n\r\n  gantt.templates.rightside_text = function (start, end, task) {\r\n    return task.text;\r\n  };\r\n\r\n  gantt.templates.task_text = function (start, end, task) {\r\n    return (\r\n      \"<span style='text-align:left;'>\" +\r\n      Math.round(task.progress * 100) +\r\n      '% </span>'\r\n    );\r\n  };\r\n\r\n  gantt.plugins({\r\n    quick_info: true,\r\n    drag_timeline: true,\r\n  });\r\n  gantt.ext.zoom.init(zoom_level);\r\n};\r\n\r\nconst attachEvent = (gantt, props) => {\r\n  gantt.attachEvent('onTaskDblClick', (gantt_task_id, e) => {\r\n    props.openIssueAtBrowser(gantt_task_id);\r\n  });\r\n  gantt.attachEvent('onTaskCreated', (gantt_task_id, e) => {\r\n    props.openNewIssueAtBrowser(gantt_task_id);\r\n  });\r\n  gantt.attachEvent('onAfterTaskUpdate', (id, gantt_task) => {\r\n    props.updateIssueByAPI(gantt_task, gantt);\r\n  });\r\n  gantt.attachEvent('onAfterTaskMove', (id, parent) => {\r\n    let gantt_task = gantt.getTask(id);\r\n    if ('parent' in gantt_task) {\r\n      if (gantt_task.parent !== 0) {\r\n        gantt_task.parent = parent;\r\n        props.updateIssueByAPI(gantt_task, gantt);\r\n      }\r\n    }\r\n  });\r\n  gantt.attachEvent('onQuickInfo', (id) => {\r\n    let gantt_task = gantt.getTask(id);\r\n    gantt.locale.labels.detail_button = 'DETAIL';\r\n    gantt.$click.buttons.detail_button = (gantt_task_id) => {\r\n      props.openIssueAtBrowser(gantt_task_id);\r\n      return true;\r\n    };\r\n\r\n    gantt.ext.quickInfo.setContent({\r\n      header: {\r\n        title: '',\r\n        date: ReactDOMServer.renderToStaticMarkup().toString(),\r\n      },\r\n      content: ReactDOMServer.renderToStaticMarkup(\r\n        <div>\r\n          <h3>{gantt_task.text}</h3>\r\n          <ReactMarkdown>{gantt_task.description}</ReactMarkdown>\r\n        </div>\r\n      ).toString(),\r\n      buttons: ['detail_button'],\r\n    });\r\n  });\r\n};\r\nexport default Gantt;\r\n","import Gantt from './Gantt';\r\nimport './Gantt.css';\r\nexport default Gantt;","import { bake_cookie } from 'sfcookies';\r\nimport {\r\n  convertIDNamesStringToList,\r\n  convertIDNameListToString,\r\n} from '../Common/Parser.js';\r\nimport {\r\n  updateIssueByAPI,\r\n  openIssueAtBrowser,\r\n  openNewIssueAtBrowser,\r\n} from '../Common/IssueAPI.js';\r\nimport { isValidVariable } from '../Common/CommonHelper.js';\r\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\r\nimport {\r\n  isGitLabURL,\r\n  getSelfHostingGitLabDomain,\r\n} from '../GitLab/GitLabURLHelper.js';\r\n\r\nimport { gantt } from 'dhtmlx-gantt';\r\n\r\nexport const initialState = {\r\n  currentZoom: 'Days',\r\n  update: 0,\r\n  git_url: '',\r\n  token: 'Tokens that have not yet been entered',\r\n  labels: [],\r\n  selected_labels: [],\r\n  member_list: [],\r\n  selected_assignee: {},\r\n};\r\n\r\nexport const reducerFunc = (state, action) => {\r\n  switch (action.type) {\r\n    case 'zoomChange':\r\n      return { ...state, currentZoom: action.value };\r\n    case 'gitURLChange':\r\n      return {\r\n        ...state,\r\n        git_url: handleGitURLChange(\r\n          action.value.props,\r\n          action.value.git_url,\r\n          state.selected_labels\r\n        ),\r\n      };\r\n    case 'tokenChange':\r\n      return { ...state, token: handleTokenChange(action.value) };\r\n    case 'labelChange':\r\n      return { ...state, labels: action.value };\r\n    case 'selectedLabelsChange':\r\n      return {\r\n        ...state,\r\n        selected_labels: handleSelectedLabelsChange(\r\n          action.value.props,\r\n          state.git_url,\r\n          action.value.selected_labels,\r\n          state.selected_assignee\r\n        ),\r\n      };\r\n    case 'memberListChange':\r\n      return { ...state, member_list: action.value };\r\n    case 'selectedAssigneeChange':\r\n      return {\r\n        ...state,\r\n        selected_assignee: handleSelectedAssigneeChange(\r\n          action.value.props,\r\n          state.git_url,\r\n          state.selected_labels,\r\n          action.value.selected_assignee\r\n        ),\r\n      };\r\n    case 'updateClick':\r\n      return { ...state, update: state.update + 1 };\r\n    case 'openIssueAtBrowser':\r\n      return handleOpenIssueAtBrowser(state, action);\r\n    case 'openNewIssueAtBrowser':\r\n      return handleOpenNewIssueAtBrowser(state, action);\r\n    case 'updateIssueByAPI':\r\n      return handleUpdateIssueByAPI(state, action);\r\n    case 'setStateFromURLQueryString':\r\n      return setStateFromURLQueryString(\r\n        state,\r\n        action.value.props,\r\n        action.value.setValue\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst handleOpenIssueAtBrowser = (state, action) => {\r\n  openIssueAtBrowser(action.value, state.git_url);\r\n  return state;\r\n};\r\n\r\nconst handleOpenNewIssueAtBrowser = (state, action) => {\r\n  openNewIssueAtBrowser(action.value, state.git_url);\r\n  return state;\r\n};\r\n\r\nconst handleUpdateIssueByAPI = (state, action) => {\r\n  updateIssueByAPI(\r\n    action.value.gantt_task,\r\n    state.token,\r\n    action.value.gantt,\r\n    state.git_url\r\n  );\r\n  return state;\r\n};\r\n\r\nconst handleGitURLChange = (\r\n  props,\r\n  git_url,\r\n  selected_labels,\r\n  selected_assignee\r\n) => {\r\n  if (isGitHubURL(git_url)) {\r\n    gantt.message({ text: 'Access GitHub.com' });\r\n  } else if (isGitLabURL(git_url)) {\r\n    gantt.message({ text: 'Access GitLab.com' });\r\n  } else if (getSelfHostingGitLabDomain(git_url) !== null) {\r\n    gantt.message({ text: 'Access Maybe GitLab.self-host' });\r\n  } else {\r\n    gantt.message({ text: 'Not a valid URL.', type: 'error' });\r\n    return null;\r\n  }\r\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\r\n  return git_url;\r\n};\r\n\r\nconst handleTokenChange = (token) => {\r\n  bake_cookie('git_token', token);\r\n  return token;\r\n};\r\n\r\nconst handleSelectedLabelsChange = (\r\n  props,\r\n  git_url,\r\n  selected_labels,\r\n  selected_assignee\r\n) => {\r\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\r\n  return selected_labels;\r\n};\r\n\r\nconst handleSelectedAssigneeChange = (\r\n  props,\r\n  git_url,\r\n  selected_labels,\r\n  selected_assignee\r\n) => {\r\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\r\n  return selected_assignee;\r\n};\r\n\r\nconst setURLQuery = (props, git_url, selected_labels, selected_assignee) => {\r\n  const params = new URLSearchParams(props.location.search);\r\n  params.set('giturl', git_url);\r\n  params.set('labels', convertIDNameListToString(selected_labels));\r\n  params.set('assignee', convertIDNameListToString([selected_assignee]));\r\n  props.history.push({\r\n    search: params.toString(),\r\n  });\r\n  return null;\r\n};\r\n\r\nconst setStateFromURLQueryString = (state, props, setValue) => {\r\n  const params = new URLSearchParams(props.location.search);\r\n  state.git_url = params.get('giturl');\r\n\r\n  const selected_labels = convertIDNamesStringToList(params.get('labels'));\r\n  if (isValidVariable(selected_labels[0])) {\r\n    if ('name' in selected_labels[0]) {\r\n      if (selected_labels[0].name !== '') {\r\n        state.selected_labels = selected_labels;\r\n      }\r\n    }\r\n  }\r\n\r\n  const selected_assignee_list = convertIDNamesStringToList(\r\n    params.get('assignee')\r\n  );\r\n  if (isValidVariable(selected_assignee_list)) {\r\n    state.selected_assignee = selected_assignee_list[0];\r\n  }\r\n  setValue('git_url', state.git_url);\r\n  return state;\r\n};\r\n","import React, { useReducer, useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Toolbar from './components/Toolbar';\r\nimport Gantt from './components/Gantt';\r\nimport { read_cookie } from 'sfcookies';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { initialState, reducerFunc } from './functions/State/Reducer.js';\r\nimport {\r\n  setLabelListOfRepoFromAPI,\r\n  setMemberListOfRepoFromAPI,\r\n} from './functions/Common/IssueAPI.js';\r\n\r\nconst App = (props) => {\r\n  const [state, dispatch] = useReducer(reducerFunc, initialState);\r\n  const { register, setValue } = useForm({ git_url: \"\", token: \"\" });\r\n\r\n  useEffect(() => {\r\n    setValue(\"token\", read_cookie('git_token'));\r\n    dispatch({ type: 'tokenChange', value: read_cookie('git_token') })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'setStateFromURLQueryString', value: { props: props, setValue: setValue } });\r\n  }, [props.location]);\r\n\r\n  useEffect(() => {\r\n    setLabelListOfRepoFromAPI((labels) => { dispatch({ type: 'labelChange', value: labels }); }, state.git_url, state.token);\r\n    setMemberListOfRepoFromAPI((setMemberList) => { dispatch({ type: 'memberListChange', value: setMemberList }); }, state.git_url, state.token);\r\n  }, [state.git_url, state.token, state.selected_assignee]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"zoom-bar\">\r\n        <Toolbar\r\n          zoom={state.currentZoom}\r\n          onZoomChange={(zoom) => dispatch({ type: 'zoomChange', value: zoom })}\r\n          onGitURLChange={(git_url) => dispatch({ type: 'gitURLChange', value: { props: props, git_url: git_url } })}\r\n          token={state.token}\r\n          onTokenChange={(token) => dispatch({ type: 'tokenChange', value: token })}\r\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\r\n          labels={state.labels}\r\n          selected_labels={state.selected_labels}\r\n          onSelectedLabelChange={(selected_labels) => dispatch({ type: 'selectedLabelsChange', value: { props: props, selected_labels: selected_labels } })}\r\n          member_list={state.member_list}\r\n          selected_assignee={state.selected_assignee}\r\n          onSelectedAssigneeChange={(selected_assignee) => dispatch({ type: 'selectedAssigneeChange', value: { props: props, selected_assignee: selected_assignee } })}\r\n          register={register}\r\n        />\r\n      </div>\r\n      <div className=\"gantt-container\">\r\n        <Gantt\r\n          zoom={state.currentZoom}\r\n          git_url={state.git_url}\r\n          token={state.token}\r\n          selected_labels={state.selected_labels}\r\n          selected_assignee={state.selected_assignee}\r\n          update={state.update}\r\n          openIssueAtBrowser={(gantt_task_id) => dispatch({ type: 'openIssueAtBrowser', value: gantt_task_id })}\r\n          openNewIssueAtBrowser={(gantt_task_id) => dispatch({ type: 'openNewIssueAtBrowser', value: gantt_task_id })}\r\n          updateIssueByAPI={(gantt_task, gantt) => dispatch({ type: 'updateIssueByAPI', value: { gantt_task: gantt_task, gantt: gantt } })}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Route render={(props) => <App />} />\r\n  </Router>,\r\n  document.getElementById(\"root\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}