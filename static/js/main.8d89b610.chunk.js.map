{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","components/Gantt/Gantt.js","components/Gantt/index.js","functions/State/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","marginRight","props","classes","noValidate","TextField","className","required","placeholder","label","style","onChange","e","onGitURLChange","target","value","inputRef","register","name","type","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","Autocomplete","size","member_list","getOptionLabel","option","selected_assignee","assignee","onSelectedAssigneeChange","renderInput","params","variant","ButtonGroup","height","Button","onClick","onZoomChange","IconButton","color","onUpdateClick","Toolbar","isValidVariable","variable","Array","isArray","length","isValidIDName","id_name","calculateDueDate","start_date_str","duration","start_date","Date","moment","add","toDate","toLocaleDateString","getGanttStartDate","due_date","created_at","getGanttDueDate","toISOString","split","getGanttDuration","start_date_moment","diff","calculateDuration","updateGanttIssue","issue","gantt_parse","data","push","links","removeLastSlash","url","test","slice","removeLastSpace","adjustURL","git_url","getStartDateFromDescriptionString","description","str","match","replaceStartDateInDescriptionString","write_str","replace","getDueDateFromDescriptionString","getProgressFromDescriptionString","parseFloat","replaceProgressInDescriptionString","write_float_number","progress","write_round_str","Math","round","convertIDNameListToString","list","string","map","info","id","console","log","convertIDNamesStringToList","split_string","forEach","element","index","array","GitHubAPIURL","isGitHubURL","getGitHubNameSpaceFromGitURL","split_git_url","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","number","getGitHubAPIURLIssueFilterd","url_query_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","getGitHubURLIssuebyNumber","isGitLabURL","getSelfHostingGitLabDomain","switchGitLabDomain","gitlab_domain","self_hosting_gitlab_domain","getGitLabURL","getGitLabAPIURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterd","getGitLabAPIURLLabel","getGitLabAPIURLMember","getGitHubAssignee","issue_info","login","generateGanttTaskFromGitHub","text","title","updateGitHubDescriptionStringFromGanttTask","gantt_task","due_date_str","replaceDueDateInDescriptionString","getGitHubIssuesFromAPI","a","axios","get","then","res","body","setGitHubLabelListOfRepoFromAPI","setLabels","setGitHubMemberListOfRepoFromAPI","headers","warn","openGitHubNewIssueAtBrowser","gantt_task_id","window","open","getGitHubURLNewIssueWithTemplate","getGitLabAssignee","generateGanttTaskFromGitLab","iid","getGitLabIssuesFromAPI","setGitLabLabelListOfRepoFromAPI","lebel_info","setGitLabMemberListOfRepoFromAPI","updateGitLabIssueFromGanttTask","gantt","getGitLabAPIURLIssue","encodeURIComponent","updateGitLabDescriptionStringFromGanttTask","put_url","getGitabAPIURLIssuebyNumber","put","catch","err","alert","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","setLabelListOfRepoFromAPI","setMemberListOfRepoFromAPI","setMemberList","updateIssueByAPI","post","updateGitHubIssueFromGanttTask","openIssueAtBrowser","openGitHubIssueAtBrowser","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","setGanttConfig","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","sort","columns","align","tree","ext","zoom","init","attachEvent","openNewIssueAtBrowser","Gantt","containerRef","useRef","useEffect","current","setLevel","clearAll","parse","update","ref","initialState","currentZoom","reducerFunc","state","action","handleGitURLChange","handleTokenChange","handleSelectedLabelsChange","handleSelectedAssigneeChange","handleOpenIssueAtBrowser","handleOpenNewIssueAtBrowser","handleUpdateIssueByAPI","setStateFromURLQueryString","setValue","setURLQuery","bake_cookie","URLSearchParams","location","search","set","history","toString","selected_assignee_list","withRouter","useReducer","dispatch","useForm","read_cookie","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d89b610.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst Toolbar = (props) => {\n  const { classes } = props;\n  return (\n    <form noValidate>\n      <TextField\n        className={classes.root}\n        required\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n        label=\"Git Repository URL\"\n        style={{ width: \"25%\", verticalAlign: \"middle\" }}\n        onChange={(e) => { props.onGitURLChange(e.target.value) }}\n        inputRef={props.register}\n        name=\"git_url\"\n      />\n      <TextField\n        className={classes.root}\n        type=\"password\"\n        placeholder=\"Access Token\"\n        label=\"Access Token\"\n        style={{ width: \"10%\", verticalAlign: \"middle\" }}\n        onChange={(e) => { props.onTokenChange(e.target.value) }}\n        inputRef={props.register}\n        name=\"token\"\n      />\n      <Multiselect\n        className={classes.root}\n        options={props.labels}\n        selectedValues={props.selected_labels}\n        onSelect={(options) => { props.onSelectedLabelChange(options) }}\n        onRemove={(options) => { props.onSelectedLabelChange(options) }}\n        displayValue=\"name\"\n        style={selector_style}\n        placeholder=\"filter by labels\"\n        hidePlaceholder=\"false\"\n        emptyRecordMsg=\"No Labels\"\n        closeIcon=\"cancel\"\n      />\n      <Autocomplete\n        className={classes.root}\n        size=\"small\"\n        options={props.member_list}\n        getOptionLabel={(option) => option.name}\n        value={props.selected_assignee}\n        onChange={(e, assignee) => { props.onSelectedAssigneeChange(assignee) }}\n        style={{ width: \"15%\", verticalAlign: \"middle\", display: \"inline-block\", marginRight: \"15px\" }}\n        renderInput={(params) =>\n          <TextField\n            {...params}\n            className={classes.root}\n            label=\"Assignee\"\n            variant=\"standard\"\n          />}\n      />\n      <ButtonGroup size=\"small\" style={{ height: \"34px\" }} >\n        <Button onClick={(e) => { props.onZoomChange(\"Weeks\") }}>Weeks</Button>\n        <Button onClick={(e) => { props.onZoomChange(\"Days\") }}>Days</Button>\n      </ButtonGroup>\n      <IconButton color=\"primary\" style={{ verticalAlign: \"middle\" }}>\n        <CachedIcon onClick={(e) => { props.onUpdateClick() }} />\n      </IconButton>\n    </form>\n  );\n}\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      fontSize: \"13px\",\n      marginRight: \"4px\"\n    },\n  },\n});\n\n\nconst selector_style = {\n  multiselectContainer: {\n    width: \"30%\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    padding: \"4px\",\n    alignItems: \"flex-end\",\n  },\n  chips: {\n    background: \"light blue\",\n    fontSize: \"15px\",\n  },\n  searchBox: {\n    border: \"none\",\n  },\n\n}\n\nexport default withStyles(styles)(Toolbar);","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import moment from 'moment';\n\nexport const isValidVariable = (variable) => {\n  if (variable !== null && variable !== [] && variable !== void 0 && variable !== \"\") {\n    return true;\n  }\n  if (Array.isArray(variable)) {\n    return variable.length > 0;\n  }\n  return false;\n}\n\nexport const validVariable = (variable) => {\n  if (isValidVariable(variable)) {\n    return variable;\n  } else {\n    return \"\";\n  }\n}\nexport const isValidIDName = (id_name) => {\n  return isValidVariable(id_name) && 'id' in id_name && 'name' in id_name;\n}\n\nconst calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date);\n  const due_date_moment = moment(due_date);\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n}\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date).add(duration - 1, 'd').toDate();\n  return due_date.toLocaleDateString(\"ja-JP\");\n}\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = start_date.toLocaleDateString(\"ja-JP\");\n  } else {\n    start_date_str = new Date(created_at).toLocaleDateString(\"ja-JP\");\n  }\n  return start_date_str;\n}\n\nexport const getGanttDueDate = (start_date, due_date, created_at) => {\n  let due_date_str = null;\n  if (start_date != null && due_date != null) {\n    due_date_str = new Date(due_date).toISOString().split('T')[0];\n  } else {\n    due_date_str = new Date(created_at).toISOString().split('T')[0];\n  }\n  return due_date_str;\n}\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n}\n\nexport const updateGanttIssue = (issue, gantt_parse) => {\n  let data = [];\n  let links = [];\n  data.push(issue);\n  data = { data: data, links: links }\n  gantt_parse(data);\n} ","import { isValidVariable, isValidIDName } from './CommonHelper.js';\n\nconst removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\n\nconst removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\n\nexport const adjustURL = (git_url) => {\n  let url = git_url;\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  return url;\n}\n\nexport const getStartDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceStartDateInDescriptionString = (description, write_str) => {\n  const start_date = getStartDateFromDescriptionString(description);\n  if (start_date != null) {\n    return description.replace(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"start_date: \" + write_str);\n  } else {\n    return \"start_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getDueDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceDueDateInDescriptionString = (description, write_str) => {\n  const due_date = getDueDateFromDescriptionString(description);\n  if (due_date != null) {\n    return description.replace(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"due_date: \" + write_str);\n  } else {\n    return \"due_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getProgressFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/progress: \\d{1}\\.\\d{1}/);\n  if (str == null) {\n    return 0.1;\n  }\n  str = str[0].match(/\\d{1}\\.\\d{1}/)[0];\n  return parseFloat(str);\n}\n\nexport const replaceProgressInDescriptionString = (description, write_float_number) => {\n  const progress = getProgressFromDescriptionString(description);\n  let write_round_str = Math.round(write_float_number * 10) / 10;\n  if (write_float_number === \"1\") {\n    write_float_number = \"1.0\"\n  }\n  if (progress != null) {\n    return description.replace(/progress: \\d{1}\\.\\d{1}/, \"progress: \" + write_round_str);\n  } else {\n    return \"progress: \" + write_round_str + \"  \\n\" + description;\n  }\n}\n\nexport const convertIDNameListToString = (list) => {\n  let string = \"\";\n  if (isValidVariable(list)) {\n    list.map((info) => {\n      if (isValidIDName(info)) {\n        string += info.id + \":\" + info.name + \",\"\n        console.log(string)\n      }\n      return null;\n    });\n  }\n  return string;\n}\n\nexport const convertIDNamesStringToList = (string) => {\n  let list = [];\n  if (isValidVariable(string)) {\n    const split_string = string.split(',');\n    split_string.forEach((element, index, array) => {\n      if (index < split_string.length - 1) {\n        const info = element.split(':');\n        const label = {\n          id: info[0],\n          name: info[1],\n        }\n        list.push(label)\n      }\n    });\n  } else {\n    list = [{ id: 0, name: \"\" }];\n  }\n  return list;\n}","import { adjustURL } from '../Common/Parser.js';\nimport { isValidVariable, isValidIDName } from '../Common/CommonHelper.js';\n\nconst GitHubAPIURL = \"https://api.github.com/repos/\";\nconst GitHubURL = \"https://github.com/\";\n\nexport const isGitHubURL = (git_url) => {\n  return /github\\.com/.test(git_url);\n}\n\nconst getGitHubNameSpaceFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitHubProjectFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues';\n}\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues/' + number;\n}\n\nexport const getGitHubAPIURLIssueFilterd = (git_url, labels, assignee) => {\n  let url_query_str = \"\";\n  let assignee_str = \"\"\n  if (isValidVariable(labels)) {\n    url_query_str += \"?labels=\"\n    labels.map((label) => {\n      if (isValidIDName(label)) {\n        url_query_str += label.name + \",\";\n      }\n      return null;\n    });\n  }\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== \"\") {\n      url_query_str += \"&assignee=\" + assignee.name;\n    }\n  }\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues' + url_query_str;\n}\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/labels';\n}\n\nexport const getGitHubAPIURLCollaborators = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/collaborators';\n}\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitHubURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + \"/issues/\" + number;\n}\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url)\n    + \"/issues/new?assignees=&labels=&title=&body=\";\n}","import { adjustURL } from '../Common/Parser.js';\nimport { isValidVariable, isValidIDName } from '../Common/CommonHelper.js';\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\n\nexport const isGitLabURL = (git_url) => {\n  return /gitlab\\.com/.test(git_url);\n}\n\nexport const getSelfHostingGitLabDomain = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 3) {\n    return split_git_url[2];\n  }\n  return null;\n}\n\nconst switchGitLabDomain = (git_url) => {\n  let gitlab_domain = null;\n  const self_hosting_gitlab_domain = getSelfHostingGitLabDomain(git_url);\n  if (self_hosting_gitlab_domain !== null) {\n    gitlab_domain = \"https://\" + self_hosting_gitlab_domain + \"/\";\n  }\n  if (isGitLabURL(git_url)) {\n    gitlab_domain = \"https://gitlab.com/\";\n  }\n  return gitlab_domain;\n}\n\nconst getGitLabURL = (git_url) => {\n  return switchGitLabDomain(git_url);\n}\n\nconst getGitLabAPIURL = (git_url) => {\n  return switchGitLabDomain(git_url) + \"api/v4/projects/\";\n}\n\nconst getGitLabNameSpaceFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitLabProjectFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nconst postFixToken = (token) => {\n  let post_fix_str = \"\";\n  if (isValidVariable(token) && token !== \"Tokens that have not yet been entered\") {\n    post_fix_str += \"?access_token=\" + token + \"&\";\n  } else {\n    post_fix_str += \"?\";\n  }\n  return post_fix_str;\n}\n\nexport const getGitLabAPIURLIssueFilterd = (git_url, token, labels, assignee) => {\n  let post_fix_str = postFixToken(token);\n  if (isValidVariable(labels)) {\n    post_fix_str += \"labels=\";\n    labels.map((label) => {\n      if (isValidIDName(label)) {\n        post_fix_str += label.name + \",\"\n      }\n      return null;\n    });\n  }\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== \"\") {\n      post_fix_str += \"&assignee_id=\" + assignee.id;\n    }\n  }\n  const url = adjustURL(git_url);\n  return getGitLabAPIURL(git_url) + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues' + post_fix_str;\n}\n\nexport const getGitLabAPIURLIssue = (git_url, token, labels) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return getGitLabAPIURL(git_url) + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues' + post_fix_str;\n}\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return getGitLabAPIURL(git_url) + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues/' + number + post_fix_str;\n}\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return getGitLabAPIURL(git_url) + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/labels' + post_fix_str;\n}\n\nexport const getGitLabAPIURLMember = (git_url, token) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return getGitLabAPIURL(git_url) + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/members/all' + post_fix_str;\n}\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return getGitLabURL(git_url) + getGitLabNameSpaceFromGitURL(url) + \"/\" + getGitLabProjectFromGitURL(url) + \"/-/issues/\" + number;\n}\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  const url = adjustURL(git_url);\n  return getGitLabURL(git_url) + getGitLabNameSpaceFromGitURL(url) + \"/\" + getGitLabProjectFromGitURL(url)\n    + \"/issues/new?issue[description]=\";\n}","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getDueDateFromDescriptionString,\n  replaceDueDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n} from '../Common/CommonHelper.js';\n\nconst getGitHubAssignee = (issue_info) => {\n  if(issue_info.assignee !== null){\n    return issue_info.assignee.login;\n  }\n  return \"\"\n}\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getStartDateFromDescriptionString(description);\n  const due_date = getDueDateFromDescriptionString(description);\n\n  const gantt_task = {\n    id: issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(description),\n    assignee: getGitHubAssignee(issue_info),\n  }\n  return gantt_task;\n}\n\nexport const updateGitHubDescriptionStringFromGanttTask = (description, gantt_task) => {\n  const start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n  const due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n\n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceDueDateInDescriptionString(description, due_date_str);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return description;\n}","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterd,\n  getGitHubAPIURLLabel,\n  getGitHubAPIURLCollaborators,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n} from './GitHubHelper.js';\nimport {\n  updateGanttIssue,\n  isValidVariable,\n} from '../Common/CommonHelper.js';\n\nexport const getGitHubIssuesFromAPI = async (gantt_parse, git_url, selected_labels, selected_assignee) => {\n  axios.get(getGitHubAPIURLIssueFilterd(git_url, selected_labels, selected_assignee)).then((res) => {\n    res.data.map((issue_info) => {\n      axios.get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number)).then((res) => {\n        const gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n        updateGanttIssue(gantt_task, gantt_parse);\n      });\n      return null;\n    });\n  });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (setLabels, git_url, token) => {\n  axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\n    let list = [];\n    res.data.map((info) => {\n      list.push({ id: info.id, name: info.name });\n      return null;\n    });\n    setLabels(list);\n  });\n};\n\nexport const setGitHubMemberListOfRepoFromAPI = async (setLabels, git_url, token) => {\n  if (isValidVariable(token) && token !== \"Tokens that have not yet been entered\") {\n    axios.get(getGitHubAPIURLCollaborators(git_url),\n      { headers: { 'Authorization': `token ${token}` }, data: {} }\n    ).then((res) => {\n      let list = [];\n      res.data.map((info) => {\n        list.push({ id: info.id, name: info.login });\n        return null;\n      });\n      setLabels(list);\n    });\n  } else {\n    console.warn(\"token is not valid!\")\n  };\n}\n\nexport const updateGitHubIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n  const url = getGitHubAPIURLIssuebyNumber(git_url, gantt_task.id);\n  axios.get(url).then((res) => {\n    axios.post(url, {\n      body: updateGitHubDescriptionStringFromGanttTask(res.data.body, gantt_task),\n    }, {\n      headers: {\n        'Authorization': `token ${token}`\n      }\n    }).then((res) => {\n      console.log(\"success update issue\");\n    }).catch((err) => {\n      alert('failed update GitHub issue. check your token.');\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  console.log(getGitHubURLIssuebyNumber(git_url, gantt_task_id))\n  window.open(getGitHubURLIssuebyNumber(git_url, gantt_task_id), \"_blank\");\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"due_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, \"_blank\");\n};","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n} from '../Common/CommonHelper.js';\n\nconst getGitLabAssignee = (issue_info) => {\n  if (issue_info.assignee !== null) {\n    return issue_info.assignee.name;\n  }\n  return \"\"\n}\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getStartDateFromDescriptionString(issue_info.description);\n  const due_date = new Date(issue_info.due_date).toLocaleDateString(\"ja-JP\");\n\n  const gantt_task = {\n    id: issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(issue_info.description),\n    assignee: getGitLabAssignee(issue_info),\n  }\n  return gantt_task;\n}\n\nexport const updateGitLabDescriptionStringFromGanttTask = (description, gantt_task) => {\n  let start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n\n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return encodeURIComponent(description);\n}","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterd,\n  getGitLabAPIURLIssue,\n  getGitLabAPIURLLabel,\n  getGitLabAPIURLMember,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n} from './GitLabHelper.js';\nimport {\n  calculateDueDate,\n  updateGanttIssue,\n} from '../Common/CommonHelper.js';\n\nexport const getGitLabIssuesFromAPI = async (gantt_parse, git_url, token, selected_labels, assignee) => {\n  axios.get(getGitLabAPIURLIssueFilterd(git_url, token, selected_labels, assignee)).then((res) => {\n    res.data.map((issue_info) => {\n      const gantt_task = generateGanttTaskFromGitLab(issue_info);\n      updateGanttIssue(gantt_task, gantt_parse);\n      return null;\n    });\n  });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (setLabels, git_url, token) => {\n  axios.get(getGitLabAPIURLLabel(git_url, token)).then((res) => {\n    let list = [];\n    res.data.map((lebel_info) => {\n      list.push(lebel_info);\n      return null;\n    });\n    setLabels(list);\n  });\n};\n\nexport const setGitLabMemberListOfRepoFromAPI = async (setLabels, git_url, token) => {\n  axios.get(getGitLabAPIURLMember(git_url, token)).then((res) => {\n    let list = [];\n    res.data.map((info) => {\n      list.push({ id: info.id, name: info.name });\n      return null;\n    });\n    setLabels(list);\n  });\n}\n\nexport const updateGitLabIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n  axios.get(getGitLabAPIURLIssue(git_url, token)).then((res) => {\n    res.data.map((issue_info) => {\n      if (issue_info.iid === gantt_task.id) {\n        const description = updateGitLabDescriptionStringFromGanttTask(issue_info.description, gantt_task);\n        const start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n        const due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n        const put_url = getGitabAPIURLIssuebyNumber(git_url, token, gantt_task.id)\n          + \"&description=\" + description\n          + \"&due_date=\" + due_date_str;\n        axios.put(put_url).then((res) => {\n          console.log(\"success update issue\")\n        }).catch((err) => {\n          alert('failed update GitLab issue. check your token.')\n          getGitLabIssuesFromAPI(gantt, git_url);\n        });\n      }\n      return null;\n    });\n  });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(getGitLabURLIssuebyNumber(git_url, id), \"_blank\");\n};\n\nexport const openGitLabNewIssueAtBrowser = (id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%20%20%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, \"_blank\");\n};","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport { isGitLabURL, getSelfHostingGitLabDomain } from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n  setGitHubMemberListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n  setGitLabMemberListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\nimport { isValidVariable } from '../Common/CommonHelper.js';\n\nexport const getIssuesFromAPI = async (gantt_parse, git_url, token, selected_labels, selected_assignee) => {\n  if(!isValidVariable(git_url)){\n    return null;\n  }\n  if (isGitHubURL(git_url)) {\n    getGitHubIssuesFromAPI(gantt_parse, git_url, selected_labels, selected_assignee);\n  }\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\n    getGitLabIssuesFromAPI(gantt_parse, git_url, token, selected_labels, selected_assignee);\n  }\n}\n\nexport const setLabelListOfRepoFromAPI = async (setLabels, git_url, token) => {\n  if(!isValidVariable(git_url)){\n    return null;\n  }\n  if (isGitHubURL(git_url)) {\n    setGitHubLabelListOfRepoFromAPI(setLabels, git_url, token);\n  }\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\n    setGitLabLabelListOfRepoFromAPI(setLabels, git_url, token);\n  }\n}\n\nexport const setMemberListOfRepoFromAPI = async (setMemberList, git_url, token) => {\n  if(!isValidVariable(git_url)){\n    return null;\n  }\n  if (isGitHubURL(git_url)) {\n    setGitHubMemberListOfRepoFromAPI(setMemberList, git_url, token);\n  }\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\n    setGitLabMemberListOfRepoFromAPI(setMemberList, git_url, token);\n  }\n}\n\nexport const updateIssueByAPI = (gantt_task_id, token, gantt, git_url) => {\n  if(!isValidVariable(git_url)){\n    return null;\n  }\n  if (isGitHubURL(git_url)) {\n    updateGitHubIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\n    updateGitLabIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n}\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if(!isValidVariable(git_url)){\n    return null;\n  }\n  if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  if(!isValidVariable(git_url)){\n    return null;\n  }\n  if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url) || getSelfHostingGitLabDomain(git_url) !== null) {\n    openGitLabNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport {\n  getIssuesFromAPI,\n} from '../../functions/Common/IssueAPI.js';\n\nconst Gantt = (props) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setGanttConfig(gantt);\n    attachEvent(gantt, props);\n    gantt.init(containerRef.current);\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, [])\n\n  useEffect(() => {\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, [props.zoom])\n\n  useEffect(() => {\n    gantt.clearAll();\n    getIssuesFromAPI((data) => {\n      gantt.parse(data);\n      gantt.sort(\"start_date\", false);\n    }, props.git_url, props.token, props.selected_labels, props.selected_assignee);\n  }, [props.git_url, props.token, props.selected_labels, props.selected_assignee, props.update])\n\n  return (\n    <div\n      ref={containerRef}\n      style={{ width: '100%', height: '100%' }}\n    ></div>\n  );\n}\n\nconst zoom_level = {\n  levels: [\n    {\n      name: 'Days',\n      scale_height: 60,\n      min_column_width: 70,\n      scales: [\n        { unit: 'week', step: 1, format: '%M, %d week' },\n        { unit: 'day', step: 1, format: '%d %M' }\n      ]\n    },\n    {\n      name: 'Weeks',\n      scale_height: 60,\n      min_column_width: 70,\n      scales: [\n        { unit: \"month\", step: 1, format: '%Y %F' },\n        { unit: 'week', step: 1, format: '%M, %d week' },\n      ]\n    }\n  ]\n};\n\nconst setGanttConfig = (gantt) => {\n  gantt.config.xml_date = \"%Y/%m/%d %H:%i\";\n  gantt.config.order_branch = true;\n  gantt.config.order_branch_free = true;\n\n  gantt.config.keep_grid_width = true;\n  gantt.config.grid_resize = true;\n\n  gantt.config.sort = true;\n\n  gantt.config.columns = [\n    { name: \"id\", label: \"No.\", align: \"left\", tree: true, width: '*' },\n    { name: \"start_date\", label: \"Start \", align: \"center\", width: \"90\" },\n    { name: \"due_date\", label: \"due \", align: \"center\", width: \"90\" },\n    { name: \"assignee\", label: \"Assignee\", align: \"center\", width: '160' },\n    { name: \"add\", label: \"\" }\n  ];\n\n  gantt.ext.zoom.init(zoom_level);\n}\n\nconst attachEvent = (gantt, props) => {\n  gantt.attachEvent(\"onTaskDblClick\", (gantt_task_id, e) => {\n    props.openIssueAtBrowser(gantt_task_id);\n  });\n  gantt.attachEvent(\"onTaskCreated\", (gantt_task_id, e) => {\n    props.openNewIssueAtBrowser(gantt_task_id);\n  });\n  gantt.attachEvent(\"onAfterTaskUpdate\", (id, gantt_task) => {\n    props.updateIssueByAPI(gantt_task, gantt);\n  });\n}\n\nexport default Gantt;","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import { bake_cookie } from 'sfcookies';\nimport {\n  convertIDNamesStringToList,\n  convertIDNameListToString\n} from '../Common/Parser.js';\nimport {\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../Common/IssueAPI.js';\nimport { isValidVariable } from '../Common/CommonHelper.js';\n\nexport const initialState = {\n  currentZoom: 'Days',\n  update: 0,\n  git_url: '',\n  token: 'Tokens that have not yet been entered',\n  labels: [],\n  selected_labels: [],\n  member_list: [],\n  selected_assignee: { id: 0, name: \"\" },\n}\n\nexport const reducerFunc = (state, action) => {\n  switch (action.type) {\n    case 'zoomChange':\n      return { ...state, currentZoom: action.value }\n    case 'gitURLChange':\n      return { ...state, git_url: handleGitURLChange(action.value.props, action.value.git_url, state.selected_labels) }\n    case 'tokenChange':\n      return { ...state, token: handleTokenChange(action.value) }\n    case 'labelChange':\n      return { ...state, labels: action.value }\n    case 'selectedLabelsChange':\n      return { ...state, selected_labels: handleSelectedLabelsChange(action.value.props, state.git_url, action.value.selected_labels, state.selected_assignee) }\n    case 'memberListChange':\n      return { ...state, member_list: action.value }\n    case 'selectedAssigneeChange':\n      return { ...state, selected_assignee: handleSelectedAssigneeChange(action.value.props, state.git_url, state.selected_labels, action.value.selected_assignee) }\n    case 'updateClick':\n      return { ...state, update: state.update + 1 }\n    case 'openIssueAtBrowser':\n      return handleOpenIssueAtBrowser(state, action)\n    case 'openNewIssueAtBrowser':\n      return handleOpenNewIssueAtBrowser(state, action)\n    case 'updateIssueByAPI':\n      return handleUpdateIssueByAPI(state, action)\n    case 'setStateFromURLQueryString':\n      return setStateFromURLQueryString(state, action.value.props, action.value.setValue)\n    default:\n      return state;\n  }\n}\n\nconst handleOpenIssueAtBrowser = (state, action) => {\n  openIssueAtBrowser(action.value, state.git_url);\n  return state;\n}\n\nconst handleOpenNewIssueAtBrowser = (state, action) => {\n  openNewIssueAtBrowser(action.value, state.git_url);\n  return state;\n}\n\nconst handleUpdateIssueByAPI = (state, action) => {\n  updateIssueByAPI(action.value.gantt_task, state.token, action.value.gantt, state.git_url);\n  return state;\n}\n\nconst handleGitURLChange = (props, git_url, selected_labels, selected_assignee) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return git_url;\n}\n\nconst handleTokenChange = (token) => {\n  bake_cookie('git_token', token);\n  return token;\n}\n\nconst handleSelectedLabelsChange = (props, git_url, selected_labels, selected_assignee) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_labels;\n}\n\nconst handleSelectedAssigneeChange = (props, git_url, selected_labels, selected_assignee) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_assignee;\n}\n\nconst setURLQuery = (props, git_url, selected_labels, selected_assignee) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertIDNameListToString(selected_labels));\n  params.set('assignee', convertIDNameListToString([selected_assignee]));\n  props.history.push({\n    search: params.toString(),\n  });\n  return null;\n}\n\nconst setStateFromURLQueryString = (state, props, setValue) => {\n  const params = new URLSearchParams(props.location.search);\n  state.git_url = params.get('giturl');\n\n  const selected_labels = convertIDNamesStringToList(params.get('labels'));\n  if (selected_labels[0].name !== \"\" ) {\n    state.selected_labels = selected_labels;\n  }\n\n  const selected_assignee_list = convertIDNamesStringToList(params.get('assignee'));\n  if (isValidVariable(selected_assignee_list)) {\n    state.selected_assignee = selected_assignee_list[0];\n  }\n  setValue(\"git_url\", state.git_url);\n  return state;\n}\n","import React, { useReducer, useEffect } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport Toolbar from './components/Toolbar';\nimport Gantt from './components/Gantt';\nimport { read_cookie } from 'sfcookies';\nimport { withRouter } from 'react-router-dom';\nimport { initialState, reducerFunc } from './functions/State/Reducer.js';\nimport {\n  setLabelListOfRepoFromAPI,\n  setMemberListOfRepoFromAPI,\n} from './functions/Common/IssueAPI.js';\n\nconst App = (props) => {\n  const [state, dispatch] = useReducer(reducerFunc, initialState);\n  const { register, setValue } = useForm({ git_url: \"\", token: \"\" });\n\n  useEffect(() => {\n    setValue(\"token\", read_cookie('git_token'));\n    dispatch({ type: 'tokenChange', value: read_cookie('git_token') })\n  }, []);\n\n  useEffect(() => {\n    dispatch({ type: 'setStateFromURLQueryString', value: { props: props, setValue: setValue } });\n  }, [props.location]);\n\n  useEffect(() => {\n    setLabelListOfRepoFromAPI((labels) => { dispatch({ type: 'labelChange', value: labels }); }, state.git_url, state.token);\n    setMemberListOfRepoFromAPI((setMemberList) => { dispatch({ type: 'memberListChange', value: setMemberList }); }, state.git_url, state.token);\n  }, [state.git_url, state.token, state.selected_assignee]);\n\n  return (\n    <>\n      <div className=\"zoom-bar\">\n        <Toolbar\n          zoom={state.currentZoom}\n          onZoomChange={(zoom) => dispatch({ type: 'zoomChange', value: zoom })}\n          onGitURLChange={(git_url) => dispatch({ type: 'gitURLChange', value: { props: props, git_url: git_url } })}\n          token={state.token}\n          onTokenChange={(token) => dispatch({ type: 'tokenChange', value: token })}\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\n          labels={state.labels}\n          selected_labels={state.selected_labels}\n          onSelectedLabelChange={(selected_labels) => dispatch({ type: 'selectedLabelsChange', value: { props: props, selected_labels: selected_labels } })}\n          member_list={state.member_list}\n          selected_assignee={state.selected_assignee}\n          onSelectedAssigneeChange={(selected_assignee) => dispatch({ type: 'selectedAssigneeChange', value: { props: props, selected_assignee: selected_assignee } })}\n          register={register}\n        />\n      </div>\n      <div className=\"gantt-container\">\n        <Gantt\n          zoom={state.currentZoom}\n          git_url={state.git_url}\n          token={state.token}\n          selected_labels={state.selected_labels}\n          selected_assignee={state.selected_assignee}\n          update={state.update}\n          openIssueAtBrowser={(gantt_task_id) => dispatch({ type: 'openIssueAtBrowser', value: gantt_task_id })}\n          openNewIssueAtBrowser={(gantt_task_id) => dispatch({ type: 'openNewIssueAtBrowser', value: gantt_task_id })}\n          updateIssueByAPI={(gantt_task, gantt) => dispatch({ type: 'updateIssueByAPI', value: { gantt_task: gantt_task, gantt: gantt } })}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={(props) => <App />} />\n  </Router>,\n  document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}