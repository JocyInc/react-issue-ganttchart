{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","components/Gantt/Gantt.js","components/Gantt/index.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","margin","spacing","props","classes","noValidate","onSubmit","handleSubmit","TextField","className","required","placeholder","label","style","onChange","e","onGitURLChange","target","value","inputRef","register","name","type","defaultValue","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","ButtonGroup","size","height","Button","onClick","onZoomChange","IconButton","color","onUpdateClick","Toolbar","isValidVariable","variable","calculateDueDate","start_date_str","duration","start_date","Date","moment","add","toDate","toLocaleDateString","getGanttStartDate","due_date","created_at","getGanttDuration","start_date_moment","diff","calculateDuration","getGanttUnscheduled","updateGanttIssue","issue","gantt_parse","data","push","links","removeLastSlash","url","length","test","slice","removeLastSpace","adjustURL","git_url","getStartDateFromDescriptionString","description","str","match","replaceStartDateInDescriptionString","write_str","replace","getDueDateFromDescriptionString","getProgressFromDescriptionString","parseFloat","replaceProgressInDescriptionString","write_float_number","progress","write_round_str","Math","round","convertLabelsListToString","label_list","label_str","map","id","GitHubAPIURL","isGitHubURL","getGitHubNameSpaceFromGitURL","split_git_url","split","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","number","getGitHubAPIURLIssueFilterdLabel","labels_url_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","GitLabAPIURL","isGitLabURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterdLabel","getGitLabAPIURLLabel","generateGanttTaskFromGitHub","issue_info","text","title","unscheduled","updateGitHubDescriptionStringFromGanttTask","gantt_task","due_date_str","replaceDueDateInDescriptionString","getGitHubIssuesFromAPI","a","axios","get","then","res","body","setGitHubLabelListOfRepoFromAPI","setLabels","headers","list","console","log","info","login","concat","openGitHubIssueAtBrowser","gantt_task_id","window","open","getGitHubURLIssuebyNumber","openGitHubNewIssueAtBrowser","getGitHubURLNewIssueWithTemplate","generateGanttTaskFromGitLab","iid","getGitLabIssuesFromAPI","setGitLabLabelListOfRepoFromAPI","lebel_info","updateGitLabIssueFromGanttTask","gantt","getGitLabAPIURLIssue","encodeURIComponent","updateGitLabDescriptionStringFromGanttTask","put_url","getGitabAPIURLIssuebyNumber","put","catch","err","alert","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","setLabelListOfRepoFromAPI","updateIssueByAPI","post","updateGitHubIssueFromGanttTask","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","setGanttConfig","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","show_unscheduled","sort","ext","zoom","init","attachEvent","openIssueAtBrowser","Gantt","containerRef","useRef","useEffect","current","setLevel","clearAll","parse","update","ref","initialState","currentZoom","reducerFunc","state","action","handleZoomChange","handleGitURLChange","handleSelectedLabelsChange","setStateFromURLQueryString","setValue","bake_cookie","params","URLSearchParams","location","search","set","history","toString","split_label","forEach","element","index","array","id_label","convertLabelsStringToList","withRouter","useReducer","dispatch","useForm","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8TAkEMA,EAAiB,CACrBC,qBAAsB,CACpBC,MAAO,MACPC,QAAS,eACTC,cAAe,SACfC,QAAS,MACTC,WAAY,YAEdC,MAAO,CACLC,WAAY,aACZC,SAAU,QAEZC,UAAW,CACTC,OAAQ,SAIGC,eA3BA,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBP,SAAU,YAuBDG,EA1EC,SAACK,GAAW,IAClBC,EAAYD,EAAZC,QACR,OACE,0BAAMC,YAAU,EAACC,SAAUH,EAAMI,cAC/B,kBAACC,EAAA,EAAD,CACEC,UAAWL,EAAQJ,KACnBU,UAAQ,EACRC,YAAY,mDACZC,MAAM,qBACNC,MAAO,CAAEzB,MAAO,MAAOE,cAAe,UACtCwB,SAAU,SAACC,GAAQZ,EAAMa,eAAeD,EAAEE,OAAOC,QACjDC,SAAUhB,EAAMiB,SAChBC,KAAK,YAEP,kBAACb,EAAA,EAAD,CACEC,UAAWL,EAAQJ,KACnBsB,KAAK,WACLX,YAAY,eACZY,aAAa,eACbX,MAAM,eACNC,MAAO,CAAEzB,MAAO,MAAOE,cAAe,UACtCwB,SAAU,SAACC,GAAQZ,EAAMqB,cAAcT,EAAEE,OAAOC,UAElD,kBAAC,cAAD,CACET,UAAWL,EAAQJ,KACnByB,QAAStB,EAAMuB,OACfC,eAAgBxB,EAAMyB,gBACtBC,SAAU,SAACJ,GAActB,EAAM2B,sBAAsBL,IACrDM,SAAU,SAACN,GAActB,EAAM2B,sBAAsBL,IACrDO,aAAa,OACbnB,MAAO3B,EACPyB,YAAY,mBACZsB,gBAAgB,QAChBC,eAAe,YACfC,UAAU,WAEZ,kBAACC,EAAA,EAAD,CAAaC,KAAK,QAAQxB,MAAO,CAAEyB,OAAQ,SACzC,kBAACC,EAAA,EAAD,CAAQC,QAAS,SAACzB,GAAQZ,EAAMsC,aAAa,WAA7C,SACA,kBAACF,EAAA,EAAD,CAAQC,QAAS,SAACzB,GAAQZ,EAAMsC,aAAa,UAA7C,SAEF,kBAACC,EAAA,EAAD,CAAYC,MAAM,UAAU9B,MAAO,CAAEvB,cAAe,WAClD,kBAAC,IAAD,CAAYkD,QAAS,SAACzB,GAAQZ,EAAMyC,wBChD7BC,G,MAAAA,G,yDCAFC,EAAkB,SAACC,GAC9B,OAAqB,OAAbA,GAAqBA,IAAa,SAAmB,IAAbA,GASrCC,EAAmB,SAACC,EAAgBC,GAC/C,IAAMC,EAAa,IAAIC,KAAKH,GAE5B,OADiBI,IAAOF,GAAYG,IAAIJ,EAAW,EAAG,KAAKK,SAC3CC,mBAAmB,UAGxBC,EAAoB,SAACN,EAAYO,EAAUC,GAOtD,OALkB,MAAdR,GAAkC,MAAZO,EACPP,EAAWK,mBAAmB,SAE9B,IAAIJ,KAAKO,GAAYH,mBAAmB,UAKhDI,EAAmB,SAACT,EAAYO,GAO3C,OALkB,MAAdP,GAAkC,MAAZO,EAxBF,SAACP,EAAYO,GACrC,IAAMG,EAAoBR,IAAOF,GAEjC,OADwBE,IAAOK,GACRI,KAAKD,EAAmB,QAAU,EAsB5CE,CAAkBZ,EAAYO,GAE9B,GAKFM,EAAsB,SAACb,EAAYO,GAO9C,OALkB,MAAdP,GAAkC,MAAZO,GAQfO,EAAmB,SAACC,EAAOC,GACtC,IAAIC,EAAO,GAEXA,EAAKC,KAAKH,GAEVC,EADAC,EAAO,CAAEA,KAAMA,EAAME,MAFT,MChDRC,EAAkB,SAACC,GAIvB,OAHIA,EAAIC,OAAS,GAAK,MAAMC,KAAKF,KAC/BA,EAAMA,EAAIG,MAAM,GAAI,IAEfH,GAEHI,EAAkB,SAACJ,GAIvB,OAHIA,EAAIC,OAAS,GAAK,MAAMC,KAAKF,KAC/BA,EAAMA,EAAIG,MAAM,GAAI,IAEfH,GAGIK,EAAY,SAACC,GACxB,IAAIN,EAAMM,EAKV,OAJAN,EAAMD,EAAgBC,GACtBA,EAAMI,EAAgBJ,GACtBA,EAAMD,EAAgBC,GACtBA,EAAMI,EAAgBJ,IAIXO,EAAoC,SAACC,GAChD,GAAmB,MAAfA,EACF,OAAO,KAET,IAAIC,EAAMD,EAAYE,MAAM,uCAC5B,OAAW,MAAPD,EACK,MAETA,EAAMA,EAAI,GAAGC,MAAM,2BAA2B,GACvC,IAAI9B,KAAK6B,KAGLE,EAAsC,SAACH,EAAaI,GAE/D,OAAkB,MADCL,EAAkCC,GAE5CA,EAAYK,QAAQ,sCAAuC,eAAiBD,GAE5E,eAAiBA,EAAY,OAASJ,GAIpCM,EAAkC,SAACN,GAC9C,GAAmB,MAAfA,EACF,OAAO,KAET,IAAIC,EAAMD,EAAYE,MAAM,qCAC5B,OAAW,MAAPD,EACK,MAETA,EAAMA,EAAI,GAAGC,MAAM,2BAA2B,GACvC,IAAI9B,KAAK6B,KAYLM,EAAmC,SAACP,GAC/C,GAAmB,MAAfA,EACF,OAAO,KAET,IAAIC,EAAMD,EAAYE,MAAM,0BAC5B,OAAW,MAAPD,EACK,IAETA,EAAMA,EAAI,GAAGC,MAAM,gBAAgB,GAC5BM,WAAWP,KAGPQ,EAAqC,SAACT,EAAaU,GAC9D,IAAMC,EAAWJ,EAAiCP,GAC9CY,EAAkBC,KAAKC,MAA2B,GAArBJ,GAA2B,GAI5D,MAH2B,MAAvBA,IACFA,EAAqB,OAEP,MAAZC,EACKX,EAAYK,QAAQ,yBAA0B,aAAeO,GAE7D,aAAeA,EAAkB,OAASZ,GAIxCe,EAA4B,SAACC,GACxC,IAAIC,EAAY,GAOhB,OANInD,EAAgBkD,IAClBA,EAAWE,KAAI,SAACtF,GAEd,OADAqF,GAAarF,EAAMuF,GAAK,IAAMvF,EAAMS,KAAO,IACpC,QAGJ4E,GChGHG,EAAe,gCAGRC,EAAc,SAACvB,GAC1B,MAAO,cAAcJ,KAAKI,IAGtBwB,EAA+B,SAACxB,GACpC,IAAMyB,EAAgBzB,EAAQ0B,MAAM,KACpC,GAAID,EAAc9B,QAAU,EAC1B,OAAO8B,EAAc,IAInBE,EAA6B,SAAC3B,GAClC,IAAMyB,EAAgBzB,EAAQ0B,MAAM,KACpC,GAAID,EAAc9B,QAAU,EAC1B,OAAO8B,EAAc,IASZG,EAA+B,SAAC5B,EAAS6B,GACpD,IAAMnC,EAAMK,EAAUC,GACtB,OAAOsB,EAAeE,EAA6B9B,GAAO,IAAMiC,EAA2BjC,GAAO,WAAamC,GAGpGC,EAAmC,SAAC9B,EAASpD,GACxD,IAAImF,EAAiB,GACjB/D,EAAgBpB,KAClBmF,GAAkB,WAClBnF,EAAOwE,KAAI,SAACtF,GAEV,OADAiG,GAAkBjG,EAAMS,KAAO,IACxB,SAGX,IAAMmD,EAAMK,EAAUC,GACtB,OAAOsB,EAAeE,EAA6B9B,GAAO,IAAMiC,EAA2BjC,GAAO,UAAYqC,GAGnGC,EAAuB,SAAChC,GACnC,IAAMN,EAAMK,EAAUC,GACtB,OAAOsB,EAAeE,EAA6B9B,GAAO,IAAMiC,EAA2BjC,GAAO,WAGvFuC,EAA+B,SAACjC,GAC3C,IAAMN,EAAMK,EAAUC,GACtB,OAAOsB,EAAeE,EAA6B9B,GAAO,IAAMiC,EAA2BjC,GAAO,kBCnD9FwC,EAAe,sCAGRC,EAAc,SAACnC,GAC1B,MAAO,cAAcJ,KAAKI,IAGtBoC,GAA+B,SAACpC,GACpC,IAAMyB,EAAgBzB,EAAQ0B,MAAM,KACpC,GAAID,EAAc9B,QAAU,EAC1B,OAAO8B,EAAc,IAInBY,GAA6B,SAACrC,GAClC,IAAMyB,EAAgBzB,EAAQ0B,MAAM,KACpC,GAAID,EAAc9B,QAAU,EAC1B,OAAO8B,EAAc,IAInBa,GAAe,SAACC,GACpB,IAAIC,EAAe,GAMnB,OALIxE,EAAgBuE,GAClBC,GAAgB,iBAAmBD,EAAQ,IAE3CC,GAAgB,IAEXA,GAGIC,GAAmC,SAACzC,EAASuC,EAAO3F,GAC/D,IAAI4F,EAAeF,GAAaC,GAC5BvE,EAAgBpB,KAClB4F,GAAgB,UAChB5F,EAAOwE,KAAI,SAACtF,GAEV,OADA0G,GAAgB1G,EAAMS,KAAO,IACtB,SAGX,IAAMmD,EAAMK,EAAUC,GACtB,OAAOkC,EAAeE,GAA6B1C,GAAO,MAAQ2C,GAA2B3C,GAAO,UAAY8C,GAerGE,GAAuB,SAAC1C,EAASuC,GAC5C,IAAMC,EAAeF,GAAaC,GAC5B7C,EAAMK,EAAUC,GACtB,OAAOkC,EAAeE,GAA6B1C,GAAO,MAAQ2C,GAA2B3C,GAAO,UAAY8C,G,oBC/CrGG,GAA8B,SAACzC,EAAa0C,GACvD,IAAMvE,EAAa4B,EAAkCC,GAC/CtB,EAAW4B,EAAgCN,GAUjD,MARmB,CACjBmB,GAAIuB,EAAWf,OACfgB,KAAMD,EAAWE,MACjBzE,WAAYM,EAAkBN,EAAYO,EAAUgE,EAAW/D,YAC/DT,SAAUU,EAAiBT,EAAYO,GACvCiC,SAAUJ,EAAiCP,GAC3C6C,YAAa7D,EAAoBb,EAAYO,KAKpCoE,GAA6C,SAAC9C,EAAa+C,GACtE,IAAM9E,EAAiB,IAAIG,KAAK2E,EAAW5E,YAAYK,mBAAmB,SACpEwE,EAAehF,EAAiBC,EAAgB8E,EAAW7E,UAMjE,OAHA8B,EHsB+C,SAACA,EAAaI,GAE7D,OAAgB,MADCE,EAAgCN,GAExCA,EAAYK,QAAQ,oCAAqC,aAAeD,GAExE,aAAeA,EAAY,OAASJ,EG3B/BiD,CADdjD,EAAcS,EAAmCT,EAAa+C,EAAWpC,UACZqC,GAC7DhD,EAAcG,EAAoCH,EAAa/B,IClBpDiF,GAAsB,uCAAG,WAAO/D,EAAaW,EAASlD,GAA7B,SAAAuG,EAAA,sDACpCC,KAAMC,IAAIzB,EAAiC9B,EAASlD,IAAkB0G,MAAK,SAACC,GAC1EA,EAAInE,KAAK8B,KAAI,SAACwB,GAKZ,OAJAU,KAAMC,IAAI3B,EAA6B5B,EAAS4C,EAAWf,SAAS2B,MAAK,SAACC,GACxE,IAAMR,EAAaN,GAA4Bc,EAAInE,KAAKoE,KAAMd,GAC9DzD,EAAiB8D,EAAY5D,MAExB,WAPyB,2CAAH,0DAYtBsE,GAA+B,uCAAG,WAAOC,EAAW5D,EAASpD,EAAQ2F,GAAnC,SAAAc,EAAA,sDACzCrF,EAAgBuE,IAAoB,iBAAVA,EAC5Be,KAAMC,IAAItB,EAA6BjC,GACrC,CAAE6D,QAAS,CAAE,cAAgB,SAAhB,OAA0BtB,IAAWjD,KAAM,KACxDkE,MAAK,SAACC,GACN,IAAIK,EAAO,GACXC,QAAQC,IAAIP,EAAInE,MAChBmE,EAAInE,KAAK8B,KAAI,SAAC6C,GAEZ,OADAH,EAAKvE,KAAK,CAAE8B,GAAI4C,EAAK5C,GAAI9E,KAAM0H,EAAKC,QAC7B,QAETN,EAAUhH,EAAOuH,OAAOL,OAG1BvB,EAAQ,GAEVe,KAAMC,IAAIvB,EAAqBhC,IAAUwD,MAAK,SAACC,GAC7C,IAAIK,EAAO,GACXC,QAAQC,IAAIP,EAAInE,MAChBmE,EAAInE,KAAK8B,KAAI,SAAC6C,GAEZ,OADAH,EAAKvE,KAAK0E,GACH,QAETL,EAAUhH,EAAOuH,OAAOL,OAvBmB,2CAAH,4DA8C/BM,GAA2B,SAACC,EAAerE,GACtDsE,OAAOC,KHpBgC,SAACvE,EAAS6B,GACjD,IAAMnC,EAAMK,EAAUC,GACtB,MAvDgB,sBAuDGwB,EAA6B9B,GAAO,IAAMiC,EAA2BjC,GAAO,WAAamC,EGkBhG2C,CAA0BxE,EAASqE,GAAgB,WAGpDI,GAA8B,SAACJ,EAAerE,GACzD,IAAI0D,EAAO,GACXA,GAAQ,kBAAmB,IAAIpF,MAAOI,mBAAmB,SAAW,SACpEgF,GAAQ,gBAAiB,IAAIpF,MAAOI,mBAAmB,SAAW,SAClEgF,GAAQ,wBACRY,OAAOC,KHvBuC,SAACvE,GAC/C,IAAMN,EAAMK,EAAUC,GACtB,MA5DgB,sBA4DGwB,EAA6B9B,GAAO,IAAMiC,EAA2BjC,GACpF,8CGoBQgF,CAAiC1E,GAAW0D,EAAM,WCzEnDiB,GAA8B,SAAC/B,GAC1C,IAAMvE,EAAa4B,EAAkC2C,EAAW1C,aAC1DtB,EAAW,IAAIN,KAAKsE,EAAWhE,UAAUF,mBAAmB,SAUlE,MARmB,CACjB2C,GAAIuB,EAAWgC,IACf/B,KAAMD,EAAWE,MACjBzE,WAAYM,EAAkBN,EAAYO,EAAUgE,EAAW/D,YAC/DT,SAAUU,EAAiBT,EAAYO,GACvCiC,SAAUJ,EAAiCmC,EAAW1C,aACtD6C,YAAa7D,EAAoBb,EAAYO,KCJpCiG,GAAsB,uCAAG,WAAOxF,EAAaW,EAASuC,EAAOzF,GAApC,SAAAuG,EAAA,sDACpCC,KAAMC,IAAId,GAAiCzC,EAASuC,EAAOzF,IAAkB0G,MAAK,SAACC,GACjFA,EAAInE,KAAK8B,KAAI,SAACwB,GACZ,IAAMK,EAAa0B,GAA4B/B,GAE/C,OADAzD,EAAiB8D,EAAY5D,GACtB,WALyB,2CAAH,4DAUtByF,GAA+B,uCAAG,WAAOlB,EAAW5D,EAASuC,GAA3B,SAAAc,EAAA,sDAC7CC,KAAMC,IAAIb,GAAqB1C,EAASuC,IAAQiB,MAAK,SAACC,GACpD,IAAIvC,EAAa,GACjBuC,EAAInE,KAAK8B,KAAI,SAAC2D,GAEZ,OADA7D,EAAW3B,KAAKwF,GACT,QAETnB,EAAU1C,MAPiC,2CAAH,0DAW/B8D,GAAiC,SAAC/B,EAAYV,EAAO0C,EAAOjF,GACvEsD,KAAMC,IJO4B,SAACvD,EAASuC,EAAO3F,GACnD,IAAM4F,EAAeF,GAAaC,GAC5B7C,EAAMK,EAAUC,GACtB,OAAOkC,EAAeE,GAA6B1C,GAAO,MAAQ2C,GAA2B3C,GAAO,UAAY8C,EIVtG0C,CAAqBlF,EAASuC,IAAQiB,MAAK,SAACC,GACpDA,EAAInE,KAAK8B,KAAI,SAACwB,GACZ,GAAIA,EAAWgC,MAAQ3B,EAAW5B,GAAI,CACpC,IAAMnB,EDhB4C,SAACA,EAAa+C,GACtE,IAAI9E,EAAiB,IAAIG,KAAK2E,EAAW5E,YAAYK,mBAAmB,SAKxE,OAHAwB,EAAcS,EAAmCT,EAAa+C,EAAWpC,UACzEX,EAAcG,EAAoCH,EAAa/B,GAExDgH,mBAAmBjF,GCUAkF,CAA2CxC,EAAW1C,YAAa+C,GACjF9E,EAAiB,IAAIG,KAAK2E,EAAW5E,YAAYK,mBAAmB,SACpEwE,EAAehF,EAAiBC,EAAgB8E,EAAW7E,UAC3DiH,EJO6B,SAACrF,EAASuC,EAAOV,GAC1D,IAAMW,EAAeF,GAAaC,GAC5B7C,EAAMK,EAAUC,GACtB,OAAOkC,EAAeE,GAA6B1C,GAAO,MAAQ2C,GAA2B3C,GAAO,WAAamC,EAASW,EIVpG8C,CAA4BtF,EAASuC,EAAOU,EAAW5B,IACnE,gBAAkBnB,EAClB,aAAegD,EACnBI,KAAMiC,IAAIF,GAAS7B,MAAK,SAACC,GACvBM,QAAQC,IAAI,2BACXwB,OAAM,SAACC,GACRC,MAAM,iDACNb,GAAuBI,EAAOjF,MAGlC,OAAO,YAKA2F,GAA2B,SAACtE,EAAIrB,GAC3CsE,OAAOC,KJGgC,SAACvE,EAAS6B,GACjD,IAAMnC,EAAMK,EAAUC,GACtB,MA/DgB,sBA+DGoC,GAA6B1C,GAAO,IAAM2C,GAA2B3C,GAAM,aAAemC,EILjG+D,CAA0B5F,EAASqB,GAAK,WAGzCwE,GAA8B,SAACxE,EAAIrB,GAC9C,IAAI0D,EAAO,GACXA,GAAQ,kBAAmB,IAAIpF,MAAOI,mBAAmB,SAAW,eACpEgF,GAAQ,wBACRY,OAAOC,KJCuC,SAACvE,GAC/C,IAAMN,EAAMK,EAAUC,GACtB,MApEgB,sBAoEGoC,GAA6B1C,GAAO,IAAM2C,GAA2B3C,GAC/E,kCIJGoG,CAAiC9F,GAAW0D,EAAM,WCnDnDqC,GAAgB,uCAAG,WAAO1G,EAAaW,EAASuC,EAAOzF,GAApC,SAAAuG,EAAA,sDAC1B9B,EAAYvB,IACdoD,GAAuB/D,EAAaW,EAASlD,GAE3CqF,EAAYnC,IACd6E,GAAuBxF,EAAaW,EAASuC,EAAOzF,GALxB,2CAAH,4DAShBkJ,GAAyB,uCAAG,WAAOpC,EAAW5D,EAASpD,EAAQ2F,GAAnC,SAAAc,EAAA,sDACnC9B,EAAYvB,IACd2D,GAAgCC,EAAW5D,EAASpD,GAElDuF,EAAYnC,IACd8E,GAAgClB,EAAW5D,EAASuC,GALf,2CAAH,4DASzB0D,GAAmB,SAAC5B,EAAe9B,EAAO0C,EAAOjF,GACxDuB,EAAYvB,IHoB4B,SAACiD,EAAYV,EAAO0C,EAAOjF,GACvE,IAAMN,EAAMkC,EAA6B5B,EAASiD,EAAW5B,IAC7DiC,KAAMC,IAAI7D,GAAK8D,MAAK,SAACC,GACnBH,KAAM4C,KAAKxG,EAAK,CACdgE,KAAMV,GAA2CS,EAAInE,KAAKoE,KAAMT,IAC/D,CACDY,QAAS,CACP,cAAgB,SAAhB,OAA0BtB,MAE3BiB,MAAK,SAACC,GACPM,QAAQC,IAAI,2BACXwB,OAAM,SAACC,GACRC,MAAM,iDACNtC,GAAuB6B,EAAOjF,SGhChCmG,CAA+B9B,EAAe9B,EAAO0C,EAAOjF,GAE1DmC,EAAYnC,IACdgF,GAA+BX,EAAe9B,EAAO0C,EAAOjF,ICG1DoG,GAAa,CACjBC,OAAQ,CACN,CACE9J,KAAM,OACN+J,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,CACN,CAAEC,KAAM,OAAQC,KAAM,EAAGC,OAAQ,eACjC,CAAEF,KAAM,MAAOC,KAAM,EAAGC,OAAQ,WAGpC,CACEpK,KAAM,QACN+J,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,CACN,CAAEC,KAAM,QAASC,KAAM,EAAGC,OAAQ,SAClC,CAAEF,KAAM,OAAQC,KAAM,EAAGC,OAAQ,mBAMnCC,GAAiB,SAAC3B,GACtBA,EAAM4B,OAAOC,SAAW,iBACxB7B,EAAM4B,OAAOE,cAAe,EAC5B9B,EAAM4B,OAAOG,mBAAoB,EAEjC/B,EAAM4B,OAAOI,iBAAkB,EAC/BhC,EAAM4B,OAAOK,aAAc,EAE3BjC,EAAM4B,OAAOM,kBAAmB,EAChClC,EAAM4B,OAAOO,MAAO,EAEpBnC,EAAMoC,IAAIC,KAAKC,KAAKnB,KAGhBoB,GAAc,SAACvC,EAAO5J,GAC1B4J,EAAMuC,YAAY,kBAAkB,SAACnD,EAAepI,IDrCpB,SAACoI,EAAerE,GAC5CuB,EAAYvB,IACdoE,GAAyBC,EAAerE,GAEtCmC,EAAYnC,IACd2F,GAAyBtB,EAAerE,GCiCxCyH,CAAmBpD,EAAehJ,EAAM2E,YAE1CiF,EAAMuC,YAAY,iBAAiB,SAACnD,EAAepI,GD/BhB,IAAgB+D,ICgCZ3E,EAAM2E,QD/BzCuB,EAAYvB,IACdyE,GAA4BJ,EAAerE,GAEzCmC,EAAYnC,IACd6F,GAA4BxB,EAAerE,MC6B7CiF,EAAMuC,YAAY,qBAAqB,SAACnG,EAAI4B,GAC1CgD,GAAiBhD,EAAY5H,EAAMkH,MAAO0C,EAAO5J,EAAM2E,aAI5C0H,GAnFD,SAACrM,GACb,IAAMsM,EAAeC,iBAAO,MAyB5B,OAxBAC,qBAAU,WACRjB,GAAe3B,SACfuC,GAAYvC,QAAO5J,GACnB4J,QAAMsC,KAAKI,EAAaG,SACxB7C,QAAMoC,IAAIC,KAAKS,SAAS1M,EAAMiM,MAC9BrC,QAAM+C,WACNjC,IAAiB,SAACzG,GAChB2F,QAAMgD,MAAM3I,GACZ2F,QAAMmC,KAAK,cAAc,KACxB/L,EAAM2E,QAAS3E,EAAMkH,MAAOlH,EAAMyB,mBACpC,IAEH+K,qBAAU,WACR5C,QAAMoC,IAAIC,KAAKS,SAAS1M,EAAMiM,QAC7B,CAACjM,EAAMiM,OAEVO,qBAAU,WACR5C,QAAM+C,WACNjC,IAAiB,SAACzG,GAChB2F,QAAMgD,MAAM3I,GACZ2F,QAAMmC,KAAK,cAAc,KACxB/L,EAAM2E,QAAS3E,EAAMkH,MAAOlH,EAAMyB,mBACpC,CAACzB,EAAM2E,QAAS3E,EAAMkH,MAAOlH,EAAMyB,gBAAiBzB,EAAM6M,SAG3D,yBACEC,IAAKR,EACL5L,MAAO,CAAEzB,MAAO,OAAQkD,OAAQ,WCrCvBkK,I,OAAAA,I,SCOTU,GAAe,CACnBC,YAAa,QACbH,OAAQ,EACRlI,QAAS,GACTuC,MAAO,wCACP3F,OAAQ,GACRE,gBAAiB,IAGbwL,GAAc,SAACC,EAAOC,GAC1B,OAAQA,EAAOhM,MACb,IAAK,aACH,OAAO,eAAK+L,EAAZ,CAAmBF,YAAaI,GAAiBD,EAAOpM,SAC1D,IAAK,eACH,OAAO,eAAKmM,EAAZ,CAAmBvI,QAAS0I,GAAmBF,EAAOpM,MAAMf,MAAOmN,EAAOpM,MAAM4D,QAASuI,EAAMzL,mBACjG,IAAK,cACH,OAAO,eAAKyL,EAAZ,CAAmBhG,MAAOiG,EAAOpM,QACnC,IAAK,cACH,OAAO,eAAKmM,EAAZ,CAAmB3L,OAAQ4L,EAAOpM,QACpC,IAAK,uBACH,OAAO,eAAKmM,EAAZ,CAAmBzL,gBAAiB6L,GAA2BH,EAAOpM,MAAMf,MAAOkN,EAAMvI,QAASwI,EAAOpM,MAAMU,mBACjH,IAAK,cACH,OAAO,eAAKyL,EAAZ,CAAmBL,OAAQK,EAAML,OAAS,IAC5C,IAAK,6BACH,OAAOU,GAA2BL,EAAOC,EAAOpM,MAAMf,MAAOmN,EAAOpM,MAAMyM,UAC5E,QACE,OAAON,IAIPE,GAAmB,SAACnB,GAExB,OADAwB,uBAAY,cAAexB,GACpBA,GAGHoB,GAAqB,SAACrN,EAAO2E,EAASlD,GAC1C,IAAMiM,EAAS,IAAIC,gBAAgB3N,EAAM4N,SAASC,QAMlD,OALAH,EAAOI,IAAI,SAAUnJ,GACrB+I,EAAOI,IAAI,SAAUlI,EAA0BnE,IAC/CzB,EAAM+N,QAAQ7J,KAAK,CACjB2J,OAAQH,EAAOM,aAEVrJ,GAGH2I,GAA6B,SAACtN,EAAO2E,EAASlD,GAClD,IAAMiM,EAAS,IAAIC,gBAAgB3N,EAAM4N,SAASC,QAMlD,OALAH,EAAOI,IAAI,SAAUnJ,GACrB+I,EAAOI,IAAI,SAAUlI,EAA0BnE,IAC/CzB,EAAM+N,QAAQ7J,KAAK,CACjB2J,OAAQH,EAAOM,aAEVvM,GAGH8L,GAA6B,SAACL,EAAOlN,EAAOwN,GAChD,IAAME,EAAS,IAAIC,gBAAgB3N,EAAM4N,SAASC,QAIlD,OAHAX,EAAMvI,QAAU+I,EAAOxF,IAAI,UAC3BgF,EAAMzL,gBVmCiC,SAACqE,GACxC,IAAID,EAAa,GACjB,GAAIlD,EAAgBmD,GAAY,CAC9B,IAAMmI,EAAcnI,EAAUO,MAAM,KACpC4H,EAAYC,SAAQ,SAACC,EAASC,EAAOC,GACnC,GAAID,EAAQH,EAAY3J,OAAS,EAAG,CAClC,IAAMgK,EAAWH,EAAQ9H,MAAM,KACzB5F,EAAQ,CACZuF,GAAIsI,EAAS,GACbpN,KAAMoN,EAAS,IAEjBzI,EAAW3B,KAAKzD,OAItB,OAAOoF,EUlDiB0I,CAA0Bb,EAAOxF,IAAI,WAC7DsF,EAAS,UAAWN,EAAMvI,SACnBuI,GA+CMsB,gBA5CH,SAACxO,GAAW,IAAD,EACKyO,qBAAWxB,GAAaF,IAD7B,mBACdG,EADc,KACPwB,EADO,OAEwBC,cAArC1N,EAFa,EAEbA,SAAUb,EAFG,EAEHA,aAAcoN,EAFX,EAEWA,SAYhC,OAVAhB,qBAAU,WACR9D,QAAQC,IAAI,YACZ+F,EAAS,CAAEvN,KAAM,6BAA8BJ,MAAO,CAAEf,MAAOA,EAAOwN,SAAUA,OAC/E,CAACxN,EAAM4N,WAEVpB,qBAAU,WACR9D,QAAQC,IAAI,MACZgC,IAA0B,SAACpJ,GAAamN,EAAS,CAAEvN,KAAM,cAAeJ,MAAOQ,MAAa2L,EAAMvI,QAASuI,EAAM3L,OAAQ2L,EAAMhG,SAC9H,CAACgG,EAAMvI,UAGR,oCACE,yBAAKrE,UAAU,YACb,kBAAC,EAAD,CACE2L,KAAMiB,EAAMF,YACZ1K,aAAc,SAAC2J,GAAD,OAAUyC,EAAS,CAAEvN,KAAM,aAAcJ,MAAOkL,KAC9DpL,eAAgB,SAAC8D,GAAD,OAAa+J,EAAS,CAAEvN,KAAM,eAAgBJ,MAAO,CAAEf,MAAOA,EAAO2E,QAASA,MAC9FuC,MAAOgG,EAAMhG,MACb7F,cAAe,SAAC6F,GAAD,OAAWwH,EAAS,CAAEvN,KAAM,cAAeJ,MAAOmG,KACjEzE,cAAe,kBAAMiM,EAAS,CAAEvN,KAAM,iBACtCI,OAAQ2L,EAAM3L,OACdE,gBAAiByL,EAAMzL,gBACvBE,sBAAuB,SAACF,GAAD,OAAqBiN,EAAS,CAAEvN,KAAM,uBAAwBJ,MAAO,CAAEf,MAAOA,EAAOyB,gBAAiBA,MAC7HrB,aAAcA,GAAa,SAAC6D,GAAD,OAAUyE,QAAQC,IAAI1E,MACjDhD,SAAUA,KAGd,yBAAKX,UAAU,mBACb,kBAAC,GAAD,CACE2L,KAAMiB,EAAMF,YACZrI,QAASuI,EAAMvI,QACfuC,MAAOgG,EAAMhG,MACbzF,gBAAiByL,EAAMzL,gBACvBoL,OAAQK,EAAML,cCjGJ+B,QACW,cAA7B3F,OAAO2E,SAASiB,UAEe,UAA7B5F,OAAO2E,SAASiB,UAEhB5F,OAAO2E,SAASiB,SAAS9J,MACvB,2DCXN+J,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOA,OAAQ,SAAC/O,GAAD,OAAW,kBAAC,GAAD,UAE5BgP,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjH,MAAK,SAAAkH,GACjCA,EAAaC,iB","file":"static/js/main.23e556b1.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nconst Toolbar = (props) => {\n  const { classes } = props;\n  return (\n    <form noValidate onSubmit={props.handleSubmit}>\n      <TextField\n        className={classes.root}\n        required\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n        label=\"Git Repository URL\"\n        style={{ width: \"25%\", verticalAlign: \"middle\" }}\n        onChange={(e) => { props.onGitURLChange(e.target.value) }}\n        inputRef={props.register}\n        name=\"git_url\"\n      />\n      <TextField\n        className={classes.root}\n        type=\"password\"\n        placeholder=\"Access Token\"\n        defaultValue=\"Access Token\"\n        label=\"Access Token\"\n        style={{ width: \"10%\", verticalAlign: \"middle\" }}\n        onChange={(e) => { props.onTokenChange(e.target.value) }}\n      />\n      <Multiselect\n        className={classes.root}\n        options={props.labels}\n        selectedValues={props.selected_labels}\n        onSelect={(options) => { props.onSelectedLabelChange(options) }}\n        onRemove={(options) => { props.onSelectedLabelChange(options) }}\n        displayValue=\"name\"\n        style={selector_style}\n        placeholder=\"filter by labels\"\n        hidePlaceholder=\"false\"\n        emptyRecordMsg=\"No Labels\"\n        closeIcon=\"cancel\"\n      />\n      <ButtonGroup size=\"small\" style={{ height: \"34px\" }} >\n        <Button onClick={(e) => { props.onZoomChange(\"Weeks\") }}>Weeks</Button>\n        <Button onClick={(e) => { props.onZoomChange(\"Days\") }}>Days</Button>\n      </ButtonGroup>\n      <IconButton color=\"primary\" style={{ verticalAlign: \"middle\" }}>\n        <CachedIcon onClick={(e) => { props.onUpdateClick() }} />\n      </IconButton>\n    </form>\n  );\n}\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      fontSize: \"15px\",\n    },\n  },\n});\n\n\nconst selector_style = {\n  multiselectContainer: {\n    width: \"50%\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    padding: \"4px\",\n    alignItems: \"flex-end\",\n  },\n  chips: {\n    background: \"light blue\",\n    fontSize: \"15px\",\n  },\n  searchBox: {\n    border: \"none\",\n  },\n\n}\nexport default withStyles(styles)(Toolbar);","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import moment from 'moment';\n\nexport const isValidVariable = (variable) => {\n  return (variable !== null && variable !== [] && variable !== void 0)\n}\n\nconst calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date);\n  const due_date_moment = moment(due_date);\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n}\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date).add(duration - 1, 'd').toDate();\n  return due_date.toLocaleDateString(\"ja-JP\");\n}\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = start_date.toLocaleDateString(\"ja-JP\");\n  } else {\n    start_date_str = new Date(created_at).toLocaleDateString(\"ja-JP\");\n  }\n  return start_date_str;\n}\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n}\n\nexport const getGanttUnscheduled = (start_date, due_date) => {\n  let unscheduled = null;\n  if (start_date != null && due_date != null) {\n    unscheduled = false;\n  } else {\n    unscheduled = true;\n  }\n  return unscheduled;\n}\n\nexport const updateGanttIssue = (issue, gantt_parse) => {\n  let data = [];\n  let links = [];\n  data.push(issue);\n  data = { data: data, links: links }\n  gantt_parse(data);\n} ","import { isValidVariable } from './CommonHelper.js';\n\nconst removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\nconst removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\n\nexport const adjustURL = (git_url) => {\n  let url = git_url;\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  return url;\n}\n\nexport const getStartDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceStartDateInDescriptionString = (description, write_str) => {\n  const start_date = getStartDateFromDescriptionString(description);\n  if (start_date != null) {\n    return description.replace(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"start_date: \" + write_str);\n  } else {\n    return \"start_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getDueDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceDueDateInDescriptionString = (description, write_str) => {\n  const due_date = getDueDateFromDescriptionString(description);\n  if (due_date != null) {\n    return description.replace(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"due_date: \" + write_str);\n  } else {\n    return \"due_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getProgressFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/progress: \\d{1}\\.\\d{1}/);\n  if (str == null) {\n    return 0.1;\n  }\n  str = str[0].match(/\\d{1}\\.\\d{1}/)[0];\n  return parseFloat(str);\n}\n\nexport const replaceProgressInDescriptionString = (description, write_float_number) => {\n  const progress = getProgressFromDescriptionString(description);\n  let write_round_str = Math.round(write_float_number * 10) / 10;\n  if (write_float_number === \"1\"){\n    write_float_number = \"1.0\"\n  }\n  if (progress != null) {\n    return description.replace(/progress: \\d{1}\\.\\d{1}/, \"progress: \" + write_round_str);\n  } else {\n    return \"progress: \" + write_round_str + \"  \\n\" + description;\n  }\n}\n\nexport const convertLabelsListToString = (label_list) => {\n  let label_str = \"\";\n  if (isValidVariable(label_list)) {\n    label_list.map((label) => {\n      label_str += label.id + \":\" + label.name + \",\"\n      return null;\n    });\n  }\n  return label_str;\n}\n\nexport const convertLabelsStringToList = (label_str) => {\n  let label_list = [];\n  if (isValidVariable(label_str)) {\n    const split_label = label_str.split(',');\n    split_label.forEach((element, index, array) => {\n      if (index < split_label.length - 1) {\n        const id_label = element.split(':');\n        const label = {\n          id: id_label[0],\n          name: id_label[1],\n        }\n        label_list.push(label)\n      }\n    });\n  }\n  return label_list;\n}","import { adjustURL } from '../Common/Parser.js';\nimport { isValidVariable } from '../Common/CommonHelper.js';\n\nconst GitHubAPIURL = \"https://api.github.com/repos/\";\nconst GitHubURL = \"https://github.com/\";\n\nexport const isGitHubURL = (git_url) => {\n  return /github\\.com/.test(git_url);\n}\n\nconst getGitHubNameSpaceFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitHubProjectFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues';\n}\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues/' + number;\n}\n\nexport const getGitHubAPIURLIssueFilterdLabel = (git_url, labels) => {\n  let labels_url_str = \"\";\n  if (isValidVariable(labels)) {\n    labels_url_str += \"?labels=\"\n    labels.map((label) => {\n      labels_url_str += label.name + \",\"\n      return null;\n    });\n  }\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues' + labels_url_str;\n}\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/labels';\n}\n\nexport const getGitHubAPIURLCollaborators = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/collaborators';\n}\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitHubURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + \"/issues/\" + number;\n}\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url)\n    + \"/issues/new?assignees=&labels=&title=&body=\";\n}","import { adjustURL } from '../Common/Parser.js';\nimport { isValidVariable } from '../Common/CommonHelper.js';\n\nconst GitLabAPIURL = \"https://gitlab.com/api/v4/projects/\";\nconst GitLabURL = \"https://gitlab.com/\";\n\nexport const isGitLabURL = (git_url) => {\n  return /gitlab\\.com/.test(git_url);\n}\n\nconst getGitLabNameSpaceFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitLabProjectFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nconst postFixToken = (token) => {\n  let post_fix_str = \"\";\n  if (isValidVariable(token)) {\n    post_fix_str += \"?access_token=\" + token + \"&\";\n  } else {\n    post_fix_str += \"?\";\n  }\n  return post_fix_str;\n}\n\nexport const getGitLabAPIURLIssueFilterdLabel = (git_url, token, labels) => {\n  let post_fix_str = postFixToken(token);\n  if (isValidVariable(labels)) {\n    post_fix_str += \"labels=\";\n    labels.map((label) => {\n      post_fix_str += label.name + \",\"\n      return null;\n    });\n  }\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues' + post_fix_str;\n}\n\nexport const getGitLabAPIURLIssue = (git_url, token, labels) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues' + post_fix_str;\n}\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues/' + number + post_fix_str;\n}\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/labels' + post_fix_str;\n}\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitLabURL + getGitLabNameSpaceFromGitURL(url) + \"/\" + getGitLabProjectFromGitURL(url)+ \"/-/issues/\" + number;\n}\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitLabURL + getGitLabNameSpaceFromGitURL(url) + \"/\" + getGitLabProjectFromGitURL(url)\n         + \"/issues/new?issue[description]=\";\n}","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getDueDateFromDescriptionString,\n  replaceDueDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttUnscheduled,\n  getGanttDuration,\n} from '../Common/CommonHelper.js';\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getStartDateFromDescriptionString(description);\n  const due_date = getDueDateFromDescriptionString(description);\n\n  const gantt_task = {\n    id: issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(description),\n    unscheduled: getGanttUnscheduled(start_date, due_date),\n  }\n  return gantt_task;\n}\n\nexport const updateGitHubDescriptionStringFromGanttTask = (description, gantt_task) => {\n  const start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n  const due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n\n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceDueDateInDescriptionString(description, due_date_str);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return description;\n}","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterdLabel,\n  getGitHubAPIURLLabel,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n  getGitHubAPIURLCollaborators,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n} from './GitHubHelper.js';\nimport {\n  updateGanttIssue,\n  isValidVariable,\n} from '../Common/CommonHelper.js';\n\nexport const getGitHubIssuesFromAPI = async (gantt_parse, git_url, selected_labels) => {\n  axios.get(getGitHubAPIURLIssueFilterdLabel(git_url, selected_labels)).then((res) => {\n    res.data.map((issue_info) => {\n      axios.get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number)).then((res) => {\n        const gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n        updateGanttIssue(gantt_task, gantt_parse);\n      });\n      return null;\n    });\n  });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (setLabels, git_url, labels, token) => {\n  if (isValidVariable(token) && token !== \"Access Token\") {\n    axios.get(getGitHubAPIURLCollaborators(git_url),\n      { headers: { 'Authorization': `token ${token}` }, data: {} }\n    ).then((res) => {\n      let list = [];\n      console.log(res.data)\n      res.data.map((info) => {\n        list.push({ id: info.id, name: info.login });\n        return null;\n      });\n      setLabels(labels.concat(list));\n    });\n  } else {\n    token = \"\";\n  }\n  axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\n    let list = [];\n    console.log(res.data)\n    res.data.map((info) => {\n      list.push(info);\n      return null;\n    });\n    setLabels(labels.concat(list));\n  });\n};\n\nexport const updateGitHubIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n  const url = getGitHubAPIURLIssuebyNumber(git_url, gantt_task.id);\n  axios.get(url).then((res) => {\n    axios.post(url, {\n      body: updateGitHubDescriptionStringFromGanttTask(res.data.body, gantt_task),\n    }, {\n      headers: {\n        'Authorization': `token ${token}`\n      }\n    }).then((res) => {\n      console.log(\"success update issue\");\n    }).catch((err) => {\n      alert('failed update GitHub issue. check your token.');\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(getGitHubURLIssuebyNumber(git_url, gantt_task_id), \"_blank\");\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"due_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, \"_blank\");\n};","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n} from '../Common/Parser.js';\nimport { \n  getGanttStartDate,\n  getGanttUnscheduled,\n  getGanttDuration,\n } from '../Common/CommonHelper.js';\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getStartDateFromDescriptionString(issue_info.description);\n  const due_date = new Date(issue_info.due_date).toLocaleDateString(\"ja-JP\");\n  \n  const gantt_task = {\n    id: issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(issue_info.description),\n    unscheduled: getGanttUnscheduled(start_date, due_date),\n  }\n  return gantt_task;\n}\n\nexport const updateGitLabDescriptionStringFromGanttTask = (description, gantt_task) => {\n  let start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n\n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return encodeURIComponent(description);\n}","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterdLabel,\n  getGitLabAPIURLIssue,\n  getGitLabAPIURLLabel,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n} from './GitLabHelper.js';\nimport { \n  calculateDueDate,\n  updateGanttIssue,\n } from '../Common/CommonHelper.js';\n\nexport const getGitLabIssuesFromAPI = async (gantt_parse, git_url, token, selected_labels) => {\n  axios.get(getGitLabAPIURLIssueFilterdLabel(git_url, token, selected_labels)).then((res) => {\n    res.data.map((issue_info) => {\n      const gantt_task = generateGanttTaskFromGitLab(issue_info);\n      updateGanttIssue(gantt_task, gantt_parse);\n      return null;\n    });\n  });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (setLabels, git_url, token) => {\n  axios.get(getGitLabAPIURLLabel(git_url, token)).then((res) => {\n    let label_list = [];\n    res.data.map((lebel_info) => {\n      label_list.push(lebel_info);\n      return null;\n    });\n    setLabels(label_list);\n  });\n};\n\nexport const updateGitLabIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n  axios.get(getGitLabAPIURLIssue(git_url, token)).then((res) => {\n    res.data.map((issue_info) => {\n      if (issue_info.iid === gantt_task.id) {\n        const description = updateGitLabDescriptionStringFromGanttTask(issue_info.description, gantt_task);\n        const start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n        const due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n        const put_url = getGitabAPIURLIssuebyNumber(git_url, token, gantt_task.id)\n          + \"&description=\" + description\n          + \"&due_date=\" + due_date_str;\n        axios.put(put_url).then((res) => {\n          console.log(\"success update issue\")\n        }).catch((err) => {\n          alert('failed update GitLab issue. check your token.')\n          getGitLabIssuesFromAPI(gantt, git_url);\n        });\n      }\n      return null;\n    });\n  });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(getGitLabURLIssuebyNumber(git_url, id), \"_blank\");\n};\n\nexport const openGitLabNewIssueAtBrowser = (id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%20%20%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, \"_blank\");\n};","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport { isGitLabURL } from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  \n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\n\nexport const getIssuesFromAPI = async (gantt_parse, git_url, token, selected_labels) => {\n  if (isGitHubURL(git_url)) {\n    getGitHubIssuesFromAPI(gantt_parse, git_url, selected_labels);\n  }\n  if (isGitLabURL(git_url)) {\n    getGitLabIssuesFromAPI(gantt_parse, git_url, token, selected_labels);\n  }\n}\n\nexport const setLabelListOfRepoFromAPI = async (setLabels, git_url, labels, token) => {\n  if (isGitHubURL(git_url)) {\n    setGitHubLabelListOfRepoFromAPI(setLabels, git_url, labels);\n  }\n  if (isGitLabURL(git_url)) {\n    setGitLabLabelListOfRepoFromAPI(setLabels, git_url, token);\n  }\n}\n\nexport const updateIssueByAPI = (gantt_task_id, token, gantt, git_url) => {\n  if (isGitHubURL(git_url)) {\n    updateGitHubIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    updateGitLabIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n}\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    openGitLabNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport {\n  getIssuesFromAPI,\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../../functions/Common/IssueAPI.js';\n\nconst Gantt = (props) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setGanttConfig(gantt);\n    attachEvent(gantt, props);\n    gantt.init(containerRef.current);\n    gantt.ext.zoom.setLevel(props.zoom);\n    gantt.clearAll();\n    getIssuesFromAPI((data) => {\n      gantt.parse(data);\n      gantt.sort(\"start_date\", false);\n    }, props.git_url, props.token, props.selected_labels);\n  }, [])\n\n  useEffect(() => {\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, [props.zoom])\n\n  useEffect(() => {\n    gantt.clearAll();\n    getIssuesFromAPI((data) => {\n      gantt.parse(data);\n      gantt.sort(\"start_date\", false);\n    }, props.git_url, props.token, props.selected_labels);\n  }, [props.git_url, props.token, props.selected_labels, props.update])\n\n  return (\n    <div\n      ref={containerRef}\n      style={{ width: '100%', height: '100%' }}\n    ></div>\n  );\n}\n\nconst zoom_level = {\n  levels: [\n    {\n      name: 'Days',\n      scale_height: 60,\n      min_column_width: 70,\n      scales: [\n        { unit: 'week', step: 1, format: '%M, %d week' },\n        { unit: 'day', step: 1, format: '%d %M' }\n      ]\n    },\n    {\n      name: 'Weeks',\n      scale_height: 60,\n      min_column_width: 70,\n      scales: [\n        { unit: \"month\", step: 1, format: '%Y %F' },\n        { unit: 'week', step: 1, format: '%M, %d week' },\n      ]\n    }\n  ]\n};\n\nconst setGanttConfig = (gantt) => {\n  gantt.config.xml_date = \"%Y/%m/%d %H:%i\";\n  gantt.config.order_branch = true;\n  gantt.config.order_branch_free = true;\n\n  gantt.config.keep_grid_width = true;\n  gantt.config.grid_resize = true;\n\n  gantt.config.show_unscheduled = true;\n  gantt.config.sort = true;\n\n  gantt.ext.zoom.init(zoom_level);\n}\n\nconst attachEvent = (gantt, props) => {\n  gantt.attachEvent(\"onTaskDblClick\", (gantt_task_id, e) => {\n    openIssueAtBrowser(gantt_task_id, props.git_url);\n  });\n  gantt.attachEvent(\"onTaskCreated\", (gantt_task_id, e) => {\n    openNewIssueAtBrowser(gantt_task_id, props.git_url);\n  });\n  gantt.attachEvent(\"onAfterTaskUpdate\", (id, gantt_task) => {\n    updateIssueByAPI(gantt_task, props.token, gantt, props.git_url);\n  });\n}\n\nexport default Gantt;","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React, { useReducer, useEffect } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport Toolbar from './components/Toolbar';\nimport Gantt from './components/Gantt';\nimport { bake_cookie } from 'sfcookies';\nimport { withRouter } from 'react-router-dom';\nimport { setLabelListOfRepoFromAPI } from './functions/Common/IssueAPI.js';\nimport { convertLabelsListToString, convertLabelsStringToList } from './functions/Common/Parser.js';\n\nconst initialState = {\n  currentZoom: 'Weeks',\n  update: 0,\n  git_url: '',\n  token: 'Tokens that have not yet been entered',\n  labels: [],\n  selected_labels: [],\n}\n\nconst reducerFunc = (state, action) => {\n  switch (action.type) {\n    case 'zoomChange':\n      return { ...state, currentZoom: handleZoomChange(action.value) }\n    case 'gitURLChange':\n      return { ...state, git_url: handleGitURLChange(action.value.props, action.value.git_url, state.selected_labels) }\n    case 'tokenChange':\n      return { ...state, token: action.value }\n    case 'labelChange':\n      return { ...state, labels: action.value }\n    case 'selectedLabelsChange':\n      return { ...state, selected_labels: handleSelectedLabelsChange(action.value.props, state.git_url, action.value.selected_labels) }\n    case 'updateClick':\n      return { ...state, update: state.update + 1 }\n    case 'setStateFromURLQueryString':\n      return setStateFromURLQueryString(state, action.value.props, action.value.setValue)\n    default:\n      return state\n  }\n}\n\nconst handleZoomChange = (zoom) => {\n  bake_cookie('currentZoom', zoom);\n  return zoom;\n}\n\nconst handleGitURLChange = (props, git_url, selected_labels) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertLabelsListToString(selected_labels));\n  props.history.push({\n    search: params.toString(),\n  });\n  return git_url;\n}\n\nconst handleSelectedLabelsChange = (props, git_url, selected_labels) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertLabelsListToString(selected_labels));\n  props.history.push({\n    search: params.toString(),\n  });\n  return selected_labels;\n}\n\nconst setStateFromURLQueryString = (state, props, setValue) => {\n  const params = new URLSearchParams(props.location.search);\n  state.git_url = params.get('giturl');\n  state.selected_labels = convertLabelsStringToList(params.get('labels'));\n  setValue(\"git_url\", state.git_url)\n  return state;\n}\n\nconst App = (props) => {\n  const [state, dispatch] = useReducer(reducerFunc, initialState);\n  const { register, handleSubmit, setValue } = useForm();\n\n  useEffect(() => {\n    console.log(\"location\")\n    dispatch({ type: 'setStateFromURLQueryString', value: { props: props, setValue: setValue } });\n  }, [props.location]);\n\n  useEffect(() => {\n    console.log(\"aa\")\n    setLabelListOfRepoFromAPI((labels) => { dispatch({ type: 'labelChange', value: labels }) }, state.git_url, state.labels, state.token);\n  }, [state.git_url]);\n\n  return (\n    <>\n      <div className=\"zoom-bar\">\n        <Toolbar\n          zoom={state.currentZoom}\n          onZoomChange={(zoom) => dispatch({ type: 'zoomChange', value: zoom })}\n          onGitURLChange={(git_url) => dispatch({ type: 'gitURLChange', value: { props: props, git_url: git_url } })}\n          token={state.token}\n          onTokenChange={(token) => dispatch({ type: 'tokenChange', value: token })}\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\n          labels={state.labels}\n          selected_labels={state.selected_labels}\n          onSelectedLabelChange={(selected_labels) => dispatch({ type: 'selectedLabelsChange', value: { props: props, selected_labels: selected_labels } })}\n          handleSubmit={handleSubmit((data) => console.log(data))}\n          register={register}\n        />\n      </div>\n      <div className=\"gantt-container\">\n        <Gantt\n          zoom={state.currentZoom}\n          git_url={state.git_url}\n          token={state.token}\n          selected_labels={state.selected_labels}\n          update={state.update}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={(props) => <App />} />\n  </Router>,\n  document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}