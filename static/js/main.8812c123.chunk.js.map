{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","components/Gantt/GanttAttachEvent.js","components/Gantt/GanttConfig.js","components/Gantt/Gantt.js","components/Gantt/GanttTemplates.js","components/Gantt/index.js","State/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","marginRight","props","classes","noValidate","TextField","className","required","placeholder","label","style","onChange","e","onGitURLChange","target","value","inputRef","register","name","type","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","Autocomplete","size","member_list","getOptionLabel","option","selected_assignee","noOptionsText","assignee","onSelectedAssigneeChange","renderInput","params","variant","ButtonGroup","height","Button","onClick","onZoomChange","IconButton","color","onUpdateClick","window","open","Toolbar","isValidVariable","variable","Array","isArray","length","isValidIDName","id_name","isValidURL","url","test","orgRound","base","Math","round","calculateDuration","start_date","due_date","start_date_moment","moment","diff","calculateDueDate","start_date_str","duration","Date","add","toDate","date2string","date","Object","prototype","toString","call","isNaN","getFullYear","string","toLocaleDateString","getMonth","getDate","adjustDateString","date_str","getGanttStartDate","created_at","getGanttDueDate","getGanttUpdateDate","updated_at","getGanttDuration","removeFirstSharp","id_str","substring","removeLastSpace","slice","parseYamlFromDescription","description","yaml_part","str","split","getYamlPartFromDescription","yaml_struct","yaml","load","gantt","message","text","getNumberFromDescriptionYaml","column_name","number","getDateFromDescriptionYaml","getStringFromDescriptionYaml","replacePropertyInDescriptionString","task","task_section","dump","first_section","end_section","convertIDNameListToString","list","map","info","id","convertIDNamesStringToList","split_string","forEach","element","index","array","parseInt","push","GitHubAPIURL","GitHubURL","isGitHubURL","git_url","getGitHubNameSpaceFromGitURL","split_git_url","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","getGitHubAPIURLIssueFilterd","url_query_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","getGitHubURLIssuebyNumber","n","Number","isFinite","isGitLabURL","getSelfHostingGitLabDomain","getGitLabDomain","gitlab_domain","self_hosting_gitlab_domain","getGitLabURL","getGitLabAPIURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterd","getGitabAPIURLIssuebyNumber","getGitLabAPIURLLabel","getGitLabAPIURLMember","getGitHubAssignee","issue_info","login","generateGanttTaskFromGitHub","title","progress","parent","update","updateGitHubDescriptionStringFromGanttTask","gantt_task","replace","getGitHubIssueFromAPI","a","axios","get","then","res","data","body","catch","err","Promise","reject","getGitHubIssuesFromAPI","promise_list","all","setGitHubLabelListOfRepoFromAPI","setGitHubMemberListOfRepoFromAPI","headers","Authorization","members","console","warn","openGitHubNewIssueAtBrowser","due_date_str","encodeURIComponent","getGitHubURLNewIssueWithTemplate","getGitLabAssignee","generateGanttTaskFromGitLab","iid","getGitLabIssuesFromAPI","error","setGitLabLabelListOfRepoFromAPI","lebel_info","setGitLabMemberListOfRepoFromAPI","updateGitLabIssueFromGanttTask","updateGitLabDescriptionStringFromGanttTask","put_url","put","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","resolve","setLabelListOfRepoFromAPI","setMemberListOfRepoFromAPI","updateIssueByAPI","post","updateGitHubIssueFromGanttTask","openIssueAtBrowser","gantt_task_id","openGitHubIssueAtBrowser","updateParentTaskDate","parent_gantt_task","getTask","valueOf","getTime","updateTask","render","end_date","updateChildTaskDate","child_gantt_task_id","child_gantt_task","date_duration","calculateStartDate","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","shortenDate","Gantt","containerRef","useRef","useEffect","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","open_tree_initially","fit_tasks","sort","columns","align","tree","template","obj","befweek","setDate","log","plugins","drag_timeline","showDate","ext","zoom","init","templates","timeline_cell_class","item","today","getDay","yesterday","task_text","start","end","task_class","setGanttTemplates","attachEvent","openNewIssueAtBrowser","getChildren","mode","original","state","getState","minDate","min_date","maxDate","max_date","scaleStep","scale_step","scale_unit","repaint","abs","current","setLevel","eachTask","$open","clearAll","d","addTask","ref","initialState","currentZoom","reducerFunc","action","handleGitURLChange","handleTokenChange","handleSelectedLabelsChange","handleMemberListChange","handleSelectedAssigneeChange","handleOpenIssueAtBrowser","handleOpenNewIssueAtBrowser","handleUpdateIssueByAPI","setStateFromURLQueryString","setValue","setURLQuery","bake_cookie","URLSearchParams","location","search","set","history","selected_assignee_list","withRouter","useReducer","dispatch","useForm","read_cookie","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wYAwHMA,EAAiB,CACrBC,qBAAsB,CACpBC,MAAO,MACPC,QAAS,eACTC,cAAe,SACfC,QAAS,MACTC,WAAY,YAEdC,MAAO,CACLC,WAAY,aACZC,SAAU,QAEZC,UAAW,CACTC,OAAQ,SAIGC,eA1BA,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJ,QAAS,CACPL,SAAU,OACVM,YAAa,WAsBJH,EA9HC,SAACI,GAAW,IAClBC,EAAYD,EAAZC,QACR,OACE,uBAAMC,YAAU,EAAhB,UACE,cAACC,EAAA,EAAD,CACEC,UAAWH,EAAQH,KACnBO,UAAQ,EACRC,YAAY,mDACZC,MAAM,qBACNC,MAAO,CAAEtB,MAAO,MAAOE,cAAe,UACtCqB,SAAU,SAACC,GACTV,EAAMW,eAAeD,EAAEE,OAAOC,QAEhCC,SAAUd,EAAMe,SAChBC,KAAK,YAEP,cAACb,EAAA,EAAD,CACEC,UAAWH,EAAQH,KACnBmB,KAAK,WACLX,YAAY,eACZC,MAAM,eACNC,MAAO,CAAEtB,MAAO,MAAOE,cAAe,UACtCqB,SAAU,SAACC,GACTV,EAAMkB,cAAcR,EAAEE,OAAOC,QAE/BC,SAAUd,EAAMe,SAChBC,KAAK,UAEP,cAAC,cAAD,CACEZ,UAAWH,EAAQH,KACnBqB,QAASnB,EAAMoB,OACfC,eAAgBrB,EAAMsB,gBACtBC,SAAU,SAACJ,GACTnB,EAAMwB,sBAAsBL,IAE9BM,SAAU,SAACN,GACTnB,EAAMwB,sBAAsBL,IAE9BO,aAAa,OACblB,MAAOxB,EACPsB,YAAY,mBACZqB,gBAAgB,QAChBC,eAAe,YACfC,UAAU,WAEZ,cAACC,EAAA,EAAD,CACE1B,UAAWH,EAAQH,KACnBiC,KAAK,QACLZ,QAASnB,EAAMgC,YACfC,eAAgB,SAACC,GAAD,OAAYA,EAAOlB,MACnCH,MAAOb,EAAMmC,kBACbC,cAAc,yBACd3B,SAAU,SAACC,EAAG2B,GACZrC,EAAMsC,yBAAyBD,IAEjC7B,MAAO,CACLtB,MAAO,MACPE,cAAe,SACfD,QAAS,eACTY,YAAa,QAEfwC,YAAa,SAACC,GAAD,OACX,cAACrC,EAAA,EAAD,2BACMqC,GADN,IAEEpC,UAAWH,EAAQH,KACnBS,MAAM,WACNkC,QAAQ,iBAId,eAACC,EAAA,EAAD,CAAaX,KAAK,QAAQvB,MAAO,CAAEmC,OAAQ,QAA3C,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,SAACnC,GACRV,EAAM8C,aAAa,UAFvB,mBAOA,cAACF,EAAA,EAAD,CACEC,QAAS,SAACnC,GACRV,EAAM8C,aAAa,SAFvB,qBAQF,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUxC,MAAO,CAAEpB,cAAe,UAApD,SACE,cAAC,IAAD,CACEyD,QAAS,SAACnC,GACRV,EAAMiD,qBAIZ,cAACF,EAAA,EAAD,CAAYC,MAAM,UAAUxC,MAAO,CAAEpB,cAAe,UAApD,SACE,cAAC,IAAD,CAAYyD,QAAS,kBAAMK,OAAOC,KAAK,+DCvGhCC,G,OAAAA,G,0DCAFC,EAAkB,SAACC,GAC9B,OACe,OAAbA,GACAA,IAAa,SACA,IAAbA,GACa,KAAbA,KAIEC,MAAMC,QAAQF,IACTA,EAASG,OAAS,GAahBC,EAAgB,SAACC,GAC5B,OAAON,EAAgBM,IAAY,OAAQA,GAAW,SAAUA,GAGrDC,EAAa,SAACC,GACzB,QAAKR,EAAgBQ,IAGd,aAAaC,KAAKD,IAUdE,EAAW,SAAClD,EAAOmD,GAC9B,OAAOC,KAAKC,MAAMrD,EAAQmD,GAAQA,GAGvBG,EAAoB,SAACC,EAAYC,GAC5C,IAAMC,EAAoBC,IAAOH,EAAY,cAE7C,OADwBG,IAAOF,EAAU,cAClBG,KAAKF,EAAmB,QAAU,GAW9CG,EAAmB,SAACC,EAAgBC,GAC/C,IAAMP,EAAa,IAAIQ,KAAKF,GACtBL,EAAWE,IAAOH,EAAY,cACjCS,IAAIF,EAAW,EAAG,KAClBG,SACH,OAAOC,EAAYV,IAGRU,EAAc,SAACC,GAC1B,GAA6C,kBAAzCC,OAAOC,UAAUC,SAASC,KAAKJ,GACjC,OAAO,KACF,GAAIK,MAAML,EAAKM,eACpB,OAAO,KAGT,IAAIC,EAASP,EAAKQ,mBAAmB,SAChC,0BAA0B1B,KAAKyB,KAIlCA,EAHaP,EAAKM,cAGF,KAFFN,EAAKS,WAAa,GAEF,IADlBT,EAAKU,WAGnB,OAAOH,GAGII,EAAmB,SAACC,GAC/B,OAAOb,EAAY,IAAIH,KAAKgB,KAGjBC,EAAoB,SAACzB,EAAYC,EAAUyB,GAOtD,OALkB,MAAd1B,GAAkC,MAAZC,EACPU,EAAYX,GAEZuB,EAAiBG,IAKzBC,EAAkB,SAAC3B,EAAYC,EAAUyB,GAOpD,OALkB,MAAd1B,GAAkC,MAAZC,EACT,IAAIO,KAAKP,GAET,IAAIO,KAAKkB,IAKfE,EAAqB,SAACF,EAAWG,GAO5C,OAJqBN,EADH,MAAdM,EACkCA,EAEAH,IAK3BI,EAAmB,SAAC9B,EAAYC,GAO3C,OALkB,MAAdD,GAAkC,MAAZC,EACbF,EAAkBC,EAAYC,GAE9B,G,QCzHF8B,EAAmB,SAACC,GAI/B,OAHIA,EAAO3C,OAAS,GAAK,KAAKK,KAAKsC,KACjCA,EAASA,EAAOC,UAAU,IAErBD,GAUIE,EAAkB,SAACzC,GAI9B,OAHIA,EAAIJ,OAAS,GAAK,MAAMK,KAAKD,KAC/BA,EAAMA,EAAI0C,MAAM,GAAI,IAEf1C,GAqBI2C,EAA2B,SAACC,GACvC,GAAoB,OAAhBA,EACF,OAAO,KAET,IAAMC,EAtBkC,SAACD,GACzC,GAAoB,OAAhBA,EACF,OAAO,KAET,GAA2B,kBAAhBA,EACT,OAAO,KAET,IAAIE,EAAMF,EAAYG,MAAM,YAC5B,OAAY,OAARD,GAAgBA,EAAIlD,OAAS,GAIrB,QADZkD,EAAMA,EAAI,GAAGC,MAAM,SACCD,EAAIlD,OAAS,EAHxB,KAMFkD,EAAI,GAOOE,CAA2BJ,GAC7C,GAAkB,OAAdC,EACF,OAAO,KAGT,IAAII,EAAc,KAClB,IACEA,EAAcC,IAAKC,KAAKN,GACxB,MAAOhG,GACPuG,QAAMC,QAAQ,CAAEC,KAAM,mBAAqBT,EAAWzF,KAAM,UAE9D,OAAO6F,GAkBIM,EAA+B,SAACX,EAAaY,GACxD,GAAoB,OAAhBZ,EACF,OAAO,KAET,IAAMK,EAAcN,EAAyBC,GAC7C,GAAoB,OAAhBK,KAA0BO,KAAeP,GAC3C,OAAO,KAET,IAAMQ,EAASR,EAAYO,GAC3B,MAAsB,kBAAXC,EACF,KAEFA,GAGIC,EAA6B,SAACd,EAAaY,GACtD,GAAoB,OAAhBZ,EACF,OAAO,KAET,IAAMzB,EAlCoC,SAACyB,EAAaY,GACxD,GAAoB,OAAhBZ,EACF,OAAO,KAET,IAAMK,EAAcN,EAAyBC,GAC7C,GAAoB,OAAhBK,KAA0BO,KAAeP,GAC3C,OAAO,KAET,IAAMvB,EAASuB,EAAYO,GAC3B,MAAsB,kBAAX9B,EACF,KAEFe,EAAgBA,EAAgBf,IAsB1BiC,CAA6Bf,EAAaY,GACvD,MAAK,0BAA0BvD,KAAKkB,GAG7B,IAAIJ,KAAKI,GAFP,MAKEyC,EAAqC,SAAChB,EAAaiB,GAC9D,GAAoB,OAAhBjB,GAAiC,OAATiB,EAC1B,OAAO,KAET,IAAIC,EAAeZ,IAAKa,KAAKF,GAC7BC,EACE,YAEAA,EAFA,MAIF,IAAIhB,EAAMF,EAAYG,MAAM,YAC5B,GAAY,OAARD,GAAgBA,EAAIlD,OAAS,EAC/B,MAAI,MAAMK,KAAK2C,GACN,KAEFkB,EAAe,KAAOlB,EAE/B,IAAMoB,EAAgBlB,EAAI,GAE1B,GAAY,QADZA,EAAMA,EAAI,GAAGC,MAAM,SACCD,EAAIlD,OAAS,EAC/B,OAAO,KAET,IAAMqE,EAAcnB,EAAI,GACxB,OAAqB,MAAjBkB,GAAwC,MAAfC,EACpB,KAEFD,EAAgBF,EAAeG,GAG3BC,EAA4B,SAACC,GACxC,IAAIzC,EAAS,GACb,OAAIlC,EAAgB2E,IAClBA,EAAKC,KAAI,SAACC,GAIR,OAHIxE,EAAcwE,IAAS7E,EAAgB6E,EAAKC,MAC9C5C,GAAU2C,EAAKC,GAAK,IAAMD,EAAKlH,KAAO,KAEjC,QAEFuE,GAEF,MAGI6C,EAA6B,SAAC7C,GACzC,IAAIyC,EAAO,GACX,GAAI3E,EAAgBkC,GAAS,CAC3B,IAAM8C,EAAe9C,EAAOqB,MAAM,KAClCyB,EAAaC,SAAQ,SAACC,EAASC,EAAOC,GACpC,GAAID,EAAQH,EAAa5E,OAAS,EAAG,CACnC,IAAMyE,EAAOK,EAAQ3B,MAAM,KAC3B,IAAKvB,MAAMqD,SAASR,EAAK,KAAM,CAC7B,IAAM3H,EAAQ,CACZ4H,GAAIO,SAASR,EAAK,IAClBlH,KAAMkH,EAAK,IAEbF,EAAKW,KAAKpI,aAKhByH,EAAO,CAAC,CAAEG,GAAI,EAAGnH,KAAM,KAEzB,OAAOgH,GC5JHY,EAAe,gCACfC,GAAY,sBAELC,GAAc,SAACC,GAC1B,QAAKnF,EAAWmF,OAGZA,EAAQnC,MAAM,KAAKnD,OAAS,IAGzB,cAAcK,KAAKiF,KAGfC,GAA+B,SAACD,GAC3C,IAAKD,GAAYC,GACf,OAAO,KAET,IAAME,EAAgBF,EAAQnC,MAAM,KACpC,OAAIqC,EAAcxF,QAAU,EACnBwF,EAAc,GAEhB,MAGIC,GAA6B,SAACH,GACzC,IAAKD,GAAYC,GACf,OAAO,KAET,IAAME,EAAgBF,EAAQnC,MAAM,KACpC,OAAIqC,EAAcxF,QAAU,EACnBwF,EAAc,GAEhB,MAgBIE,GAA+B,SAACJ,EAASzB,GACpD,OAAKwB,GAAYC,IAAa1F,EAAgBiE,GAI5CsB,EACAI,GAA6BD,GAC7B,IACAG,GAA2BH,GAC3B,WACAzB,EARO,MAYE8B,GAA8B,SAACL,EAAS3H,EAAQiB,GAC3D,IACGyG,GAAYC,KACZ1F,EAAgBjC,KAChBiC,EAAgBhB,GAEjB,OAAO,KAET,IAAIgH,EAAgB,IAapB,OAZAA,GAAiB,UACjBjI,EAAO6G,KAAI,SAAC1H,GACNmD,EAAcnD,KAChB8I,GAAiB9I,EAAMS,KAAO,QAI9B0C,EAAcrB,IACM,KAAlBA,EAASrB,OACXqI,GAAiB,aAAehH,EAASrB,MAI3C4H,EACAI,GAA6BD,GAC7B,IACAG,GAA2BH,GAC3B,UACAM,GAISC,GAAuB,SAACP,GACnC,OAAKD,GAAYC,GAIfH,EACAI,GAA6BD,GAC7B,IACAG,GAA2BH,GAC3B,UAPO,MAWEQ,GAA+B,SAACR,GAC3C,OAAKD,GAAYC,GAIfH,EACAI,GAA6BD,GAC7B,IACAG,GAA2BH,GAC3B,iBAPO,MAWES,GAA4B,SAACT,EAASzB,GACjD,OAAKwB,GAAYC,IAAa1F,EAAgBiE,IF3F7B,kBADMmC,EE+FTnC,IF9FeoC,OAAOC,SAASF,KE+F3CnC,EAASnB,EAAiBmB,IAExBA,GAAU,EACL,KAGPuB,GACAG,GAA6BD,GAC7B,IACAG,GAA2BH,GAC3B,WACAzB,GAdO,KF7Fa,IAACmC,GG7BZG,GAAc,SAACb,GAC1B,QAAKnF,EAAWmF,OAGZA,EAAQnC,MAAM,KAAKnD,OAAS,IAGzB,cAAcK,KAAKiF,KAGfc,GAA6B,SAACd,GACzC,GAAID,GAAYC,GACd,OAAO,KAET,IAAKnF,EAAWmF,GACd,OAAO,KAET,IAAME,EAAgBF,EAAQnC,MAAM,KACpC,OAAIqC,EAAcxF,QAAU,EACnBwF,EAAc,GAEhB,MAGIa,GAAkB,SAACf,GAC9B,IAAKnF,EAAWmF,GACd,OAAO,KAET,IAAIgB,EAAgB,KACdC,EAA6BH,GAA2Bd,GAI9D,OAHmC,OAA/BiB,IACFD,EAAgB,WAAaC,EAA6B,KAErDD,GAGIE,GAAe,SAAClB,GAC3B,OAAKnF,EAAWmF,GAGTe,GAAgBf,GAFd,MAKEmB,GAAkB,SAACnB,GAC9B,OAAKnF,EAAWmF,GAGTe,GAAgBf,GAAW,UAFzB,MAKEoB,GAA+B,SAACpB,GAC3C,IAAKnF,EAAWmF,GACd,OAAO,KAET,IAAME,EAAgBF,EAAQnC,MAAM,KACpC,OAAIqC,EAAcxF,QAAU,EACnBwF,EAAc,GAEhB,MAGImB,GAA6B,SAACrB,GACzC,IAAKnF,EAAWmF,GACd,OAAO,KAET,IAAME,EAAgBF,EAAQnC,MAAM,KACpC,OAAIqC,EAAcxF,QAAU,EACnBwF,EAAc,GAEhB,MAGIoB,GAAe,SAACC,GAC3B,IAAIC,EAAe,IAOnB,OALElH,EAAgBiH,IACN,0CAAVA,IAEAC,GAAgB,gBAAkBD,GAE7BC,GAGIC,GAA8B,SACzCzB,EACAuB,EACAlJ,EACAiB,GAEA,IAAKuB,EAAWmF,GACd,OAAO,KAET,IAAK1F,EAAgBiH,GACnB,OAAO,KAET,IAAKjH,EAAgBjC,GACnB,OAAO,KAET,IAAKsC,EAAcrB,GACjB,OAAO,KAET,IAAIkI,EAAeF,GAAaC,GAgBhC,OAfIjH,EAAgBjC,KAClBmJ,GAAgB,WAChBnJ,EAAO6G,KAAI,SAAC1H,GAIV,OAHImD,EAAcnD,KAChBgK,GAAgBhK,EAAMS,KAAO,KAExB,SAGP0C,EAAcrB,IACM,KAAlBA,EAASrB,OACXuJ,GAAgB,gBAAkBlI,EAAS8F,IAG/CoC,GAAgB,6BAEdL,GAAgBnB,GAChB,YACAoB,GAA6BpB,GAC7B,MACAqB,GAA2BrB,GAC3B,UACAwB,GAISE,GAA8B,SAAC1B,EAASuB,EAAOhD,GAC1D,IAAK1D,EAAWmF,GACd,OAAO,KAET,IAAK1F,EAAgBiH,GACnB,OAAO,KAET,IAAKjH,EAAgBiE,GACnB,OAAO,KAET,IAAMiD,EAAeF,GAAaC,GAClC,OACEJ,GAAgBnB,GAChB,YACAoB,GAA6BpB,GAC7B,MACAqB,GAA2BrB,GAC3B,WACAzB,EACAiD,GAISG,GAAuB,SAAC3B,EAASuB,GAC5C,IAAK1G,EAAWmF,GACd,OAAO,KAET,IAAIwB,EAAeF,GAAaC,GAGhC,OAFAC,GAAgB,gBAGdL,GAAgBnB,GAChB,YACAoB,GAA6BpB,GAC7B,MACAqB,GAA2BrB,GAC3B,UACAwB,GAISI,GAAwB,SAAC5B,EAASuB,GAC7C,IAAK1G,EAAWmF,GACd,OAAO,KAET,IAAMwB,EAAeF,GAAaC,GAClC,OACEJ,GAAgBnB,GAChB,UACAoB,GAA6BpB,GAC7B,eACAwB,G,oBC1KEK,GAAoB,SAACC,GACzB,OAA4B,OAAxBA,EAAWxI,SACNwI,EAAWxI,SAASyI,MAEtB,IAGIC,GAA8B,SAACtE,EAAaoE,GACvD,IAAMzG,EAAamD,EAA2Bd,EAAa,cACrDpC,EAAWkD,EAA2Bd,EAAa,YAczD,MAZmB,CACjB0B,GAAI,IAAM0C,EAAWvD,OACrBH,KAAM0D,EAAWG,MACjB5G,WAAYyB,EAAkBzB,EAAYC,EAAUwG,EAAW/E,YAC/DzB,SAAU0B,EAAgB3B,EAAYC,EAAUwG,EAAW/E,YAC3DnB,SAAUuB,EAAiB9B,EAAYC,GACvC4G,SAAU7D,EAA6BX,EAAa,YACpDpE,SAAUuI,GAAkBC,GAC5BK,OAAQ,IAAM9D,EAA6BX,EAAa,UACxDA,YAAaA,EACb0E,OAAQnF,EAAmB6E,EAAW/E,WAAW+E,EAAW5E,cAKnDmF,GAA6C,SACxD3E,EACA4E,GAEA,IAAM3G,EAAiBiB,EAAiB0F,EAAWjH,YAChDkH,QAAQ,MAAO,KAKZ5D,EAAO,CACXtD,WAAYM,EACZL,SANmBI,EACnBC,EACA2G,EAAW1G,UACX2G,QAAQ,MAAO,KAIfL,SAAUlH,EAASsH,EAAWJ,SAAU,MAM1C,MAJI,WAAYI,IACd3D,EAAKwD,OAASxC,SAASvC,EAAiBkF,EAAWH,UAErDzE,EAAcgB,EAAmChB,EAAaiB,ICzCnD6D,GAAqB,uCAAG,WAAOxC,EAAS8B,GAAhB,SAAAW,EAAA,+EAC5BC,KACJC,IAAIvC,GAA6BJ,EAAS8B,EAAWvD,SACrDqE,MAAK,SAACC,GAEL,OADmBb,GAA4Ba,EAAIC,KAAKC,KAAMjB,MAG/DkB,OAAM,SAACC,GACN,OAAOC,QAAQC,OAAOF,OARS,2CAAH,wDAYrBG,GAAsB,uCAAG,WACpCpD,EACAzH,EACAa,GAHoC,SAAAqJ,EAAA,+EAK7BC,KACJC,IACCtC,GAA4BL,EAASzH,EAAiBa,IAEvDwJ,MAAK,SAACC,GACL,IAAMQ,EAAe,GAIrB,OAHAR,EAAIC,KAAK5D,KAAI,SAAC4C,GACZuB,EAAazD,KAAK4C,GAAsBxC,EAAS8B,OAE5CoB,QAAQI,IAAID,MAEpBL,OAAM,SAACC,GACN,OAAOC,QAAQC,OAAOF,OAjBU,2CAAH,0DAqBtBM,GAA+B,uCAAG,WAAOvD,EAASuB,GAAhB,SAAAkB,EAAA,+EACtCC,KAAMC,IAAIpC,GAAqBP,IAAU4C,MAAK,SAACC,GACpD,IAAIxK,EAAS,GAKb,OAJAwK,EAAIC,KAAK5D,KAAI,SAACC,GAEZ,OADA9G,EAAOuH,KAAK,CAAER,GAAID,EAAKC,GAAInH,KAAMkH,EAAKlH,OAC/B,QAEFI,MAPoC,2CAAH,wDAW/BmL,GAAgC,uCAAG,WAAOxD,EAASuB,GAAhB,SAAAkB,EAAA,0DAE5CnI,EAAgBiH,IACN,0CAAVA,EAH4C,yCAKrCmB,KACJC,IAAInC,GAA6BR,GAAU,CAC1CyD,QAAS,CAAEC,cAAc,SAAD,OAAWnC,IACnCuB,KAAM,KAEPF,MAAK,SAACC,GACL,IAAIc,EAAU,GAKd,OAJAd,EAAIC,KAAK5D,KAAI,SAACC,GAEZ,OADAwE,EAAQ/D,KAAK,CAAER,GAAID,EAAKC,GAAInH,KAAMkH,EAAK4C,QAChC,QAEF4B,MAhBiC,OAmB5CC,QAAQC,KAAK,uBAnB+B,2CAAH,wDA+FhCC,GAA8B,SAACxB,EAAYtC,GACtD,IAAMrE,EAAiBK,EAAY,IAAIH,MACjCkI,EAAe/H,EAAY,IAAIH,MACZ,MAArByG,EAAWH,SACbG,EAAWH,OAAS,GAEtB,IAAMxD,EAAO,CACXtD,WAAYM,EACZL,SAAUyI,EACV7B,SAAU,GACVC,OAAQxC,SAASvC,EAAiBkF,EAAWH,UAE3CY,EAAOrE,EAAmC,GAAIC,GAClDoE,EAAOiB,mBAAmBjB,GAC1B5I,OAAOC,KHzBuC,SAAC4F,GAC/C,OAAKD,GAAYC,GAIfF,GACAG,GAA6BD,GAC7B,IACAG,GAA2BH,GAC3B,8CAPO,KGuBGiE,CAAiCjE,GAAW+C,EAAM,WC5J1DmB,GAAoB,SAACpC,GACzB,OAAIxH,EAAgBwH,IAAe,aAAcA,GAC3CxH,EAAgBwH,EAAWxI,WAAa,SAAUwI,EAAWxI,SACxDwI,EAAWxI,SAASrB,KAGxB,IAGIkM,GAA8B,SAACrC,GAC1C,IAAMzG,EAAamD,EACjBsD,EAAWpE,YACX,cAEIpC,EAAWsB,EAAiBkF,EAAWxG,UACvCgH,EAAa,CACjBlD,GAAI,IAAM0C,EAAWsC,IACrBhG,KAAM0D,EAAWG,MACjB5G,WAAYyB,EAAkBzB,EAAYC,EAAUwG,EAAW/E,YAC/DzB,SAAU0B,EAAgB3B,EAAYC,EAAUwG,EAAW/E,YAC3DnB,SAAUuB,EAAiB9B,EAAYC,GACvC4G,SAAU7D,EAA6ByD,EAAWpE,YAAa,YAC/DpE,SAAU4K,GAAkBpC,GAC5BpE,YAAaoE,EAAWpE,YACxB0E,OAAQnF,EAAmB6E,EAAW/E,WAAW+E,EAAW5E,aAE1DiF,EAAS9D,EAA6ByD,EAAWpE,YAAa,UAMlE,OALe,OAAXyE,GACa,IAAXA,IACFG,EAAWH,OAAS,IAAMA,GAGvBG,GCzBI+B,GAAsB,uCAAG,WACpCrE,EACAuB,EACAhJ,EACAe,GAJoC,SAAAmJ,EAAA,+EAM7BC,KACJC,IAAIlB,GAA4BzB,EAASuB,EAAOhJ,EAAiBe,IACjEsJ,MAAK,SAACC,GACL,IAAIC,EAAO,GAMX,OALAD,EAAIC,KAAK5D,KAAI,SAAC4C,GACZ,IAAMQ,EAAa6B,GAA4BrC,GAE/C,OADAgB,EAAKlD,KAAK0C,GACH,QAEFQ,KAERE,OAAM,SAACC,GAEN,OADAW,QAAQU,MAAMrB,GACPC,QAAQC,OAAOF,OAnBU,2CAAH,4DAuBtBsB,GAA+B,uCAAG,WAAOvE,EAASuB,GAAhB,SAAAkB,EAAA,+EACtCC,KACJC,IAAIhB,GAAqB3B,EAASuB,IAClCqB,MAAK,SAACC,GACL,IAAIxK,EAAS,GAKb,OAJAwK,EAAIC,KAAK5D,KAAI,SAACsF,GAEZ,OADAnM,EAAOuH,KAAK4E,GACL,QAEFnM,KAER2K,OAAM,SAACC,GAEN,OADAW,QAAQU,MAAMrB,GACPC,QAAQC,OAAOF,OAbmB,2CAAH,wDAiB/BwB,GAAgC,uCAAG,WAAOzE,EAASuB,GAAhB,SAAAkB,EAAA,+EACvCC,KACJC,IAAIf,GAAsB5B,EAASuB,IACnCqB,MAAK,SAACC,GACL,IAAIc,EAAU,GAKd,OAJAd,EAAIC,KAAK5D,KAAI,SAACC,GAEZ,OADAwE,EAAQ/D,KAAK,CAAER,GAAID,EAAKC,GAAInH,KAAMkH,EAAKlH,OAChC,QAEF0L,KAERX,OAAM,SAACC,GAEN,OADAW,QAAQU,MAAMrB,GACPC,QAAQC,OAAOF,OAboB,2CAAH,wDAiBhCyB,GAAiC,SAC5CpC,EACAf,EACArD,EACA8B,GAEA,OAAO0C,KACJC,IACCjB,GACE1B,EACAuB,EACAnE,EAAiBkF,EAAWlD,MAG/BwD,MAAK,SAACC,GACL,IAAMf,EAAae,EAAIC,KACvB,GAAIR,IAAe6B,GAA4BrC,IAE3CnC,SAASmC,EAAWsC,OAASzE,SAASvC,EAAiBkF,EAAWlD,KAClE,CACA,IAAI1B,EDjD4C,SACxDA,EACA4E,GAEA,IAIM3D,EAAO,CACXtD,WALqBuB,EAAiB0F,EAAWjH,YAAYkH,QAC7D,MACA,KAIAL,SAAUlH,EAASsH,EAAWJ,SAAU,MAK1C,MAHI,WAAYI,IACd3D,EAAKwD,OAASxC,SAASvC,EAAiBkF,EAAWH,UAE9CzD,EAAmChB,EAAaiB,GCkC7BgG,CAChB7C,EAAWpE,YACX4E,GAEF,GAAmB,MAAf5E,EAKG,CACLA,EAAcsG,mBAAmBtG,GACjC,IAAM/B,EAAiBiB,EAAiB0F,EAAWjH,YAC7C0I,EAAerI,EACnBC,EACA2G,EAAW1G,UAEPgJ,EACJlD,GACE1B,EACAuB,EACAnE,EAAiBkF,EAAWlD,KAE9B,gBACA1B,EACA,aACAqG,EACF,OAAOrB,KACJmC,IAAID,GACJhC,MAAK,SAACC,GACL3E,EAAMC,QAAQ,CACZC,KAAM,0BAA4BkE,EAAWlD,QAGhD4D,OAAM,SAACC,GAEN,OADAW,QAAQU,MAAMrB,GACPC,QAAQC,OAAOF,MA9B1B/E,EAAMC,QAAQ,CACZC,KAAM,wBAA0BkE,EAAWlE,KAC3ClG,KAAM,cAkCf8K,OAAM,SAACC,GACN/E,EAAMC,QAAQ,CACZC,KAAM,6CACNlG,KAAM,cAKD4M,GAA2B,SAAC1F,EAAIY,GAC3C7F,OAAOC,KJwCgC,SAAC4F,EAASzB,GACjD,OAAK1D,EAAWmF,GAIdkB,GAAalB,GACboB,GAA6BpB,GAC7B,IACAqB,GAA2BrB,GAC3B,aACAzB,EARO,KIzCPwG,CAA0B/E,EAAS5C,EAAiBgC,IACpD,WAIS4F,GAA8B,SAAC1C,EAAYtC,GACtD,IAAMrE,EAAiBK,EAAY,IAAIH,MACd,MAArByG,EAAWH,SACbG,EAAWH,OAAS,GAEtB,IAAMxD,EAAO,CACXtD,WAAYM,EACZuG,SAAU,GACVC,OAAQxC,SAASvC,EAAiBkF,EAAWH,UAE3CY,EAAOrE,EAAmC,GAAIC,GAClDoE,EAAOiB,mBAAmBjB,GAC1B5I,OAAOC,KJoCuC,SAAC4F,GAC/C,OAAKnF,EAAWmF,GAIdkB,GAAalB,GACboB,GAA6BpB,GAC7B,IACAqB,GAA2BrB,GAC3B,kCAPO,KItCGiF,CAAiCjF,GAAW+C,EAAM,WCjJnDmC,GAAgB,uCAAG,WAC9BlF,EACAuB,EACAhJ,EACAa,GAJ8B,SAAAqJ,EAAA,yDAMzB5H,EAAWmF,GANc,yCAOrBkD,QAAQiC,WAPa,WAQnBpF,GAAYC,GARO,yCASrBoD,GAAuBpD,EAASzH,EAAiBa,IAT5B,WAW5ByH,GAAYb,IAC4B,OAAxCc,GAA2Bd,GAZC,0CAcrBqE,GACLrE,EACAuB,EACAhJ,EACAa,IAlB0B,4CAAH,4DAuBhBgM,GAAyB,uCAAG,WAAOpF,EAASuB,GAAhB,SAAAkB,EAAA,yDAClC5H,EAAWmF,GADuB,yCAE9BkD,QAAQiC,WAFsB,WAG5BpF,GAAYC,GAHgB,yCAI9BuD,GAAgCvD,EAASuB,IAJX,WAMrCV,GAAYb,IAC4B,OAAxCc,GAA2Bd,GAPU,0CAS9BuE,GAAgCvE,EAASuB,IATX,4CAAH,wDAazB8D,GAA0B,uCAAG,WAAOrF,EAASuB,GAAhB,SAAAkB,EAAA,yDACnC5H,EAAWmF,GADwB,yCAE/BkD,QAAQiC,WAFuB,WAG7BpF,GAAYC,GAHiB,yCAI/BwD,GAAiCxD,EAASuB,IAJX,WAMtCV,GAAYb,IAC4B,OAAxCc,GAA2Bd,GAPW,0CAS/ByE,GAAiCzE,EAASuB,IATX,4CAAH,wDAa1B+D,GAAmB,SAAChD,EAAYf,EAAOrD,EAAO8B,GACzD,OAAKnF,EAAWmF,GAELD,GAAYC,GHWqB,SAC5CsC,EACAf,EACArD,EACA8B,GAEA,IAAMlF,EAAMsF,GACVJ,EACA5C,EAAiBkF,EAAWlD,KAsD9B,OApDAsD,KACGC,IAAI7H,GACJ8H,MAAK,SAACC,GACL,IAAMf,EAAae,EAAIC,KAKhB,MAHLT,GACEP,EAAWiB,KACXT,GAGFpE,EAAMC,QAAQ,CACZC,KAAM,wBAA0BkE,EAAWlE,KAC3ClG,KAAM,UAGJoK,IAAeN,GAA4BF,IAC7CY,KACG6C,KACCzK,EACA,CACEiI,KAAMV,GACJP,EAAWiB,KACXT,IAGJ,CACEmB,QAAS,CACPC,cAAc,SAAD,OAAWnC,MAI7BqB,MAAK,SAACC,GACL3E,EAAMC,QAAQ,CACZC,KAAM,0BAA4BkE,EAAWlD,QAGhD4D,OAAM,SAACC,GACN/E,EAAMC,QAAQ,CACZC,KAAM,gDAAkD6E,EACxD/K,KAAM,gBAMjB8K,OAAM,SAACC,GACN/E,EAAMC,QAAQ,CACZC,KAAM,2CAA6C6E,EACnD/K,KAAM,UAERkL,GAAuBlF,EAAO8B,MAE3B,KGxEEwF,CAA+BlD,EAAYf,EAAOrD,EAAO8B,GAEhEa,GAAYb,IAC4B,OAAxCc,GAA2Bd,GAEpB0E,GAA+BpC,EAAYf,EAAOrD,EAAO8B,QAJ3D,EAHEkD,QAAQiC,WAWNM,GAAqB,SAACC,EAAe1F,GAChD,IAAKnF,EAAWmF,GACd,OAAOkD,QAAQiC,UACNpF,GAAYC,GH+De,SAAC0F,EAAe1F,GACtD7F,OAAOC,KACLqG,GAA0BT,EAAS5C,EAAiBsI,IACpD,UGjEAC,CAAyBD,EAAe1F,IAExCa,GAAYb,IAC4B,OAAxCc,GAA2Bd,KAE3B8E,GAAyBY,EAAe1F,ICF/B4F,I,cAAuB,SAAC1H,EAAOoE,GAC1C,IAAI,KAAaA,EACf,OAAO,KAET,GAA0B,IAAtBA,EAAWH,OACb,OAAO,KAET,IAAI0D,EAAoB3H,EAAM4H,QAAQxD,EAAWH,QAAQ4D,UAEvDF,EAAkBxK,WAAW2K,UAAY1D,EAAWjH,WAAW2K,YAE/DH,EAAkBxK,WAAaiH,EAAWjH,WAC1C6C,EAAM+H,WAAWJ,EAAkBzG,GAAIyG,GACvC3H,EAAMgI,UAEJL,EAAkBM,SAASH,UAAY1D,EAAW6D,SAASH,YAC7DH,EAAkBM,SAAW7D,EAAW6D,SACxCjI,EAAM+H,WAAWJ,EAAkBzG,GAAIyG,GACvC3H,EAAMgI,YAIGE,GAAsB,SAAClI,EAAOoE,EAAY+D,GACrD,IAAIC,EAAmBpI,EAAM4H,QAAQO,GAAqBN,UACpDQ,EAAgBD,EAAiB1K,SAASmK,UAC5CO,EAAiBjL,WAAW2K,UAAY1D,EAAWjH,WAAW2K,YAChEM,EAAiBjL,WAAaiH,EAAWjH,WACzCiL,EAAiBH,SAAW,IAAItK,KAC9BH,EAAiB4G,EAAWjH,WAAYkL,IAE1CrI,EAAM+H,WAAWK,EAAiBlH,GAAIkH,GACtCpI,EAAMgI,UAEJI,EAAiBH,SAASH,UAAY1D,EAAW6D,SAASH,YAC5DM,EAAiBjL,WAAa,IAAIQ,KTzEJ,SAACkI,EAAcnI,GAC/C,IAAMN,EAAW,IAAIO,KAAKkI,GACpB1I,EAAaG,IAAOF,EAAU,cACjCQ,KAAKF,EAAU,KACfG,SACH,OAAOC,EAAYX,GSqEfmL,CAAmBlE,EAAW6D,SAAUI,IAE1CD,EAAiBH,SAAW7D,EAAW6D,SACvCjI,EAAM+H,WAAWK,EAAiBlH,GAAIkH,GACtCpI,EAAMgI,WCnIJO,GAAa,CACjBC,OAAQ,CACN,CACEzO,KAAM,OACN0O,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,CACN,CAAEC,KAAM,QAASC,KAAM,EAAGC,OAAQ,MAClC,CAAEF,KAAM,MAAOC,KAAM,EAAGC,OAAQ,QAGpC,CACE/O,KAAM,QACN0O,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,CAAC,CAAEC,KAAM,OAAQC,KAAM,EAAGC,OAAQ,cAK1CC,GAAc,SAAChL,GACnB,MAA6C,kBAAzCC,OAAOC,UAAUC,SAASC,KAAKJ,GAC1B,MAEE,MAAQA,EAAKS,WAAa,IAAIc,OAAO,GAEvB,KADd,KAAOvB,EAAKU,WAAWa,OAAO,ICwC5B0J,GAxDD,SAACjQ,GACb,IAAMkQ,EAAeC,iBAAO,MAkD5B,OAjDAC,qBAAU,WDmBkB,IAACnJ,KClBZA,SDmBXoJ,OAAOC,SAAW,iBACxBrJ,EAAMoJ,OAAOE,cAAe,EAC5BtJ,EAAMoJ,OAAOG,mBAAoB,EAEjCvJ,EAAMoJ,OAAOI,iBAAkB,EAC/BxJ,EAAMoJ,OAAOK,aAAc,EAC3BzJ,EAAMoJ,OAAOM,qBAAsB,EACnC1J,EAAMoJ,OAAOO,WAAY,EAEzB3J,EAAMoJ,OAAOQ,MAAO,EAEpB5J,EAAMoJ,OAAOS,QAAU,CACrB,CACE9P,KAAM,KACNT,MAAO,MACPwQ,MAAO,OACPC,MAAM,EACN9R,MAAO,MACP+R,SAAU,SAACC,GACT,IAAIC,EAAU,IAAIvM,KAGlB,OAFAuM,EAAQC,QAAQD,EAAQzL,UAAY,GACpCiH,QAAQ0E,IAAIH,EAAI/F,OAAS,MAAQgG,EAAQ3L,sBACrC0L,EAAI/F,OAASgG,EAAQ3L,qBAErB0L,EAAI/I,GACJ,+EAGG+I,EAAI/I,KAGf,CACEnH,KAAM,aACNT,MAAO,SACPwQ,MAAO,SACP7R,MAAO,KACP+R,SAAU,SAACC,GACT,OAAOlB,GAAYkB,EAAI9M,cAG3B,CACEpD,KAAM,WACNT,MAAO,OACPwQ,MAAO,SACP7R,MAAO,KACP+R,SAAU,SAACC,GACT,OAAOlB,GAAYkB,EAAI7M,YAG3B,CAAErD,KAAM,WAAYT,MAAO,WAAYwQ,MAAO,SAAU7R,MAAO,OAC/D,CAAE8B,KAAM,MAAOT,MAAO,GAAIrB,MAAO,OAGnC+H,EAAMqK,QAAQ,CAEZC,eAAe,IAEjBtK,EAAMuK,SAAS,IAAI5M,MACnBqC,EAAMwK,IAAIC,KAAKC,KAAKnC,IEpFW,SAACvI,GAChCA,EAAM2K,UAAUC,oBAAsB,SAAUC,EAAM9M,GACpD,GAA6C,kBAAzCC,OAAOC,UAAUC,SAASC,KAAKJ,GACjC,OAAO,KAET,IAAI+M,EAAQ,IAAInN,KAChB,GAAII,EAAKU,YAAcqM,EAAMrM,WAAaV,EAAKS,aAAesM,EAAMtM,WAClE,MAAO,QAET,GAAsB,IAAlBT,EAAKgN,UAAoC,IAAlBhN,EAAKgN,SAC9B,MAAO,UAET,IAAIC,EAAY,IAAIrN,KAEpB,OADAqN,EAAUb,QAAQa,EAAUvM,UAAY,GACpCV,EAAOiN,EACF,iBADT,GAKFhL,EAAM2K,UAAUM,UAAY,SAAUC,EAAOC,EAAK1K,GAChD,OAAOA,EAAKP,MAGdF,EAAM2K,UAAUS,WAAa,SAAUF,EAAOC,EAAK1K,GACjD,GAAqB,GAAjBA,EAAKuD,SACP,MAAO,GAET,GAAIvD,EAAKuD,SAAW,KAClB,GAAIkH,GAAS,IAAIvN,KACf,MAAO,cAEJ,GACL,IAAIA,KACFH,EACE0N,GACChO,EAAkBgO,EAAOC,GAAO,GAAK1K,EAAKuD,WAE3C,IAAIrG,KAER,MAAO,UD/BT0N,CAAkBrL,SFNK,SAACA,EAAOjH,GACjCiH,EAAMsL,YAAY,kBAAkB,SAAC9D,EAAe/N,GAClDV,EAAMwO,mBAAmBC,MAG3BxH,EAAMsL,YAAY,iBAAiB,SAAC9D,EAAe/N,GACjDV,EAAMwS,sBAAsB/D,MAG9BxH,EAAMsL,YAAY,qBAAqB,SAACpK,EAAIkD,GAC1CsD,GAAqB1H,EAAOoE,GAC5BpE,EAAMwL,YAAYpH,EAAWlD,IAAIF,KAAI,SAACmH,GACpCD,GAAoBlI,EAAOoE,EAAY+D,MAEzCpP,EAAMqO,iBAAiBhD,EAAYpE,MAGrCA,EAAMsL,YAAY,sBAAsB,SAACpK,EAAIuK,EAAMrH,OAGnDpE,EAAMsL,YAAY,mBAAmB,SAACpK,EAAI+C,GACxC,IAAIG,EAAapE,EAAM4H,QAAQ1G,GAC3B,WAAYkD,GACY,IAAtBA,EAAWH,SACbG,EAAWH,OAASA,EACpBlL,EAAMqO,iBAAiBhD,EAAYpE,OAgCzCA,EAAMsL,YAAY,cAAc,SAAUpK,EAAIuK,EAAMhL,EAAMiL,GACxD,IAQInB,EARAoB,EAAQ3L,EAAM4L,WACdC,EAAUF,EAAMG,SAClBC,EAAUJ,EAAMK,SAEdC,EACFjM,EAAMjC,KAAKH,IAAI,IAAID,KAAQgO,EAAMO,WAAYP,EAAMQ,YACnD,IAAIxO,KAGJyO,GAAU,EACA,UAARX,GAA4B,QAARA,IAClBzO,KAAKqP,IAAI5L,EAAKtD,WAAa0O,GAAWI,GACxC1B,EAAW9J,EAAKtD,WAChBiP,GAAU,GACDpP,KAAKqP,IAAI5L,EAAKwH,SAAW8D,GAAWE,IAC7C1B,EAAW9J,EAAKwH,SAChBmE,GAAU,GAGRA,IACFpM,EAAMgI,SACNhI,EAAMuK,SAASA,QExEnBe,CAAYtL,QAAOjH,GACnBiH,QAAM0K,KAAKzB,EAAaqD,SACxBtM,QAAMwK,IAAIC,KAAK8B,SAASxT,EAAM0R,QAC7B,IAEHtB,qBAAU,WACW,SAAfpQ,EAAM0R,KACRzK,QAAMwM,UAAS,SAAU/L,GACvBA,EAAKgM,OAAQ,KAGfzM,QAAMwM,UAAS,SAAU/L,GACvBA,EAAKgM,OAAQ,KAGjBzM,QAAMwK,IAAIC,KAAK8B,SAASxT,EAAM0R,QAC7B,CAAC1R,EAAM0R,OAEVtB,qBAAU,WACRnC,GACEjO,EAAM+I,QACN/I,EAAMsK,MACNtK,EAAMsB,gBACNtB,EAAMmC,mBAELwJ,MAAK,SAACE,GACDxI,EAAgBwI,KAClB5E,QAAM0M,WACN9H,EAAK5D,KAAI,SAAC2L,GACR3M,QAAM4M,QAAQD,MAEhB3M,QAAM4J,KAAK,YAAY,GACvB5J,QAAMgI,aAGTlD,OAAM,SAACC,GACN/E,QAAMC,QAAQ,CAAEC,KAAM6E,EAAK/K,KAAM,eAEpC,CACDjB,EAAM+I,QACN/I,EAAMsK,MACNtK,EAAMsB,gBACNtB,EAAMmC,kBACNnC,EAAMmL,SAIN,qBAAK2I,IAAK5D,EAAc1P,MAAO,CAAEtB,MAAO,OAAQyD,OAAQ,WE3D7CsN,I,OAAAA,I,SCmBF8D,GAAe,CAC1BC,YAAa,OACb7I,OAAQ,EACRpC,QAAS,GACTuB,MAAO,wCACPlJ,OAAQ,GACRE,gBAAiB,GACjBU,YAAa,GACbG,kBAAmB,IAGR8R,GAAc,SAACrB,EAAOsB,GACjC,OAAQA,EAAOjT,MACb,IAAK,aACH,OAAO,2BAAK2R,GAAZ,IAAmBoB,YAAaE,EAAOrT,QACzC,IAAK,eACH,OAAO,2BACF+R,GADL,IAEE7J,QAASoL,GACPD,EAAOrT,MAAMb,MACbkU,EAAOrT,MAAMkI,QACb6J,EAAMtR,mBAGZ,IAAK,cACH,OAAO,2BAAKsR,GAAZ,IAAmBtI,MAAO8J,GAAkBF,EAAOrT,SACrD,IAAK,cACH,OAAO,2BAAK+R,GAAZ,IAAmBxR,OAAQ8S,EAAOrT,QACpC,IAAK,uBACH,OAAO,2BACF+R,GADL,IAEEtR,gBAAiB+S,GACfH,EAAOrT,MAAMb,MACb4S,EAAM7J,QACNmL,EAAOrT,MAAMS,gBACbsR,EAAMzQ,qBAGZ,IAAK,mBACH,OAAO,2BAAKyQ,GAAZ,IAAmB5Q,YAAasS,GAAuBJ,EAAOrT,SAChE,IAAK,yBACH,OAAO,2BACF+R,GADL,IAEEzQ,kBAAmBoS,GACjBL,EAAOrT,MAAMb,MACb4S,EAAM7J,QACN6J,EAAMtR,gBACN4S,EAAOrT,MAAMsB,qBAGnB,IAAK,cACH,OAAO,2BAAKyQ,GAAZ,IAAmBzH,OAAQyH,EAAMzH,OAAS,IAC5C,IAAK,qBACH,OAAOqJ,GAAyB5B,EAAOsB,GACzC,IAAK,wBACH,OAAOO,GAA4B7B,EAAOsB,GAC5C,IAAK,mBACH,OAAOQ,GAAuB9B,EAAOsB,GACvC,IAAK,6BACH,OAAOS,GACL/B,EACAsB,EAAOrT,MAAMb,MACbkU,EAAOrT,MAAM+T,UAEjB,QACE,OAAOhC,IAIA4B,GAA2B,SAAC5B,EAAOsB,GAE9C,OADA1F,GAAmB0F,EAAOrT,MAAO+R,EAAM7J,SAChC6J,GAGI6B,GAA8B,SAAC7B,EAAOsB,GAEjD,ONCmC,SAAC7I,EAAYtC,GAChD,IAAKnF,EAAWmF,GACd,OAAO,KACED,GAAYC,GACrB8D,GAA4BxB,EAAYtC,IAExCa,GAAYb,IAC4B,OAAxCc,GAA2Bd,KAE3BgF,GAA4B1C,EAAYtC,GMX1CyJ,CAAsB0B,EAAOrT,MAAO+R,EAAM7J,SACnC6J,GAGI8B,GAAyB,SAAC9B,EAAOsB,GAO5C,OANA7F,GACE6F,EAAOrT,MAAMwK,WACbuH,EAAMtI,MACN4J,EAAOrT,MAAMoG,MACb2L,EAAM7J,SAED6J,GAGIuB,GAAqB,SAChCnU,EACA+I,EACAzH,EACAa,GbvG6B,IAAC0B,Ea0G9B,Ib1G8BA,EayGJyC,EAAgByC,IbxGlCtF,OAAS,GAAK,MAAMK,KAAKD,KAC/BA,EAAMA,EAAI0C,MAAM,GAAI,IawGlBuC,GADJC,EbrGOlF,GauGLoD,QAAMC,QAAQ,CAAEC,KAAM,2BACjB,GAAIyC,GAAYb,GACrB9B,QAAMC,QAAQ,CAAEC,KAAM,0BACjB,IAA4C,OAAxC0C,GAA2Bd,GAIpC,OADA9B,QAAMC,QAAQ,CAAEC,KAAM,mBAAoBlG,KAAM,UACzC,KAHPgG,QAAMC,QAAQ,CAAEC,KAAM,kCAMxB,OADA0N,GAAY7U,EAAO+I,EAASzH,EAAiBa,GACtC4G,GAGIqL,GAAoB,SAAC9J,GAEhC,OADAwK,uBAAY,YAAaxK,GAClBA,GAGI+J,GAA6B,SACxCrU,EACA+I,EACAzH,EACAa,GAGA,OADA0S,GAAY7U,EAAO+I,EAASzH,EAAiBa,GACtCb,GAGIgT,GAAyB,SACpCtS,GAEA,OAAGqB,EAAgBrB,GACVA,EAEA,IAIEuS,GAA+B,SAC1CvU,EACA+I,EACAzH,EACAa,GAGA,OADA0S,GAAY7U,EAAO+I,EAASzH,EAAiBa,GACtCA,GAGI0S,GAAc,SAAC7U,EAAO+I,EAASzH,EAAiBa,GAC3D,IAAMK,EAAS,IAAIuS,gBAAgB/U,EAAMgV,SAASC,QAOlD,OANAzS,EAAO0S,IAAI,SAAUnM,GACrBvG,EAAO0S,IAAI,SAAUnN,EAA0BzG,IAC/CkB,EAAO0S,IAAI,WAAYnN,EAA0B,CAAC5F,KAClDnC,EAAMmV,QAAQxM,KAAK,CACjBsM,OAAQzS,EAAO2C,aAEV,MAGIwP,GAA6B,SAAC/B,EAAO5S,EAAO4U,GACvD,IAAMpS,EAAS,IAAIuS,gBAAgB/U,EAAMgV,SAASC,QAClDrC,EAAM7J,QAAUvG,EAAOkJ,IAAI,UAE3B,IAAMpK,EAAkB8G,EAA2B5F,EAAOkJ,IAAI,WAC1DrI,EAAgB/B,EAAgB,KAC9B,SAAUA,EAAgB,IACI,KAA5BA,EAAgB,GAAGN,OACrB4R,EAAMtR,gBAAkBA,GAK9B,IAAM8T,EAAyBhN,EAC7B5F,EAAOkJ,IAAI,aAMb,OAJIrI,EAAgB+R,KAClBxC,EAAMzQ,kBAAoBiT,EAAuB,IAEnDR,EAAS,UAAWhC,EAAM7J,SACnB6J,GCzFMyC,gBA/FH,SAACrV,GAAW,IAAD,EACKsV,qBAAWrB,GAAaF,IAD7B,mBACdnB,EADc,KACP2C,EADO,OAEUC,YAAQ,CAAEzM,QAAS,GAAIuB,MAAO,KAArDvJ,EAFa,EAEbA,SAAU6T,EAFG,EAEHA,SA+BlB,OA7BAxE,qBAAU,WACRwE,EAAS,QAASa,uBAAY,cAC9BF,EAAS,CAAEtU,KAAM,cAAeJ,MAAO4U,uBAAY,iBAClD,IAEHrF,qBAAU,WACRmF,EAAS,CACPtU,KAAM,6BACNJ,MAAO,CAAEb,MAAOA,EAAO4U,SAAUA,OAElC,CAAC5U,EAAMgV,WAEV5E,qBAAU,WACRjC,GAA0ByE,EAAM7J,QAAS6J,EAAMtI,OAC5CqB,MAAK,SAACvK,GACLmU,EAAS,CAAEtU,KAAM,cAAeJ,MAAOO,OAExC2K,OAAM,SAACC,GACN/E,QAAMC,QAAQ,CAAEC,KAAM6E,EAAK/K,KAAM,aAErCmN,GAA2BwE,EAAM7J,QAAS6J,EAAMtI,OAC7CqB,MAAK,SAACe,GACL6I,EAAS,CAAEtU,KAAM,mBAAoBJ,MAAO6L,OAE7CX,OAAM,SAACC,GACN/E,QAAMC,QAAQ,CAAEC,KAAM6E,EAAK/K,KAAM,eAEpC,CAAC2R,EAAM7J,QAAS6J,EAAMtI,MAAOsI,EAAMzQ,oBAGpC,qCACE,qBAAK/B,UAAU,WAAf,SACE,cAAC,EAAD,CACEsR,KAAMkB,EAAMoB,YACZlR,aAAc,SAAC4O,GAAD,OAAU6D,EAAS,CAAEtU,KAAM,aAAcJ,MAAO6Q,KAC9D/Q,eAAgB,SAACoI,GAAD,OACdwM,EAAS,CACPtU,KAAM,eACNJ,MAAO,CAAEb,MAAOA,EAAO+I,QAASA,MAGpCuB,MAAOsI,EAAMtI,MACbpJ,cAAe,SAACoJ,GAAD,OACbiL,EAAS,CAAEtU,KAAM,cAAeJ,MAAOyJ,KAEzCrH,cAAe,kBAAMsS,EAAS,CAAEtU,KAAM,iBACtCG,OAAQwR,EAAMxR,OACdE,gBAAiBsR,EAAMtR,gBACvBE,sBAAuB,SAACF,GAAD,OACrBiU,EAAS,CACPtU,KAAM,uBACNJ,MAAO,CAAEb,MAAOA,EAAOsB,gBAAiBA,MAG5CU,YAAa4Q,EAAM5Q,YACnBG,kBAAmByQ,EAAMzQ,kBACzBG,yBAA0B,SAACH,GAAD,OACxBoT,EAAS,CACPtU,KAAM,yBACNJ,MAAO,CAAEb,MAAOA,EAAOmC,kBAAmBA,MAG9CpB,SAAUA,MAGd,qBAAKX,UAAU,kBAAf,SACE,cAAC,GAAD,CACEsR,KAAMkB,EAAMoB,YACZjL,QAAS6J,EAAM7J,QACfuB,MAAOsI,EAAMtI,MACbhJ,gBAAiBsR,EAAMtR,gBACvBa,kBAAmByQ,EAAMzQ,kBACzBgJ,OAAQyH,EAAMzH,OACdqD,mBAAoB,SAACC,GAAD,OAClB8G,EAAS,CAAEtU,KAAM,qBAAsBJ,MAAO4N,KAEhD+D,sBAAuB,SAAC/D,GAAD,OACrB8G,EAAS,CAAEtU,KAAM,wBAAyBJ,MAAO4N,KAEnDJ,iBAAkB,SAAChD,EAAYpE,GAAb,OAChBsO,EAAS,CACPtU,KAAM,mBACNJ,MAAO,CAAEwK,WAAYA,EAAYpE,MAAOA,gBCvFlCyO,QACW,cAA7BxS,OAAO8R,SAASW,UAEe,UAA7BzS,OAAO8R,SAASW,UAEhBzS,OAAO8R,SAASW,SAASC,MACvB,2DCXNC,IAAS5G,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAOA,OAAQ,SAACjP,GAAD,OAAW,cAAC,GAAD,SAE5B8V,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvK,MAAK,SAAAwK,GACjCA,EAAaC,kB","file":"static/js/main.8812c123.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst Toolbar = (props) => {\n  const { classes } = props;\n  return (\n    <form noValidate>\n      <TextField\n        className={classes.root}\n        required\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n        label=\"Git Repository URL\"\n        style={{ width: '25%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onGitURLChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"git_url\"\n      />\n      <TextField\n        className={classes.root}\n        type=\"password\"\n        placeholder=\"Access Token\"\n        label=\"Access Token\"\n        style={{ width: '10%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onTokenChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"token\"\n      />\n      <Multiselect\n        className={classes.root}\n        options={props.labels}\n        selectedValues={props.selected_labels}\n        onSelect={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        onRemove={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        displayValue=\"name\"\n        style={selector_style}\n        placeholder=\"filter by labels\"\n        hidePlaceholder=\"false\"\n        emptyRecordMsg=\"No Labels\"\n        closeIcon=\"cancel\"\n      />\n      <Autocomplete\n        className={classes.root}\n        size=\"small\"\n        options={props.member_list}\n        getOptionLabel={(option) => option.name}\n        value={props.selected_assignee}\n        noOptionsText=\"Requires a valid token\"\n        onChange={(e, assignee) => {\n          props.onSelectedAssigneeChange(assignee);\n        }}\n        style={{\n          width: '15%',\n          verticalAlign: 'middle',\n          display: 'inline-block',\n          marginRight: '15px',\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            className={classes.root}\n            label=\"Assignee\"\n            variant=\"standard\"\n          />\n        )}\n      />\n      <ButtonGroup size=\"small\" style={{ height: '34px' }}>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Weeks');\n          }}\n        >\n          Weeks\n        </Button>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Days');\n          }}\n        >\n          Days\n        </Button>\n      </ButtonGroup>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <CachedIcon\n          onClick={(e) => {\n            props.onUpdateClick();\n          }}\n        />\n      </IconButton>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <GitHubIcon onClick={() => window.open('https://github.com/lamact/react-issue-ganttchart')} />\n      </IconButton>\n    </form>\n  );\n};\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      fontSize: '13px',\n      marginRight: '4px',\n    },\n  },\n});\n\nconst selector_style = {\n  multiselectContainer: {\n    width: '27%',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    padding: '4px',\n    alignItems: 'flex-end',\n  },\n  chips: {\n    background: 'light blue',\n    fontSize: '15px',\n  },\n  searchBox: {\n    border: 'none',\n  },\n};\n\nexport default withStyles(styles)(Toolbar);\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import moment from 'moment';\n\nexport const isValidVariable = (variable) => {\n  if (\n    variable !== null &&\n    variable !== [] &&\n    variable !== void 0 &&\n    variable !== ''\n  ) {\n    return true;\n  }\n  if (Array.isArray(variable)) {\n    return variable.length > 0;\n  }\n  return false;\n};\n\nexport const validVariable = (variable) => {\n  if (isValidVariable(variable)) {\n    return variable;\n  } else {\n    return '';\n  }\n};\n\nexport const isValidIDName = (id_name) => {\n  return isValidVariable(id_name) && 'id' in id_name && 'name' in id_name;\n};\n\nexport const isValidURL = (url) => {\n  if (!isValidVariable(url)) {\n    return false;\n  }\n  return /https:\\/\\//.test(url);\n};\n\nexport const isNumber = (n) => {\n  if (typeof n === 'number' && Number.isFinite(n)) {\n    return true;\n  }\n  return false;\n};\n\nexport const orgRound = (value, base) => {\n  return Math.round(value / base) * base;\n};\n\nexport const calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date, 'YYYY/MM/DD');\n  const due_date_moment = moment(due_date, 'YYYY/MM/DD');\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n};\n\nexport const calculateStartDate = (due_date_str, duration) => {\n  const due_date = new Date(due_date_str);\n  const start_date = moment(due_date, 'YYYY/MM/DD')\n    .add(-duration, 'd')\n    .toDate();\n  return date2string(start_date);\n};\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date, 'YYYY/MM/DD')\n    .add(duration - 1, 'd')\n    .toDate();\n  return date2string(due_date);\n};\n\nexport const date2string = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  } else if (isNaN(date.getFullYear())) {\n    return null;\n  }\n\n  let string = date.toLocaleDateString('ja-JP');\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(string)) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    string = year + '/' + month + '/' + day;\n  }\n  return string;\n};\n\nexport const adjustDateString = (date_str) => {\n  return date2string(new Date(date_str));\n};\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = date2string(start_date);\n  } else {\n    start_date_str = adjustDateString(created_at);\n  }\n  return start_date_str;\n};\n\nexport const getGanttDueDate = (start_date, due_date, created_at) => {\n  let due_date_str = null;\n  if (start_date != null && due_date != null) {\n    due_date_str = new Date(due_date);\n  } else {\n    due_date_str = new Date(created_at);\n  }\n  return due_date_str;\n};\n\nexport const getGanttUpdateDate = (created_at,updated_at) => {\n  let updated_date_str = null;\n  if (updated_at != null) {\n    updated_date_str = adjustDateString(updated_at);\n  } else {\n    updated_date_str = adjustDateString(created_at);\n  }\n  return updated_date_str;\n};\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n};\n","import { isValidVariable, isValidIDName, isNumber } from './CommonHelper.js';\nimport yaml from 'js-yaml';\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const removeFirstSharp = (id_str) => {\n  if (id_str.length > 1 && /^#/.test(id_str)) {\n    id_str = id_str.substring(1);\n  }\n  return id_str;\n};\n\nexport const removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const getYamlPartFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  if (typeof description !== 'string') {\n    return null;\n  }\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  return str[0];\n};\n\nexport const parseYamlFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_part = getYamlPartFromDescription(description);\n  if (yaml_part === null) {\n    return null;\n  }\n\n  let yaml_struct = null;\n  try {\n    yaml_struct = yaml.load(yaml_part);\n  } catch (e) {\n    gantt.message({ text: 'failed load yaml' + yaml_part, type: 'error' });\n  }\n  return yaml_struct;\n};\n\nexport const getStringFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const string = yaml_struct[column_name];\n  if (typeof string !== 'string') {\n    return null;\n  }\n  return removeLastSpace(removeLastSpace(string));\n};\n\nexport const getNumberFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const number = yaml_struct[column_name];\n  if (typeof number !== 'number') {\n    return null;\n  }\n  return number;\n};\n\nexport const getDateFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const date = getStringFromDescriptionYaml(description, column_name);\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(date)) {\n    return null;\n  }\n  return new Date(date);\n};\n\nexport const replacePropertyInDescriptionString = (description, task) => {\n  if (description === null || task === null) {\n    return null;\n  }\n  let task_section = yaml.dump(task);\n  task_section =\n    `\\`\\`\\`yaml\n` +\n    task_section +\n    `\\`\\`\\``;\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    if (/```/.test(description)) {\n      return null;\n    }\n    return task_section + '\\n' + description;\n  }\n  const first_section = str[0];\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  const end_section = str[1];\n  if (first_section == null || end_section == null) {\n    return null;\n  }\n  return first_section + task_section + end_section;\n};\n\nexport const convertIDNameListToString = (list) => {\n  let string = '';\n  if (isValidVariable(list)) {\n    list.map((info) => {\n      if (isValidIDName(info) && isValidVariable(info.id)) {\n        string += info.id + ':' + info.name + ',';\n      }\n      return null;\n    });\n    return string;\n  }\n  return null;\n};\n\nexport const convertIDNamesStringToList = (string) => {\n  let list = [];\n  if (isValidVariable(string)) {\n    const split_string = string.split(',');\n    split_string.forEach((element, index, array) => {\n      if (index < split_string.length - 1) {\n        const info = element.split(':');\n        if (!isNaN(parseInt(info[0]))) {\n          const label = {\n            id: parseInt(info[0]),\n            name: info[1],\n          };\n          list.push(label);\n        }\n      }\n    });\n  } else {\n    list = [{ id: 0, name: '' }];\n  }\n  return list;\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n  isNumber,\n} from '../Common/CommonHelper.js';\nimport { removeFirstSharp } from '../Common/Parser.js';\n\nconst GitHubAPIURL = 'https://api.github.com/repos/';\nconst GitHubURL = 'https://github.com/';\n\nexport const isGitHubURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /github\\.com/.test(git_url);\n};\n\nexport const getGitHubNameSpaceFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitHubProjectFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues'\n  );\n};\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubAPIURLIssueFilterd = (git_url, labels, assignee) => {\n  if (\n    !isGitHubURL(git_url) ||\n    !isValidVariable(labels) ||\n    !isValidVariable(assignee)\n  ) {\n    return null;\n  }\n  let url_query_str = '?';\n  url_query_str += 'labels=';\n  labels.map((label) => {\n    if (isValidIDName(label)) {\n      url_query_str += label.name + ',';\n    }\n  });\n\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      url_query_str += '&assignee=' + assignee.name;\n    }\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues' +\n    url_query_str\n  );\n};\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/labels'\n  );\n};\n\nexport const getGitHubAPIURLCollaborators = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/collaborators'\n  );\n};\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  if (!isNumber(number)) {\n    number = removeFirstSharp(number);\n  }\n  if (number <= 0) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/new?assignees=&labels=&title=&body='\n  );\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n} from '../Common/CommonHelper.js';\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\n\nexport const isGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /gitlab\\.com/.test(git_url);\n};\n\nexport const getSelfHostingGitLabDomain = (git_url) => {\n  if (isGitHubURL(git_url)) {\n    return null;\n  }\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[2];\n  }\n  return null;\n};\n\nexport const getGitLabDomain = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let gitlab_domain = null;\n  const self_hosting_gitlab_domain = getSelfHostingGitLabDomain(git_url);\n  if (self_hosting_gitlab_domain !== null) {\n    gitlab_domain = 'https://' + self_hosting_gitlab_domain + '/';\n  }\n  return gitlab_domain;\n};\n\nexport const getGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url);\n};\n\nexport const getGitLabAPIURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url) + 'api/v4/';\n};\n\nexport const getGitLabNameSpaceFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitLabProjectFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const postFixToken = (token) => {\n  let post_fix_str = '?';\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    post_fix_str += 'access_token=' + token;\n  } \n  return post_fix_str;\n};\n\nexport const getGitLabAPIURLIssueFilterd = (\n  git_url,\n  token,\n  labels,\n  assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(labels)) {\n    return null;\n  }\n  if (!isValidIDName(assignee)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  if (isValidVariable(labels)) {\n    post_fix_str += '&labels=';\n    labels.map((label) => {\n      if (isValidIDName(label)) {\n        post_fix_str += label.name + ',';\n      }\n      return null;\n    });\n  }\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      post_fix_str += '&assignee_id=' + assignee.id;\n    }\n  }\n  post_fix_str += '&per_page=100&state=opened';\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues' +\n    post_fix_str\n  );\n};\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(number)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/' +\n    number +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  post_fix_str += '&per_page=100';\n\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/labels' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLMember = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'groups/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/members/all' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/-/issues/' +\n    number\n  );\n};\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/new?issue[description]='\n  );\n};\n","import {\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitHubAssignee = (issue_info) => {\n  if (issue_info.assignee !== null) {\n    return issue_info.assignee.login;\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getDateFromDescriptionYaml(description, 'start_date');\n  const due_date = getDateFromDescriptionYaml(description, 'due_date');\n\n  const gantt_task = {\n    id: '#' + issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(description, 'progress'),\n    assignee: getGitHubAssignee(issue_info),\n    parent: '#' + getNumberFromDescriptionYaml(description, 'parent'),\n    description: description,\n    update: getGanttUpdateDate(issue_info.created_at,issue_info.updated_at),\n  };\n  return gantt_task;\n};\n\nexport const updateGitHubDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => { \n  const start_date_str = adjustDateString(gantt_task.start_date)\n    .replace(/\\-/g, '/');\n  const due_date_str = calculateDueDate(\n    start_date_str,\n    gantt_task.duration\n  ).replace(/\\-/g, '/');\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  description = replacePropertyInDescriptionString(description, task);\n  return description;\n};\n","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterd,\n  getGitHubAPIURLLabel,\n  getGitHubAPIURLCollaborators,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n} from './GitHubHelper.js';\nimport { date2string, isValidVariable } from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitHubIssueFromAPI = async (git_url, issue_info) => {\n  return axios\n    .get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number))\n    .then((res) => {\n      const gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n      return gantt_task;\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getGitHubIssuesFromAPI = async (\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  return axios\n    .get(\n      getGitHubAPIURLIssueFilterd(git_url, selected_labels, selected_assignee)\n    )\n    .then((res) => {\n      const promise_list = [];\n      res.data.map((issue_info) => {\n        promise_list.push(getGitHubIssueFromAPI(git_url, issue_info));\n      });\n      return Promise.all(promise_list);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\n    let labels = [];\n    res.data.map((info) => {\n      labels.push({ id: info.id, name: info.name });\n      return null;\n    });\n    return labels;\n  });\n};\n\nexport const setGitHubMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    return axios\n      .get(getGitHubAPIURLCollaborators(git_url), {\n        headers: { Authorization: `token ${token}` },\n        data: {},\n      })\n      .then((res) => {\n        let members = [];\n        res.data.map((info) => {\n          members.push({ id: info.id, name: info.login });\n          return null;\n        });\n        return members;\n      });\n  } else {\n    console.warn('token is not valid!');\n  }\n};\n\nexport const updateGitHubIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  const url = getGitHubAPIURLIssuebyNumber(\n    git_url,\n    removeFirstSharp(gantt_task.id)\n  );\n  axios\n    .get(url)\n    .then((res) => {\n      const issue_info = res.data;\n      if (\n        updateGitHubDescriptionStringFromGanttTask(\n          issue_info.body,\n          gantt_task\n        ) == null\n      ) {\n        gantt.message({\n          text: 'failed update issue. ' + gantt_task.text,\n          type: 'error',\n        });\n      } else {\n        if (gantt_task !== generateGanttTaskFromGitHub(issue_info)) {\n          axios\n            .post(\n              url,\n              {\n                body: updateGitHubDescriptionStringFromGanttTask(\n                  issue_info.body,\n                  gantt_task\n                ),\n              },\n              {\n                headers: {\n                  Authorization: `token ${token}`,\n                },\n              }\n            )\n            .then((res) => {\n              gantt.message({\n                text: 'success update issue.  ' + gantt_task.id,\n              });\n            })\n            .catch((err) => {\n              gantt.message({\n                text: 'failed update GitHub issue. check your token.' + err,\n                type: 'error',\n              });\n            });\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitHub issue. check your url.' + err,\n        type: 'error',\n      });\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(\n    getGitHubURLIssuebyNumber(git_url, removeFirstSharp(gantt_task_id)),\n    '_blank'\n  );\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  const due_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import {\n  removeFirstSharp,\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  isValidVariable,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitLabAssignee = (issue_info) => {\n  if (isValidVariable(issue_info) && 'assignee' in issue_info) {\n    if (isValidVariable(issue_info.assignee) && 'name' in issue_info.assignee) {\n      return issue_info.assignee.name;\n    }\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getDateFromDescriptionYaml(\n    issue_info.description,\n    'start_date'\n  );\n  const due_date = adjustDateString(issue_info.due_date);\n  const gantt_task = {\n    id: '#' + issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(issue_info.description, 'progress'),\n    assignee: getGitLabAssignee(issue_info),\n    description: issue_info.description,\n    update: getGanttUpdateDate(issue_info.created_at,issue_info.updated_at),\n  };\n  let parent = getNumberFromDescriptionYaml(issue_info.description, 'parent');\n  if (parent !== null) {\n    if (parent !== 0) {\n      gantt_task.parent = '#' + parent;\n    }\n  }\n  return gantt_task;\n};\n\nexport const updateGitLabDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => {\n  const start_date_str = adjustDateString(gantt_task.start_date).replace(\n    /\\-/g,\n    '/'\n  );\n  const task = {\n    start_date: start_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  return replacePropertyInDescriptionString(description, task);\n};\n","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterd,\n  getGitLabAPIURLLabel,\n  getGitLabAPIURLMember,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n} from './GitLabHelper.js';\nimport {\n  adjustDateString,\n  calculateDueDate,\n  date2string,\n} from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitLabIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  assignee\n) => {\n  return axios\n    .get(getGitLabAPIURLIssueFilterd(git_url, token, selected_labels, assignee))\n    .then((res) => {\n      let data = [];\n      res.data.map((issue_info) => {\n        const gantt_task = generateGanttTaskFromGitLab(issue_info);\n        data.push(gantt_task);\n        return null;\n      });\n      return data;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLLabel(git_url, token))\n    .then((res) => {\n      let labels = [];\n      res.data.map((lebel_info) => {\n        labels.push(lebel_info);\n        return null;\n      });\n      return labels;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabMemberListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLMember(git_url, token))\n    .then((res) => {\n      let members = [];\n      res.data.map((info) => {\n        members.push({ id: info.id, name: info.name });\n        return null;\n      });\n      return members;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const updateGitLabIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  return axios\n    .get(\n      getGitabAPIURLIssuebyNumber(\n        git_url,\n        token,\n        removeFirstSharp(gantt_task.id)\n      )\n    )\n    .then((res) => {\n      const issue_info = res.data;\n      if (gantt_task !== generateGanttTaskFromGitLab(issue_info)) {\n        if (\n          parseInt(issue_info.iid) === parseInt(removeFirstSharp(gantt_task.id))\n        ) {\n          let description = updateGitLabDescriptionStringFromGanttTask(\n            issue_info.description,\n            gantt_task\n          );\n          if (description == null) {\n            gantt.message({\n              text: 'failed update issue. ' + gantt_task.text,\n              type: 'error',\n            });\n          } else {\n            description = encodeURIComponent(description);\n            const start_date_str = adjustDateString(gantt_task.start_date);\n            const due_date_str = calculateDueDate(\n              start_date_str,\n              gantt_task.duration\n            );\n            const put_url =\n              getGitabAPIURLIssuebyNumber(\n                git_url,\n                token,\n                removeFirstSharp(gantt_task.id)\n              ) +\n              '&description=' +\n              description +\n              '&due_date=' +\n              due_date_str;\n            return axios\n              .put(put_url)\n              .then((res) => {\n                gantt.message({\n                  text: 'success update issue.  ' + gantt_task.id,\n                });\n              })\n              .catch((err) => {\n                console.error(err);\n                return Promise.reject(err);\n              });\n          }\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitLab issue. check your token.',\n        type: 'error',\n      });\n    });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(\n    getGitLabURLIssuebyNumber(git_url, removeFirstSharp(id)),\n    '_blank'\n  );\n};\n\nexport const openGitLabNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n  setGitHubMemberListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n  setGitLabMemberListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\nimport { isValidURL } from '../Common/CommonHelper.js';\n\nexport const getIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  selected_assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return getGitHubIssuesFromAPI(git_url, selected_labels, selected_assignee);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return getGitLabIssuesFromAPI(\n      git_url,\n      token,\n      selected_labels,\n      selected_assignee\n    );\n  }\n};\n\nexport const setLabelListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubLabelListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabLabelListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const setMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubMemberListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabMemberListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const updateIssueByAPI = (gantt_task, token, gantt, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return updateGitHubIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return updateGitLabIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  }\n};\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task, git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabNewIssueAtBrowser(gantt_task, git_url);\n  }\n};\n","import ReactMarkdown from 'react-markdown';\nimport ReactDOMServer from 'react-dom/server';\nimport {\n  calculateStartDate,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper';\n\nexport const attachEvent = (gantt, props) => {\n  gantt.attachEvent('onTaskDblClick', (gantt_task_id, e) => {\n    props.openIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onTaskCreated', (gantt_task_id, e) => {\n    props.openNewIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onAfterTaskUpdate', (id, gantt_task) => {\n    updateParentTaskDate(gantt, gantt_task);\n    gantt.getChildren(gantt_task.id).map((child_gantt_task_id) => {\n      updateChildTaskDate(gantt, gantt_task, child_gantt_task_id);\n    });\n    props.updateIssueByAPI(gantt_task, gantt);\n  });\n\n  gantt.attachEvent('onBeforeTaskUpdate', (id, mode, gantt_task) => {\n  });\n\n  gantt.attachEvent('onAfterTaskMove', (id, parent) => {\n    let gantt_task = gantt.getTask(id);\n    if ('parent' in gantt_task) {\n      if (gantt_task.parent !== 0) {\n        gantt_task.parent = parent;\n        props.updateIssueByAPI(gantt_task, gantt);\n      }\n    }\n  });\n\n  // // Custom QuickInfo\n  // // https://docs.dhtmlx.com/gantt/desktop__quick_info.html\n  // gantt.attachEvent('onQuickInfo', (id) => {\n  //   let gantt_task = gantt.getTask(id);\n  //   gantt.locale.labels.detail_button = 'DETAIL';\n  //   gantt.$click.buttons.detail_button = (gantt_task_id) => {\n  //     props.openIssueAtBrowser(gantt_task_id);\n  //     return true;\n  //   };\n\n  //   gantt.ext.quickInfo.setContent({\n  //     header: {\n  //       title: '',\n  //       date: ReactDOMServer.renderToStaticMarkup().toString(),\n  //     },\n  //     content: ReactDOMServer.renderToStaticMarkup(\n  //       <div>\n  //         <h3>{gantt_task.text}</h3>\n  //         <ReactMarkdown>{gantt_task.description}</ReactMarkdown>\n  //       </div>\n  //     ).toString(),\n  //     buttons: ['detail_button'],\n  //   });\n  // });\n\n  // Changing the displayed range dynamically\n  // https://docs.dhtmlx.com/gantt/desktop__configuring_time_scale.html#range\n  gantt.attachEvent('onTaskDrag', function (id, mode, task, original) {\n    var state = gantt.getState();\n    var minDate = state.min_date,\n      maxDate = state.max_date;\n\n    var scaleStep =\n      gantt.date.add(new Date(), state.scale_step, state.scale_unit) -\n      new Date();\n\n    var showDate,\n      repaint = false;\n    if (mode == 'resize' || mode == 'move') {\n      if (Math.abs(task.start_date - minDate) < scaleStep) {\n        showDate = task.start_date;\n        repaint = true;\n      } else if (Math.abs(task.end_date - maxDate) < scaleStep) {\n        showDate = task.end_date;\n        repaint = true;\n      }\n\n      if (repaint) {\n        gantt.render();\n        gantt.showDate(showDate);\n      }\n    }\n  });\n};\n\nexport const updateParentTaskDate = (gantt, gantt_task) => {\n  if (!'parent' in gantt_task) {\n    return null;\n  }\n  if (gantt_task.parent === 0) {\n    return null;\n  }\n  let parent_gantt_task = gantt.getTask(gantt_task.parent).valueOf();\n  if (\n    parent_gantt_task.start_date.getTime() > gantt_task.start_date.getTime()\n  ) {\n    parent_gantt_task.start_date = gantt_task.start_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n  if (parent_gantt_task.end_date.getTime() < gantt_task.end_date.getTime()) {\n    parent_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n};\n\nexport const updateChildTaskDate = (gantt, gantt_task, child_gantt_task_id) => {\n  let child_gantt_task = gantt.getTask(child_gantt_task_id).valueOf();\n  const date_duration = child_gantt_task.duration.valueOf();\n  if (child_gantt_task.start_date.getTime() < gantt_task.start_date.getTime()) {\n    child_gantt_task.start_date = gantt_task.start_date;\n    child_gantt_task.end_date = new Date(\n      calculateDueDate(gantt_task.start_date, date_duration)\n    );\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n  if (child_gantt_task.end_date.getTime() > gantt_task.end_date.getTime()) {\n    child_gantt_task.start_date = new Date(\n      calculateStartDate(gantt_task.end_date, date_duration)\n    );\n    child_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n};\n","const zoom_level = {\n  levels: [\n    {\n      name: 'Days',\n      scale_height: 30,\n      min_column_width: 25,\n      scales: [\n        { unit: 'month', step: 1, format: '%n' },\n        { unit: 'day', step: 1, format: '%d' },\n      ],\n    },\n    {\n      name: 'Weeks',\n      scale_height: 30,\n      min_column_width: 70,\n      scales: [{ unit: 'week', step: 1, format: '%n/%d~' }],\n    },\n  ],\n};\n\nconst shortenDate = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  }\n  const m = ('00' + (date.getMonth() + 1)).slice(-2);\n  const d = ('00' + date.getDate()).slice(-2);\n  const shorten_date = m + '/' + d;\n  return shorten_date;\n};\n\nexport const setGanttConfig = (gantt) => {\n  gantt.config.xml_date = '%Y/%m/%d %H:%i';\n  gantt.config.order_branch = true;\n  gantt.config.order_branch_free = true;\n\n  gantt.config.keep_grid_width = true;\n  gantt.config.grid_resize = true;\n  gantt.config.open_tree_initially = true;\n  gantt.config.fit_tasks = true;\n\n  gantt.config.sort = true;\n\n  gantt.config.columns = [\n    {\n      name: 'id',\n      label: 'No.',\n      align: 'left',\n      tree: true,\n      width: '120',\n      template: (obj) => {\n        var befweek = new Date();\n        befweek.setDate(befweek.getDate() - 7);\n        console.log(obj.update + ' < ' + befweek.toLocaleDateString());\n        if (obj.update < befweek.toLocaleDateString()) {\n          return (\n            obj.id +\n            \"<a title='There is no update for a week.'><span class='overdue'>i</span></a>\"\n          );\n        }\n        return obj.id;\n      },\n    },\n    {\n      name: 'start_date',\n      label: 'Start ',\n      align: 'center',\n      width: '60',\n      template: (obj) => {\n        return shortenDate(obj.start_date);\n      },\n    },\n    {\n      name: 'due_date',\n      label: 'Due ',\n      align: 'center',\n      width: '60',\n      template: (obj) => {\n        return shortenDate(obj.due_date);\n      },\n    },\n    { name: 'assignee', label: 'Assignee', align: 'center', width: '130' },\n    { name: 'add', label: '', width: '40' },\n  ];\n\n  gantt.plugins({\n    // quick_info: true,\n    drag_timeline: true,\n  });\n  gantt.showDate(new Date());\n  gantt.ext.zoom.init(zoom_level);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { getIssuesFromAPI } from '../../functions/Common/IssueAPI.js';\nimport { attachEvent } from './GanttAttachEvent.js';\nimport { setGanttTemplates } from './GanttTemplates.js';\nimport { setGanttConfig } from './GanttConfig.js';\nimport { isValidVariable } from '../../functions/Common/CommonHelper.js';\n\nconst Gantt = (props) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setGanttConfig(gantt);\n    setGanttTemplates(gantt);\n    attachEvent(gantt, props);\n    gantt.init(containerRef.current);\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, []);\n\n  useEffect(() => {\n    if (props.zoom === 'Days') {\n      gantt.eachTask(function (task) {\n        task.$open = true;\n      });\n    } else {\n      gantt.eachTask(function (task) {\n        task.$open = false;\n      });\n    }\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, [props.zoom]);\n\n  useEffect(() => {\n    getIssuesFromAPI(\n      props.git_url,\n      props.token,\n      props.selected_labels,\n      props.selected_assignee\n    )\n      .then((data) => {\n        if (isValidVariable(data)) {\n          gantt.clearAll();\n          data.map((d) => {\n            gantt.addTask(d);\n          });\n          gantt.sort('due_date', false);\n          gantt.render();\n        }\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n  }, [\n    props.git_url,\n    props.token,\n    props.selected_labels,\n    props.selected_assignee,\n    props.update,\n  ]);\n\n  return (\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}></div>\n  );\n};\n\nexport default Gantt;\n","import {\n  calculateDuration,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper.js';\n\nexport const setGanttTemplates = (gantt) => {\n  gantt.templates.timeline_cell_class = function (item, date) {\n    if (Object.prototype.toString.call(date) !== '[object Date]') {\n      return null;\n    }\n    var today = new Date();\n    if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth()) {\n      return 'today';\n    }\n    if (date.getDay() === 0 || date.getDay() === 6) {\n      return 'weekend';\n    }\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date < yesterday) {\n      return 'past_days';\n    }\n  };\n\n  gantt.templates.task_text = function (start, end, task) {\n    return task.text;\n  };\n\n  gantt.templates.task_class = function (start, end, task) {\n    if (task.progress == 1) {\n      return '';\n    }\n    if (task.progress < 0.01) {\n      if (start <= new Date()) {\n        return 'behind';\n      }\n    } else if (\n      new Date(\n        calculateDueDate(\n          start,\n          (calculateDuration(start, end) + 1) * task.progress\n        )\n      ) < new Date()\n    ) {\n      return 'behind';\n    }\n  };\n};\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import { bake_cookie } from 'sfcookies';\nimport {\n  convertIDNamesStringToList,\n  convertIDNameListToString,\n  removeLastSlash,\n  removeLastSpace,\n} from '../functions/Common/Parser.js';\nimport {\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../functions/Common/IssueAPI.js';\nimport { isValidVariable } from '../functions/Common/CommonHelper.js';\nimport { isGitHubURL } from '../functions/GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../functions/GitLab/GitLabURLHelper.js';\n\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const initialState = {\n  currentZoom: 'Days',\n  update: 0,\n  git_url: '',\n  token: 'Tokens that have not yet been entered',\n  labels: [],\n  selected_labels: [],\n  member_list: [],\n  selected_assignee: {},\n};\n\nexport const reducerFunc = (state, action) => {\n  switch (action.type) {\n    case 'zoomChange':\n      return { ...state, currentZoom: action.value };\n    case 'gitURLChange':\n      return {\n        ...state,\n        git_url: handleGitURLChange(\n          action.value.props,\n          action.value.git_url,\n          state.selected_labels\n        ),\n      };\n    case 'tokenChange':\n      return { ...state, token: handleTokenChange(action.value) };\n    case 'labelChange':\n      return { ...state, labels: action.value };\n    case 'selectedLabelsChange':\n      return {\n        ...state,\n        selected_labels: handleSelectedLabelsChange(\n          action.value.props,\n          state.git_url,\n          action.value.selected_labels,\n          state.selected_assignee\n        ),\n      };\n    case 'memberListChange':\n      return { ...state, member_list: handleMemberListChange(action.value) };\n    case 'selectedAssigneeChange':\n      return {\n        ...state,\n        selected_assignee: handleSelectedAssigneeChange(\n          action.value.props,\n          state.git_url,\n          state.selected_labels,\n          action.value.selected_assignee\n        ),\n      };\n    case 'updateClick':\n      return { ...state, update: state.update + 1 };\n    case 'openIssueAtBrowser':\n      return handleOpenIssueAtBrowser(state, action);\n    case 'openNewIssueAtBrowser':\n      return handleOpenNewIssueAtBrowser(state, action);\n    case 'updateIssueByAPI':\n      return handleUpdateIssueByAPI(state, action);\n    case 'setStateFromURLQueryString':\n      return setStateFromURLQueryString(\n        state,\n        action.value.props,\n        action.value.setValue\n      );\n    default:\n      return state;\n  }\n};\n\nexport const handleOpenIssueAtBrowser = (state, action) => {\n  openIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleOpenNewIssueAtBrowser = (state, action) => {\n  openNewIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleUpdateIssueByAPI = (state, action) => {\n  updateIssueByAPI(\n    action.value.gantt_task,\n    state.token,\n    action.value.gantt,\n    state.git_url\n  );\n  return state;\n};\n\nexport const handleGitURLChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  git_url = removeLastSlash(removeLastSpace(git_url));\n  if (isGitHubURL(git_url)) {\n    gantt.message({ text: 'Access GitHub.com' });\n  } else if (isGitLabURL(git_url)) {\n    gantt.message({ text: 'Access GitLab.com' });\n  } else if (getSelfHostingGitLabDomain(git_url) !== null) {\n    gantt.message({ text: 'Access Maybe GitLab.self-host' });\n  } else {\n    gantt.message({ text: 'Not a valid URL.', type: 'error' });\n    return null;\n  }\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return git_url;\n};\n\nexport const handleTokenChange = (token) => {\n  bake_cookie('git_token', token);\n  return token;\n};\n\nexport const handleSelectedLabelsChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_labels;\n};\n\nexport const handleMemberListChange = (\n  member_list\n) => {\n  if(isValidVariable(member_list)){\n    return member_list;\n  } else {\n    return [];\n  }\n};\n\nexport const handleSelectedAssigneeChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_assignee;\n};\n\nexport const setURLQuery = (props, git_url, selected_labels, selected_assignee) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertIDNameListToString(selected_labels));\n  params.set('assignee', convertIDNameListToString([selected_assignee]));\n  props.history.push({\n    search: params.toString(),\n  });\n  return null;\n};\n\nexport const setStateFromURLQueryString = (state, props, setValue) => {\n  const params = new URLSearchParams(props.location.search);\n  state.git_url = params.get('giturl');\n\n  const selected_labels = convertIDNamesStringToList(params.get('labels'));\n  if (isValidVariable(selected_labels[0])) {\n    if ('name' in selected_labels[0]) {\n      if (selected_labels[0].name !== '') {\n        state.selected_labels = selected_labels;\n      }\n    }\n  }\n\n  const selected_assignee_list = convertIDNamesStringToList(\n    params.get('assignee')\n  );\n  if (isValidVariable(selected_assignee_list)) {\n    state.selected_assignee = selected_assignee_list[0];\n  }\n  setValue('git_url', state.git_url);\n  return state;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Toolbar from './components/Toolbar';\nimport Gantt from './components/Gantt';\nimport { read_cookie } from 'sfcookies';\nimport { withRouter } from 'react-router-dom';\nimport { initialState, reducerFunc } from './State/Reducer.js';\nimport {\n  setLabelListOfRepoFromAPI,\n  setMemberListOfRepoFromAPI,\n} from './functions/Common/IssueAPI.js';\nimport { gantt } from 'dhtmlx-gantt';\n\nconst App = (props) => {\n  const [state, dispatch] = useReducer(reducerFunc, initialState);\n  const { register, setValue } = useForm({ git_url: '', token: '' });\n\n  useEffect(() => {\n    setValue('token', read_cookie('git_token'));\n    dispatch({ type: 'tokenChange', value: read_cookie('git_token') });\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: 'setStateFromURLQueryString',\n      value: { props: props, setValue: setValue },\n    });\n  }, [props.location]);\n\n  useEffect(() => {\n    setLabelListOfRepoFromAPI(state.git_url, state.token)\n      .then((labels) => {\n        dispatch({ type: 'labelChange', value: labels });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n    setMemberListOfRepoFromAPI(state.git_url, state.token)\n      .then((members) => {\n        dispatch({ type: 'memberListChange', value: members });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n  }, [state.git_url, state.token, state.selected_assignee]);\n\n  return (\n    <>\n      <div className=\"zoom-bar\">\n        <Toolbar\n          zoom={state.currentZoom}\n          onZoomChange={(zoom) => dispatch({ type: 'zoomChange', value: zoom })}\n          onGitURLChange={(git_url) =>\n            dispatch({\n              type: 'gitURLChange',\n              value: { props: props, git_url: git_url },\n            })\n          }\n          token={state.token}\n          onTokenChange={(token) =>\n            dispatch({ type: 'tokenChange', value: token })\n          }\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\n          labels={state.labels}\n          selected_labels={state.selected_labels}\n          onSelectedLabelChange={(selected_labels) =>\n            dispatch({\n              type: 'selectedLabelsChange',\n              value: { props: props, selected_labels: selected_labels },\n            })\n          }\n          member_list={state.member_list}\n          selected_assignee={state.selected_assignee}\n          onSelectedAssigneeChange={(selected_assignee) =>\n            dispatch({\n              type: 'selectedAssigneeChange',\n              value: { props: props, selected_assignee: selected_assignee },\n            })\n          }\n          register={register}\n        />\n      </div>\n      <div className=\"gantt-container\">\n        <Gantt\n          zoom={state.currentZoom}\n          git_url={state.git_url}\n          token={state.token}\n          selected_labels={state.selected_labels}\n          selected_assignee={state.selected_assignee}\n          update={state.update}\n          openIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openIssueAtBrowser', value: gantt_task_id })\n          }\n          openNewIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openNewIssueAtBrowser', value: gantt_task_id })\n          }\n          updateIssueByAPI={(gantt_task, gantt) =>\n            dispatch({\n              type: 'updateIssueByAPI',\n              value: { gantt_task: gantt_task, gantt: gantt },\n            })\n          }\n        />\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={(props) => <App />} />\n  </Router>,\n  document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}