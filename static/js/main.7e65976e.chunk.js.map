{"version":3,"sources":["functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/Common/CommonHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","components/Gantt/Gantt.js","components/Gantt/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","App.js","serviceWorker.js","index.js"],"names":["removeLastSlash","url","length","test","slice","removeLastSpace","adjustURL","git_url","getStartDateFromDescriptionString","description","str","match","Date","replaceStartDateInDescriptionString","write_str","replace","getDueDateFromDescriptionString","getProgressFromDescriptionString","parseFloat","replaceProgressInDescriptionString","write_float_number","progress","write_round_str","Math","round","GitHubAPIURL","isGitHubURL","getGitHubNameSpaceFromGitURL","split_git_url","split","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","number","getGitHubAPIURLIssueFilterdLabel","labels","labels_url_str","map","label","name","getGitHubAPIURLLabel","GitLabAPIURL","isGitLabURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterdLabel","getGitLabAPIURLLabel","calculateDueDate","start_date_str","duration","start_date","moment","add","toDate","toLocaleDateString","getGanttStartDate","due_date","created_at","getGanttDuration","start_date_moment","diff","calculateDuration","getGanttUnscheduled","updateGanttIssue","issue","gantt","data","push","links","parse","sort","generateGanttTaskFromGitHub","issue_info","id","text","title","unscheduled","updateGitHubDescriptionStringFromGanttTask","gantt_task","due_date_str","replaceDueDateInDescriptionString","getGitHubIssuesFromAPI","selected_labels","a","axios","get","then","res","body","setGitHubLabelListOfRepoFromAPI","_this","label_list","lebel_info","setState","openGitHubIssueAtBrowser","gantt_task_id","window","open","getGitHubURLIssuebyNumber","openGitHubNewIssueAtBrowser","getGitHubURLNewIssueWithTemplate","generateGanttTaskFromGitLab","iid","getGitLabIssuesFromAPI","setGitLabLabelListOfRepoFromAPI","updateGitLabIssueFromGanttTask","getGitLabAPIURLIssue","encodeURIComponent","updateGitLabDescriptionStringFromGanttTask","put_url","getGitabAPIURLIssuebyNumber","put","console","log","catch","err","alert","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","clearAll","setLabelListOfRepoFromAPI","updateIssueByAPI","post","headers","updateGitHubIssueFromGanttTask","Gantt","props","dataProcessor","initZoom","ext","zoom","init","levels","scale_height","min_column_width","scales","unit","step","format","value","setLevel","onDataUpdated","this","createDataProcessor","type","action","item","Promise","resolve","reject","nextProps","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","show_unscheduled","attachEvent","e","openIssueAtBrowser","ganttContainer","initGanttDataProcessor","updateGantt","destructor","setZoom","ref","input","style","width","height","Component","Toolbar","handleGitURLChange","onGitURLChange","target","handleTokenChange","onTokenChange","handleUpdateClick","onUpdateClick","handleClickWeeks","handleZoomChange","handleClickDays","onZoomChange","handleChange","event","personName","onSelect","onLabelChange","onRemove","classes","noValidate","TextField","className","root","required","placeholder","defaultValue","verticalAlign","onChange","options","selectedValues","selectedValue","displayValue","selector_style","hidePlaceholder","emptyRecordMsg","closeIcon","ButtonGroup","size","Button","onClick","IconButton","color","multiselectContainer","display","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","margin","spacing","App","currentZoom","bake_cookie","GanttRef","current","state","handleLabelChange","messages","React","createRef","read_cookie","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e65976e.chunk.js","sourcesContent":["const removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\nconst removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\n\nexport const adjustURL = (git_url) => {\n  let url = git_url;\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  url = removeLastSlash(url);\n  url = removeLastSpace(url);\n  return url;\n}\n\nexport const getStartDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceStartDateInDescriptionString = (description, write_str) => {\n  const start_date = getStartDateFromDescriptionString(description);\n  if (start_date != null) {\n    return description.replace(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"start_date: \" + write_str);\n  } else {\n    return \"start_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getDueDateFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceDueDateInDescriptionString = (description, write_str) => {\n  const due_date = getDueDateFromDescriptionString(description);\n  if (due_date != null) {\n    return description.replace(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"due_date: \" + write_str);\n  } else {\n    return \"due_date: \" + write_str + \"  \\n\" + description;\n  }\n}\n\nexport const getProgressFromDescriptionString = (description) => {\n  if (description == null) {\n    return null;\n  }\n  let str = description.match(/progress: \\d{1}\\.\\d{1}/);\n  if (str == null) {\n    return 0.1;\n  }\n  str = str[0].match(/\\d{1}\\.\\d{1}/)[0];\n  return parseFloat(str);\n}\n\nexport const replaceProgressInDescriptionString = (description, write_float_number) => {\n  const progress = getProgressFromDescriptionString(description);\n  let write_round_str = Math.round(write_float_number * 10) / 10;\n  if (write_float_number === \"1\"){\n    write_float_number = \"1.0\"\n  }\n  if (progress != null) {\n    return description.replace(/progress: \\d{1}\\.\\d{1}/, \"progress: \" + write_round_str);\n  } else {\n    return \"progress: \" + write_round_str + \"  \\n\" + description;\n  }\n}","import { adjustURL } from '../Common/Parser.js';\n\nconst GitHubAPIURL = \"https://api.github.com/repos/\";\nconst GitHubURL = \"https://github.com/\";\n\nexport const isGitHubURL = (git_url) => {\n  return /github\\.com/.test(git_url);\n}\n\nconst getGitHubNameSpaceFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitHubProjectFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues';\n}\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues/' + number;\n}\n\nexport const getGitHubAPIURLIssueFilterdLabel = (git_url, labels) => {\n  let labels_url_str = \"\";\n  if (labels !== null || labels !== []) {\n    labels_url_str += \"?labels=\"\n    labels.map((label) => {\n      labels_url_str += label.name + \",\"\n      return null;\n    });\n  }\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/issues' + labels_url_str;\n}\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubAPIURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url) + '/labels';\n}\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitHubURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url)+ \"/issues/\" + number;\n}\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitHubURL + getGitHubNameSpaceFromGitURL(url) + \"/\" + getGitHubProjectFromGitURL(url)\n         + \"/issues/new?assignees=&labels=&title=&body=\";\n}","import { adjustURL } from '../Common/Parser.js';\n\nconst GitLabAPIURL = \"https://gitlab.com/api/v4/projects/\";\nconst GitLabURL = \"https://gitlab.com/\";\n\nexport const isGitLabURL = (git_url) => {\n  return /gitlab\\.com/.test(git_url);\n}\n\nconst getGitLabNameSpaceFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n}\n\nconst getGitLabProjectFromGitURL = (git_url) => {\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n}\n\nconst postFixToken = (token) => {\n  let post_fix_str = \"\";\n  if (token !== null && token !== \"\") {\n    post_fix_str += \"?access_token=\" + token + \"&\";\n  } else {\n    post_fix_str += \"?\";\n  }\n  return post_fix_str;\n}\n\nexport const getGitLabAPIURLIssueFilterdLabel = (git_url, token, labels) => {\n  let post_fix_str = postFixToken(token);\n  if (labels !== null || labels !== []) {\n    post_fix_str += \"labels=\";\n    labels.map((label) => {\n      post_fix_str += label.name + \",\"\n      return null;\n    });\n  }\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues' + post_fix_str;\n}\n\nexport const getGitLabAPIURLIssue = (git_url, token, labels) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues' + post_fix_str;\n}\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/issues/' + number + post_fix_str;\n}\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  const post_fix_str = postFixToken(token);\n  const url = adjustURL(git_url);\n  return GitLabAPIURL + getGitLabNameSpaceFromGitURL(url) + \"%2F\" + getGitLabProjectFromGitURL(url) + '/labels' + post_fix_str;\n}\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  const url = adjustURL(git_url);\n  return GitLabURL + getGitLabNameSpaceFromGitURL(url) + \"/\" + getGitLabProjectFromGitURL(url)+ \"/-/issues/\" + number;\n}\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  const url = adjustURL(git_url);\n  return GitLabURL + getGitLabNameSpaceFromGitURL(url) + \"/\" + getGitLabProjectFromGitURL(url)\n         + \"/issues/new?issue[description]=\";\n}","import moment from 'moment';\n\nconst calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date);\n  const due_date_moment = moment(due_date);\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n}\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date).add(duration - 1, 'd').toDate();\n  return due_date.toLocaleDateString(\"ja-JP\");\n}\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = start_date.toLocaleDateString(\"ja-JP\");\n  } else {\n    start_date_str = new Date(created_at).toLocaleDateString(\"ja-JP\");\n  }\n  return start_date_str;\n}\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n}\n\nexport const getGanttUnscheduled = (start_date, due_date) => {\n  let unscheduled = null;\n  if (start_date != null && due_date != null) {\n    unscheduled = false;\n  } else {\n    unscheduled = true;\n  }\n  return unscheduled;\n}\n\nexport const updateGanttIssue = (issue, gantt) => {\n  let data = [];\n  let links = [];\n  data.push(issue);\n  data = { data: data, links: links }\n  gantt.parse(data);\n  gantt.sort(\"start_date\", false);\n} ","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getDueDateFromDescriptionString,\n  replaceDueDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttUnscheduled,\n  getGanttDuration,\n} from '../Common/CommonHelper.js';\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getStartDateFromDescriptionString(description);\n  const due_date = getDueDateFromDescriptionString(description);\n\n  const gantt_task = {\n    id: issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(description),\n    unscheduled: getGanttUnscheduled(start_date, due_date),\n  }\n  return gantt_task;\n}\n\nexport const updateGitHubDescriptionStringFromGanttTask = (description, gantt_task) => {\n  const start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n  const due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n\n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceDueDateInDescriptionString(description, due_date_str);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return description;\n}","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterdLabel,\n  getGitHubAPIURLLabel,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n} from './GitHubHelper.js';\nimport { updateGanttIssue } from '../Common/CommonHelper.js';\n\nexport const getGitHubIssuesFromAPI = async (gantt, git_url, selected_labels) => {\n  axios.get(getGitHubAPIURLIssueFilterdLabel(git_url, selected_labels)).then((res) => {\n    res.data.map((issue_info) => {\n      axios.get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number)).then((res) => {\n        const gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n        updateGanttIssue(gantt_task, gantt);\n      });\n      return null;\n    });\n  });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (_this, git_url) => {\n  axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\n    let label_list = [];\n    res.data.map((lebel_info) => {\n      label_list.push(lebel_info);\n      return null;\n    });\n    _this.setState({ labels: label_list });\n  });\n};\n\nexport const updateGitHubIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n  const url = getGitHubAPIURLIssuebyNumber(git_url, gantt_task.id);\n  axios.get(url).then((res) => {\n    axios.post(url, {\n      body: updateGitHubDescriptionStringFromGanttTask(res.data.body, gantt_task),\n    }, {\n      headers: {\n        'Authorization': `token ${token}`\n      }\n    }).then((res) => {\n      console.log(\"success update issue\");\n    }).catch((err) => {\n      alert('failed update GitHub issue. check your token.');\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(getGitHubURLIssuebyNumber(git_url,gantt_task_id), \"_blank\");\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"due_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(getGitHubURLNewIssueWithTemplate(git_url)+body, \"_blank\");\n};","import {\n  getStartDateFromDescriptionString,\n  replaceStartDateInDescriptionString,\n  getProgressFromDescriptionString,\n  replaceProgressInDescriptionString,\n} from '../Common/Parser.js';\nimport { \n  getGanttStartDate,\n  getGanttUnscheduled,\n  getGanttDuration,\n } from '../Common/CommonHelper.js';\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getStartDateFromDescriptionString(issue_info.description);\n  const due_date = new Date(issue_info.due_date).toLocaleDateString(\"ja-JP\");\n  \n  const gantt_task = {\n    id: issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getProgressFromDescriptionString(issue_info.description),\n    unscheduled: getGanttUnscheduled(start_date, due_date),\n  }\n  return gantt_task;\n}\n\nexport const updateGitLabDescriptionStringFromGanttTask = (description, gantt_task) => {\n  let start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n\n  description = replaceProgressInDescriptionString(description, gantt_task.progress);\n  description = replaceStartDateInDescriptionString(description, start_date_str);\n\n  return encodeURIComponent(description);\n}","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterdLabel,\n  getGitLabAPIURLIssue,\n  getGitLabAPIURLLabel,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n} from './GitLabHelper.js';\nimport { \n  calculateDueDate,\n  updateGanttIssue,\n } from '../Common/CommonHelper.js';\n\nexport const getGitLabIssuesFromAPI = async (gantt, git_url, token, selected_labels) => {\n  axios.get(getGitLabAPIURLIssueFilterdLabel(git_url, token, selected_labels)).then((res) => {\n    res.data.map((issue_info) => {\n      const gantt_task = generateGanttTaskFromGitLab(issue_info);\n      updateGanttIssue(gantt_task, gantt);\n      return null;\n    });\n  });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (_this, git_url, token) => {\n  axios.get(getGitLabAPIURLLabel(git_url, token)).then((res) => {\n    let label_list = [];\n    res.data.map((lebel_info) => {\n      label_list.push(lebel_info);\n      return null;\n    });\n    _this.setState({ labels: label_list });\n  });\n};\n\nexport const updateGitLabIssueFromGanttTask = (gantt_task, token, gantt, git_url) => {\n  axios.get(getGitLabAPIURLIssue(git_url, token)).then((res) => {\n    res.data.map((issue_info) => {\n      if (issue_info.iid === gantt_task.id) {\n        const description = updateGitLabDescriptionStringFromGanttTask(issue_info.description, gantt_task);\n        const start_date_str = new Date(gantt_task.start_date).toLocaleDateString(\"ja-JP\");\n        const due_date_str = calculateDueDate(start_date_str, gantt_task.duration);\n        const put_url = getGitabAPIURLIssuebyNumber(git_url, token, gantt_task.id)\n          + \"&description=\" + description\n          + \"&due_date=\" + due_date_str;\n        axios.put(put_url).then((res) => {\n          console.log(\"success update issue\")\n        }).catch((err) => {\n          alert('failed update GitLab issue. check your token.')\n          getGitLabIssuesFromAPI(gantt, git_url);\n        });\n      }\n      return null;\n    });\n  });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(getGitLabURLIssuebyNumber(git_url, id), \"_blank\");\n};\n\nexport const openGitLabNewIssueAtBrowser = (id, git_url) => {\n  let body = \"\";\n  body += \"start_date:%20\" + new Date().toLocaleDateString(\"ja-JP\") + \"%20%20%0D%0A\";\n  body += \"progress:%200.1%0D%0A\";\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, \"_blank\");\n};","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport { isGitLabURL } from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\n\nexport const getIssuesFromAPI = async (gantt, git_url, token, selected_labels) => {\n  gantt.clearAll(); \n  if (isGitHubURL(git_url)) {\n    getGitHubIssuesFromAPI(gantt, git_url, selected_labels);\n  }\n  if (isGitLabURL(git_url)) {\n    getGitLabIssuesFromAPI(gantt, git_url, token, selected_labels);\n  }\n}\n\nexport const setLabelListOfRepoFromAPI = async (_this, git_url, token) => {\n  if (isGitHubURL(git_url)) {\n    setGitHubLabelListOfRepoFromAPI(_this, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    setGitLabLabelListOfRepoFromAPI(_this, git_url, token);\n  }\n}\n\nexport const updateIssueByAPI = (gantt_task_id, token, gantt, git_url) => {\n  if (isGitHubURL(git_url)) {\n    updateGitHubIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    updateGitLabIssueFromGanttTask(gantt_task_id, token, gantt, git_url);\n  }\n}\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n  if (isGitLabURL(git_url)) {\n    openGitLabNewIssueAtBrowser(gantt_task_id, git_url);\n  }\n}","import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport {\n  getIssuesFromAPI,\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../../functions/Common/IssueAPI.js';\n\nexport default class Gantt extends Component {\n\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init({\n      levels: [\n        {\n          name: 'Days',\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: 'week', step: 1, format: '%M, %d week' },\n            { unit: 'day', step: 1, format: '%d %M' }\n          ]\n        },\n        {\n          name: 'Weeks',\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: \"month\", step: 1, format: '%Y %F' },\n            { unit: 'week', step: 1, format: '%M, %d week' },\n          ]\n        }\n      ]\n    });\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  updateGantt(selected_labels) {\n    getIssuesFromAPI(gantt, this.props.git_url, this.props.token, selected_labels);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    gantt.config.xml_date = \"%Y/%m/%d %H:%i\";\n    gantt.config.order_branch = true;\n    gantt.config.order_branch_free = true;\n\n    gantt.config.keep_grid_width = true;\n    gantt.config.grid_resize = true;\n\n    gantt.config.show_unscheduled = true;\n    gantt.config.sort = true;\n\n    gantt.attachEvent(\"onTaskDblClick\", (gantt_task_id, e) => {\n      openIssueAtBrowser(gantt_task_id, this.props.git_url);\n    });\n\n    gantt.attachEvent(\"onTaskCreated\", (gantt_task_id, e) => {\n      openNewIssueAtBrowser(gantt_task_id, this.props.git_url);\n    });\n\n    gantt.attachEvent(\"onAfterTaskUpdate\", (id, gantt_task) => {\n      updateIssueByAPI(gantt_task, this.props.token, gantt, this.props.git_url);\n    });\n\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    this.updateGantt();\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => { this.ganttContainer = input }}\n        style={{ width: '100%', height: '100%' }}\n      ></div>\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      fontSize: \"15px\",\n    },\n  },\n});\n\nclass Toolbar extends Component {\n  handleGitURLChange = (e) => {\n    if (this.props.onGitURLChange) {\n      this.props.onGitURLChange(e.target.value)\n    }\n  }\n\n  handleTokenChange = (e) => {\n    if (this.props.onTokenChange) {\n      this.props.onTokenChange(e.target.value)\n    }\n  }\n\n  handleUpdateClick = (e) => {\n    if (this.props.onUpdateClick) {\n      this.props.onUpdateClick()\n    }\n  }\n\n  handleClickWeeks = (e) => {\n    this.handleZoomChange(\"Weeks\")\n  }\n\n  handleClickDays = (e) => {\n    this.handleZoomChange(\"Days\")\n  }\n\n  handleZoomChange = (value) => {\n    if (this.props.onZoomChange) {\n      this.props.onZoomChange(value)\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ personName: event.target.value })\n  };\n\n  onSelect = (selected_labels) => {\n    if (this.props.onLabelChange) {\n      this.props.onLabelChange(selected_labels)\n    }\n  };\n\n  onRemove = (selected_labels) => {\n    if (this.props.onLabelChange) {\n      this.props.onLabelChange(selected_labels)\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <form noValidate >\n        <TextField\n          className={classes.root}\n          required\n          placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n          defaultValue=\"https://github.com/lamact/react-issue-ganttchart\"\n          label=\"Git Repository URL\"\n          style={{ width: \"25%\", verticalAlign: \"middle\" }}\n          onChange={this.handleGitURLChange}\n        />\n        <TextField\n          className={classes.root}\n          type=\"password\"\n          placeholder=\"Access Token\"\n          defaultValue=\"Access Token\"\n          label=\"Access Token\"\n          style={{ width: \"10%\", verticalAlign: \"middle\" }}\n          onChange={this.handleTokenChange}\n        />\n\n        <Multiselect\n          className={classes.root}\n          options={this.props.labels}\n          selectedValues={this.props.selectedValue}\n          onSelect={this.onSelect}\n          onRemove={this.onRemove}\n          displayValue=\"name\"\n          style={selector_style}\n          placeholder=\"filter by labels\"\n          hidePlaceholder=\"false\"\n          emptyRecordMsg=\"No Labels\"\n          closeIcon=\"cancel\"\n        />\n        <ButtonGroup size=\"small\" style={{ height: \"34px\" }} >\n          <Button onClick={this.handleClickWeeks}>Weeks</Button>\n          <Button onClick={this.handleClickDays}>Days</Button>\n        </ButtonGroup>\n        <IconButton color=\"primary\" style={{ verticalAlign: \"middle\" }}>\n          <CachedIcon onClick={this.handleUpdateClick} />\n        </IconButton>\n      </form>\n    );\n  }\n}\n\nconst selector_style = {\n  multiselectContainer: {\n    width: \"50%\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    padding: \"4px\",\n    alignItems: \"flex-end\",\n  },\n  chips: {\n    background: \"light blue\",\n    fontSize: \"15px\",\n  },\n  searchBox: {\n    border: \"none\",\n  },\n\n}\n\nexport default withStyles(styles)(Toolbar)\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React, { Component } from 'react';\nimport Gantt from './components/Gantt';\nimport Toolbar from './components/Toolbar';\nimport { bake_cookie, read_cookie } from 'sfcookies';\nimport { setLabelListOfRepoFromAPI } from './functions/Common/IssueAPI.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoom: 'Weeks',\n      messages: [],\n      git_url: '',\n      token: '',\n      labels: [],\n      selected_labels: [],\n    };\n    this.GanttRef = React.createRef();\n  }\n\n  handleZoomChange = (zoom) => {\n    this.setState({\n      currentZoom: zoom\n    });\n    bake_cookie('currentZoom', zoom);\n  }\n\n  handleTokenChange = (token) => {\n    this.setState({ token });\n  }\n\n  handleGitURLChange = (git_url) => {\n    this.setState({ git_url });\n  }\n\n  updateGantt = async (selected_labels) => {\n    this.GanttRef.current.updateGantt(selected_labels);\n    setLabelListOfRepoFromAPI(this, this.state.git_url, this.state.token);\n  }\n\n  handleUpdateClick = () => {\n    bake_cookie('access_token', this.state.token);\n    bake_cookie('url', this.state.git_url);\n    this.updateGantt(this.state.selected_labels);\n  }\n\n  handleLabelChange = (selected_labels) => {\n    this.updateGantt(selected_labels);\n    this.setState({ selected_labels });\n  }\n\n  componentDidMount() {\n    this.setState({\n      token: read_cookie('access_token')\n    });\n    this.setState({\n      git_url: read_cookie('url')\n    });\n    if (read_cookie('currentZoom') === 'Weeks' || read_cookie('currentZoom') === 'Days')\n      this.setState({\n        currentZoom: read_cookie('currentZoom')\n      });\n  }\n\n  render() {\n    const { currentZoom, git_url, token, labels } = this.state;\n    return (\n      <div>\n        <div className=\"zoom-bar\">\n          <Toolbar\n            zoom={currentZoom}\n            onZoomChange={this.handleZoomChange}\n            git_url={git_url}\n            onGitURLChange={this.handleGitURLChange}\n            token={token}\n            onTokenChange={this.handleTokenChange}\n            onUpdateClick={this.handleUpdateClick}\n            labels={labels}\n            onLabelChange={this.handleLabelChange}\n          />\n        </div>\n        <div className=\"gantt-container\">\n          <Gantt\n            ref={this.GanttRef}\n            zoom={currentZoom}\n            git_url={git_url}\n            token={token}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}