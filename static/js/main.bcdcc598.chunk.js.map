{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","components/Gantt/GanttAttachEvent.js","components/Gantt/GanttConfig.js","components/Gantt/Gantt.js","components/Gantt/GanttTemplates.js","components/Gantt/index.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","State/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","marginRight","props","classes","noValidate","TextField","className","required","placeholder","label","style","onChange","e","onGitURLChange","target","value","inputRef","register","name","type","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","Autocomplete","size","member_list","getOptionLabel","option","selected_assignee","noOptionsText","assignee","onSelectedAssigneeChange","renderInput","params","variant","ButtonGroup","height","Button","onClick","onZoomChange","IconButton","color","onUpdateClick","window","open","Toolbar","isValidVariable","variable","Array","isArray","length","isValidIDName","id_name","isValidURL","url","test","orgRound","base","Math","round","calculateDuration","start_date","due_date","start_date_moment","moment","diff","calculateDueDate","start_date_str","duration","Date","add","toDate","date2string","date","Object","prototype","toString","call","isNaN","getFullYear","string","toLocaleDateString","getMonth","getDate","adjustDateString","date_str","getGanttStartDate","created_at","getGanttDueDate","getGanttUpdateDate","updated_at","getGanttDuration","updateParentTaskDate","gantt","gantt_task","parent","parent_gantt_task","getTask","valueOf","getTime","updateTask","id","render","end_date","updateChildTaskDate","child_gantt_task_id","child_gantt_task","date_duration","due_date_str","calculateStartDate","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","shortenDate","slice","Gantt","containerRef","useRef","useEffect","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","open_tree_initially","fit_tasks","sort","columns","align","tree","template","obj","befweek","setDate","update","plugins","drag_timeline","showDate","ext","zoom","init","templates","timeline_cell_class","item","today","getDay","yesterday","task_text","start","end","task","text","task_class","progress","setGanttTemplates","attachEvent","gantt_task_id","openIssueAtBrowser","openNewIssueAtBrowser","getChildren","map","updateIssueByAPI","mode","original","state","getState","minDate","min_date","maxDate","max_date","scaleStep","scale_step","scale_unit","repaint","abs","current","setLevel","eachTask","$open","issue","clearAll","d","addTask","err","message","ref","removeFirstSharp","id_str","substring","removeLastSpace","parseYamlFromDescription","description","yaml_part","str","split","getYamlPartFromDescription","yaml_struct","yaml","load","getNumberFromDescriptionYaml","column_name","number","getDateFromDescriptionYaml","getStringFromDescriptionYaml","replacePropertyInDescriptionString","task_section","dump","first_section","end_section","convertIDNameListToString","list","info","convertIDNamesStringToList","split_string","forEach","element","index","array","parseInt","push","GitHubAPIURL","GitHubURL","isGitHubURL","git_url","getGitHubNameSpaceFromGitURL","split_git_url","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","getGitHubAPIURLIssueFilterd","url_query_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","getGitHubURLIssuebyNumber","n","Number","isFinite","isGitLabURL","getSelfHostingGitLabDomain","getGitLabDomain","gitlab_domain","self_hosting_gitlab_domain","getGitLabURL","getGitLabAPIURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterd","getGitabAPIURLIssuebyNumber","getGitLabAPIURLLabel","getGitLabAPIURLMember","getGitHubAssignee","issue_info","login","generateGanttTaskFromGitHub","title","updateGitHubDescriptionStringFromGanttTask","replace","getGitHubIssueFromAPI","a","axios","get","then","res","data","body","catch","Promise","reject","getGitHubIssuesFromAPI","promise_list","all","setGitHubLabelListOfRepoFromAPI","setGitHubMemberListOfRepoFromAPI","headers","Authorization","members","console","warn","openGitHubNewIssueAtBrowser","encodeURIComponent","getGitHubURLNewIssueWithTemplate","getGitLabAssignee","generateGanttTaskFromGitLab","iid","getGitLabIssuesFromAPI","error","setGitLabLabelListOfRepoFromAPI","lebel_info","setGitLabMemberListOfRepoFromAPI","updateGitLabIssueFromGanttTask","updateGitLabDescriptionStringFromGanttTask","put_url","put","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","resolve","setLabelListOfRepoFromAPI","setMemberListOfRepoFromAPI","post","updateGitHubIssueFromGanttTask","openGitHubIssueAtBrowser","initialState","currentZoom","issue_columns","reducerFunc","action","handleGitURLChange","handleTokenChange","handleSelectedLabelsChange","handleMemberListChange","handleSelectedAssigneeChange","handleOpenIssueAtBrowser","handleOpenNewIssueAtBrowser","handleUpdateIssueByAPI","setStateFromURLQueryString","setValue","setURLQuery","bake_cookie","URLSearchParams","location","search","set","history","selected_assignee_list","withRouter","useReducer","dispatch","useForm","read_cookie","issues","log","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcdcc598.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst Toolbar = (props) => {\n  const { classes } = props;\n  return (\n    <form noValidate>\n      <TextField\n        className={classes.root}\n        required\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n        label=\"Git Repository URL\"\n        style={{ width: '25%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onGitURLChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"git_url\"\n      />\n      <TextField\n        className={classes.root}\n        type=\"password\"\n        placeholder=\"Access Token\"\n        label=\"Access Token\"\n        style={{ width: '10%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onTokenChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"token\"\n      />\n      <Multiselect\n        className={classes.root}\n        options={props.labels}\n        selectedValues={props.selected_labels}\n        onSelect={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        onRemove={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        displayValue=\"name\"\n        style={selector_style}\n        placeholder=\"filter by labels\"\n        hidePlaceholder=\"false\"\n        emptyRecordMsg=\"No Labels\"\n        closeIcon=\"cancel\"\n      />\n      <Autocomplete\n        className={classes.root}\n        size=\"small\"\n        options={props.member_list}\n        getOptionLabel={(option) => option.name}\n        value={props.selected_assignee}\n        noOptionsText=\"Requires a valid token\"\n        onChange={(e, assignee) => {\n          props.onSelectedAssigneeChange(assignee);\n        }}\n        style={{\n          width: '15%',\n          verticalAlign: 'middle',\n          display: 'inline-block',\n          marginRight: '15px',\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            className={classes.root}\n            label=\"Assignee\"\n            variant=\"standard\"\n          />\n        )}\n      />\n      <ButtonGroup size=\"small\" style={{ height: '34px' }}>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Weeks');\n          }}\n        >\n          Weeks\n        </Button>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Days');\n          }}\n        >\n          Days\n        </Button>\n      </ButtonGroup>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <CachedIcon\n          onClick={(e) => {\n            props.onUpdateClick();\n          }}\n        />\n      </IconButton>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <GitHubIcon onClick={() => window.open('https://github.com/lamact/react-issue-ganttchart')} />\n      </IconButton>\n    </form>\n  );\n};\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      fontSize: '13px',\n      marginRight: '4px',\n    },\n  },\n});\n\nconst selector_style = {\n  multiselectContainer: {\n    width: '27%',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    padding: '4px',\n    alignItems: 'flex-end',\n  },\n  chips: {\n    background: 'light blue',\n    fontSize: '15px',\n  },\n  searchBox: {\n    border: 'none',\n  },\n};\n\nexport default withStyles(styles)(Toolbar);\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import moment from 'moment';\n\nexport const isValidVariable = (variable) => {\n  if (\n    variable !== null &&\n    variable !== [] &&\n    variable !== void 0 &&\n    variable !== ''\n  ) {\n    return true;\n  }\n  if (Array.isArray(variable)) {\n    return variable.length > 0;\n  }\n  return false;\n};\n\nexport const validVariable = (variable) => {\n  if (isValidVariable(variable)) {\n    return variable;\n  } else {\n    return '';\n  }\n};\n\nexport const isValidIDName = (id_name) => {\n  return isValidVariable(id_name) && 'id' in id_name && 'name' in id_name;\n};\n\nexport const isValidURL = (url) => {\n  if (!isValidVariable(url)) {\n    return false;\n  }\n  return /https:\\/\\//.test(url);\n};\n\nexport const isNumber = (n) => {\n  if (typeof n === 'number' && Number.isFinite(n)) {\n    return true;\n  }\n  return false;\n};\n\nexport const orgRound = (value, base) => {\n  return Math.round(value / base) * base;\n};\n\nexport const calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date, 'YYYY/MM/DD');\n  const due_date_moment = moment(due_date, 'YYYY/MM/DD');\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n};\n\nexport const calculateStartDate = (due_date_str, duration) => {\n  const due_date = new Date(due_date_str);\n  const start_date = moment(due_date, 'YYYY/MM/DD')\n    .add(-duration, 'd')\n    .toDate();\n  return date2string(start_date);\n};\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date, 'YYYY/MM/DD')\n    .add(duration - 1, 'd')\n    .toDate();\n  return date2string(due_date);\n};\n\nexport const date2string = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  } else if (isNaN(date.getFullYear())) {\n    return null;\n  }\n\n  let string = date.toLocaleDateString('ja-JP');\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(string)) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    string = year + '/' + month + '/' + day;\n  }\n  return string;\n};\n\nexport const adjustDateString = (date_str) => {\n  return date2string(new Date(date_str));\n};\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = date2string(start_date);\n  } else {\n    start_date_str = adjustDateString(created_at);\n  }\n  return start_date_str;\n};\n\nexport const getGanttDueDate = (start_date, due_date, created_at) => {\n  let due_date_str = null;\n  if (start_date != null && due_date != null) {\n    due_date_str = new Date(due_date);\n  } else {\n    due_date_str = new Date(created_at);\n  }\n  return due_date_str;\n};\n\nexport const getGanttUpdateDate = (created_at,updated_at) => {\n  let updated_date_str = null;\n  if (updated_at != null) {\n    updated_date_str = adjustDateString(updated_at);\n  } else {\n    updated_date_str = adjustDateString(created_at);\n  }\n  return updated_date_str;\n};\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n};\n","import ReactMarkdown from 'react-markdown';\nimport ReactDOMServer from 'react-dom/server';\nimport {\n  calculateStartDate,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper';\n\nexport const attachEvent = (gantt, props) => {\n  gantt.attachEvent('onTaskDblClick', (gantt_task_id, e) => {\n    props.openIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onTaskCreated', (gantt_task_id, e) => {\n    props.openNewIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onAfterTaskUpdate', (id, gantt_task) => {\n    updateParentTaskDate(gantt, gantt_task);\n    gantt.getChildren(gantt_task.id).map((child_gantt_task_id) => {\n      updateChildTaskDate(gantt, gantt_task, child_gantt_task_id);\n    });\n    props.updateIssueByAPI(gantt_task, gantt);\n  });\n\n  gantt.attachEvent('onBeforeTaskUpdate', (id, mode, gantt_task) => {\n  });\n\n  gantt.attachEvent('onAfterTaskMove', (id, parent) => {\n    let gantt_task = gantt.getTask(id);\n    if ('parent' in gantt_task) {\n      if (gantt_task.parent !== 0) {\n        gantt_task.parent = parent;\n        props.updateIssueByAPI(gantt_task, gantt);\n      }\n    }\n  });\n\n  // // Custom QuickInfo\n  // // https://docs.dhtmlx.com/gantt/desktop__quick_info.html\n  // gantt.attachEvent('onQuickInfo', (id) => {\n  //   let gantt_task = gantt.getTask(id);\n  //   gantt.locale.labels.detail_button = 'DETAIL';\n  //   gantt.$click.buttons.detail_button = (gantt_task_id) => {\n  //     props.openIssueAtBrowser(gantt_task_id);\n  //     return true;\n  //   };\n\n  //   gantt.ext.quickInfo.setContent({\n  //     header: {\n  //       title: '',\n  //       date: ReactDOMServer.renderToStaticMarkup().toString(),\n  //     },\n  //     content: ReactDOMServer.renderToStaticMarkup(\n  //       <div>\n  //         <h3>{gantt_task.text}</h3>\n  //         <ReactMarkdown>{gantt_task.description}</ReactMarkdown>\n  //       </div>\n  //     ).toString(),\n  //     buttons: ['detail_button'],\n  //   });\n  // });\n\n  // Changing the displayed range dynamically\n  // https://docs.dhtmlx.com/gantt/desktop__configuring_time_scale.html#range\n  gantt.attachEvent('onTaskDrag', function (id, mode, task, original) {\n    var state = gantt.getState();\n    var minDate = state.min_date,\n      maxDate = state.max_date;\n\n    var scaleStep =\n      gantt.date.add(new Date(), state.scale_step, state.scale_unit) -\n      new Date();\n\n    var showDate,\n      repaint = false;\n    if (mode == 'resize' || mode == 'move') {\n      if (Math.abs(task.start_date - minDate) < scaleStep) {\n        showDate = task.start_date;\n        repaint = true;\n      } else if (Math.abs(task.end_date - maxDate) < scaleStep) {\n        showDate = task.end_date;\n        repaint = true;\n      }\n\n      if (repaint) {\n        gantt.render();\n        gantt.showDate(showDate);\n      }\n    }\n  });\n};\n\nexport const updateParentTaskDate = (gantt, gantt_task) => {\n  if (!'parent' in gantt_task) {\n    return null;\n  }\n  if (gantt_task.parent === 0) {\n    return null;\n  }\n  let parent_gantt_task = gantt.getTask(gantt_task.parent).valueOf();\n  if (\n    parent_gantt_task.start_date.getTime() > gantt_task.start_date.getTime()\n  ) {\n    parent_gantt_task.start_date = gantt_task.start_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n  if (parent_gantt_task.end_date.getTime() < gantt_task.end_date.getTime()) {\n    parent_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n};\n\nexport const updateChildTaskDate = (gantt, gantt_task, child_gantt_task_id) => {\n  let child_gantt_task = gantt.getTask(child_gantt_task_id).valueOf();\n  const date_duration = child_gantt_task.duration.valueOf();\n  if (child_gantt_task.start_date.getTime() < gantt_task.start_date.getTime()) {\n    child_gantt_task.start_date = gantt_task.start_date;\n    child_gantt_task.end_date = new Date(\n      calculateDueDate(gantt_task.start_date, date_duration)\n    );\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n  if (child_gantt_task.end_date.getTime() > gantt_task.end_date.getTime()) {\n    child_gantt_task.start_date = new Date(\n      calculateStartDate(gantt_task.end_date, date_duration)\n    );\n    child_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n};\n","const zoom_level = {\n  levels: [\n    {\n      name: 'Days',\n      scale_height: 30,\n      min_column_width: 25,\n      scales: [\n        { unit: 'month', step: 1, format: '%n' },\n        { unit: 'day', step: 1, format: '%d' },\n      ],\n    },\n    {\n      name: 'Weeks',\n      scale_height: 30,\n      min_column_width: 70,\n      scales: [{ unit: 'week', step: 1, format: '%n/%d~' }],\n    },\n  ],\n};\n\nconst shortenDate = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  }\n  const m = ('00' + (date.getMonth() + 1)).slice(-2);\n  const d = ('00' + date.getDate()).slice(-2);\n  const shorten_date = m + '/' + d;\n  return shorten_date;\n};\n\nexport const setGanttConfig = (gantt) => {\n  gantt.config.xml_date = '%Y/%m/%d %H:%i';\n  gantt.config.order_branch = true;\n  gantt.config.order_branch_free = true;\n\n  gantt.config.keep_grid_width = true;\n  gantt.config.grid_resize = true;\n  gantt.config.open_tree_initially = true;\n  gantt.config.fit_tasks = true;\n\n  gantt.config.sort = true;\n\n  gantt.config.columns = [\n    {\n      name: 'id',\n      label: 'No.',\n      align: 'left',\n      tree: true,\n      width: '120',\n      template: (obj) => {\n        var befweek = new Date();\n        befweek.setDate(befweek.getDate() - 7);\n        if (obj.update < befweek.toLocaleDateString()) {\n          return (\n            obj.id +\n            \"<a title='There is no update for a week.'><span class='overdue'>i</span></a>\"\n          );\n        }\n        return obj.id;\n      },\n    },\n    {\n      name: 'start_date',\n      label: 'Start ',\n      align: 'center',\n      width: '60',\n      template: (obj) => {\n        return shortenDate(obj.start_date);\n      },\n    },\n    {\n      name: 'due_date',\n      label: 'Due ',\n      align: 'center',\n      width: '60',\n      template: (obj) => {\n        return shortenDate(obj.due_date);\n      },\n    },\n    { name: 'assignee', label: 'Assignee', align: 'center', width: '130' },\n    { name: 'add', label: '', width: '40' },\n  ];\n\n  gantt.plugins({\n    // quick_info: true,\n    drag_timeline: true,\n  });\n  gantt.showDate(new Date());\n  gantt.ext.zoom.init(zoom_level);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { attachEvent } from './GanttAttachEvent.js';\nimport { setGanttTemplates } from './GanttTemplates.js';\nimport { setGanttConfig } from './GanttConfig.js';\nimport { isValidVariable } from '../../functions/Common/CommonHelper.js';\n\nconst Gantt = (props) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setGanttConfig(gantt);\n    setGanttTemplates(gantt);\n    attachEvent(gantt, props);\n    gantt.init(containerRef.current);\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, []);\n\n  useEffect(() => {\n    if (props.zoom === 'Days') {\n      gantt.eachTask(function (task) {\n        task.$open = true;\n      });\n    } else {\n      gantt.eachTask(function (task) {\n        task.$open = false;\n      });\n    }\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, [props.zoom]);\n\n  useEffect(() => {\n    try {\n      if (isValidVariable(props.issue) && props.issue.length != 0) {\n        gantt.clearAll();\n        //gantt.parse(props.issue);  it's not work\n        props.issue.map((d) => {\n          gantt.addTask(d);\n        });\n        gantt.sort('due_date', false);\n        // gantt.render();\n      }\n    } catch (err) {\n      gantt.message({ text: err, type: 'error' });\n    }\n  }, [\n    props.issue,\n  ]);\n\n  return (\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}></div>\n  );\n};\n\nexport default Gantt;\n","import {\n  calculateDuration,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper.js';\n\nexport const setGanttTemplates = (gantt) => {\n  gantt.templates.timeline_cell_class = function (item, date) {\n    if (Object.prototype.toString.call(date) !== '[object Date]') {\n      return null;\n    }\n    var today = new Date();\n    if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth()) {\n      return 'today';\n    }\n    if (date.getDay() === 0 || date.getDay() === 6) {\n      return 'weekend';\n    }\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date < yesterday) {\n      return 'past_days';\n    }\n  };\n\n  gantt.templates.task_text = function (start, end, task) {\n    return task.text;\n  };\n\n  gantt.templates.task_class = function (start, end, task) {\n    if (task.progress == 1) {\n      return '';\n    }\n    if (task.progress < 0.01) {\n      if (start <= new Date()) {\n        return 'behind';\n      }\n    } else if (\n      new Date(\n        calculateDueDate(\n          start,\n          (calculateDuration(start, end) + 1) * task.progress\n        )\n      ) < new Date()\n    ) {\n      return 'behind';\n    }\n  };\n};\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import { isValidVariable, isValidIDName, isNumber } from './CommonHelper.js';\nimport yaml from 'js-yaml';\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const removeFirstSharp = (id_str) => {\n  if (id_str.length > 1 && /^#/.test(id_str)) {\n    id_str = id_str.substring(1);\n  }\n  return id_str;\n};\n\nexport const removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const getYamlPartFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  if (typeof description !== 'string') {\n    return null;\n  }\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  return str[0];\n};\n\nexport const parseYamlFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_part = getYamlPartFromDescription(description);\n  if (yaml_part === null) {\n    return null;\n  }\n\n  let yaml_struct = null;\n  try {\n    yaml_struct = yaml.load(yaml_part);\n  } catch (e) {\n    gantt.message({ text: 'failed load yaml' + yaml_part, type: 'error' });\n  }\n  return yaml_struct;\n};\n\nexport const getStringFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const string = yaml_struct[column_name];\n  if (typeof string !== 'string') {\n    return null;\n  }\n  return removeLastSpace(removeLastSpace(string));\n};\n\nexport const getNumberFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const number = yaml_struct[column_name];\n  if (typeof number !== 'number') {\n    return null;\n  }\n  return number;\n};\n\nexport const getDateFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const date = getStringFromDescriptionYaml(description, column_name);\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(date)) {\n    return null;\n  }\n  return new Date(date);\n};\n\nexport const replacePropertyInDescriptionString = (description, task) => {\n  if (description === null || task === null) {\n    return null;\n  }\n  let task_section = yaml.dump(task);\n  task_section =\n    `\\`\\`\\`yaml\n` +\n    task_section +\n    `\\`\\`\\``;\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    if (/```/.test(description)) {\n      return null;\n    }\n    return task_section + '\\n' + description;\n  }\n  const first_section = str[0];\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  const end_section = str[1];\n  if (first_section == null || end_section == null) {\n    return null;\n  }\n  return first_section + task_section + end_section;\n};\n\nexport const convertIDNameListToString = (list) => {\n  let string = '';\n  if (isValidVariable(list)) {\n    list.map((info) => {\n      if (isValidIDName(info) && isValidVariable(info.id)) {\n        string += info.id + ':' + info.name + ',';\n      }\n      return null;\n    });\n    return string;\n  }\n  return null;\n};\n\nexport const convertIDNamesStringToList = (string) => {\n  let list = [];\n  if (isValidVariable(string)) {\n    const split_string = string.split(',');\n    split_string.forEach((element, index, array) => {\n      if (index < split_string.length - 1) {\n        const info = element.split(':');\n        if (!isNaN(parseInt(info[0]))) {\n          const label = {\n            id: parseInt(info[0]),\n            name: info[1],\n          };\n          list.push(label);\n        }\n      }\n    });\n  } else {\n    list = [{ id: 0, name: '' }];\n  }\n  return list;\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n  isNumber,\n} from '../Common/CommonHelper.js';\nimport { removeFirstSharp } from '../Common/Parser.js';\n\nconst GitHubAPIURL = 'https://api.github.com/repos/';\nconst GitHubURL = 'https://github.com/';\n\nexport const isGitHubURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /github\\.com/.test(git_url);\n};\n\nexport const getGitHubNameSpaceFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitHubProjectFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues'\n  );\n};\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubAPIURLIssueFilterd = (git_url, labels, assignee) => {\n  if (\n    !isGitHubURL(git_url) ||\n    !isValidVariable(labels) ||\n    !isValidVariable(assignee)\n  ) {\n    return null;\n  }\n  let url_query_str = '?';\n  url_query_str += 'labels=';\n  labels.map((label) => {\n    if (isValidIDName(label)) {\n      url_query_str += label.name + ',';\n    }\n  });\n\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      url_query_str += '&assignee=' + assignee.name;\n    }\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues' +\n    url_query_str\n  );\n};\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/labels'\n  );\n};\n\nexport const getGitHubAPIURLCollaborators = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/collaborators'\n  );\n};\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  if (!isNumber(number)) {\n    number = removeFirstSharp(number);\n  }\n  if (number <= 0) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/new?assignees=&labels=&title=&body='\n  );\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n} from '../Common/CommonHelper.js';\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\n\nexport const isGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /gitlab\\.com/.test(git_url);\n};\n\nexport const getSelfHostingGitLabDomain = (git_url) => {\n  if (isGitHubURL(git_url)) {\n    return null;\n  }\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[2];\n  }\n  return null;\n};\n\nexport const getGitLabDomain = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let gitlab_domain = null;\n  const self_hosting_gitlab_domain = getSelfHostingGitLabDomain(git_url);\n  if (self_hosting_gitlab_domain !== null) {\n    gitlab_domain = 'https://' + self_hosting_gitlab_domain + '/';\n  }\n  return gitlab_domain;\n};\n\nexport const getGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url);\n};\n\nexport const getGitLabAPIURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url) + 'api/v4/';\n};\n\nexport const getGitLabNameSpaceFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitLabProjectFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const postFixToken = (token) => {\n  let post_fix_str = '?';\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    post_fix_str += 'access_token=' + token;\n  } \n  return post_fix_str;\n};\n\nexport const getGitLabAPIURLIssueFilterd = (\n  git_url,\n  token,\n  labels,\n  assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(labels)) {\n    return null;\n  }\n  if (!isValidIDName(assignee)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  if (isValidVariable(labels)) {\n    post_fix_str += '&labels=';\n    labels.map((label) => {\n      if (isValidIDName(label)) {\n        post_fix_str += label.name + ',';\n      }\n      return null;\n    });\n  }\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      post_fix_str += '&assignee_id=' + assignee.id;\n    }\n  }\n  post_fix_str += '&per_page=100&state=opened';\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues' +\n    post_fix_str\n  );\n};\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(number)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/' +\n    number +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  post_fix_str += '&per_page=100';\n\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/labels' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLMember = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'groups/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/members/all' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/-/issues/' +\n    number\n  );\n};\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/new?issue[description]='\n  );\n};\n","import {\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitHubAssignee = (issue_info) => {\n  if (issue_info.assignee !== null) {\n    return issue_info.assignee.login;\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getDateFromDescriptionYaml(description, 'start_date');\n  const due_date = getDateFromDescriptionYaml(description, 'due_date');\n\n  const gantt_task = {\n    id: '#' + issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(description, 'progress'),\n    assignee: getGitHubAssignee(issue_info),\n    parent: '#' + getNumberFromDescriptionYaml(description, 'parent'),\n    description: description,\n    update: getGanttUpdateDate(issue_info.created_at,issue_info.updated_at),\n  };\n  return gantt_task;\n};\n\nexport const updateGitHubDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => { \n  const start_date_str = adjustDateString(gantt_task.start_date)\n    .replace(/\\-/g, '/');\n  const due_date_str = calculateDueDate(\n    start_date_str,\n    gantt_task.duration\n  ).replace(/\\-/g, '/');\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  description = replacePropertyInDescriptionString(description, task);\n  return description;\n};\n","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterd,\n  getGitHubAPIURLLabel,\n  getGitHubAPIURLCollaborators,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n} from './GitHubHelper.js';\nimport { date2string, isValidVariable } from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitHubIssueFromAPI = async (git_url, issue_info) => {\n  return axios\n    .get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number))\n    .then((res) => {\n      const gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n      return gantt_task;\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getGitHubIssuesFromAPI = async (\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  return axios\n    .get(\n      getGitHubAPIURLIssueFilterd(git_url, selected_labels, selected_assignee)\n    )\n    .then((res) => {\n      const promise_list = [];\n      res.data.map((issue_info) => {\n        promise_list.push(getGitHubIssueFromAPI(git_url, issue_info));\n      });\n      return Promise.all(promise_list);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\n    let labels = [];\n    res.data.map((info) => {\n      labels.push({ id: info.id, name: info.name });\n      return null;\n    });\n    return labels;\n  });\n};\n\nexport const setGitHubMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    return axios\n      .get(getGitHubAPIURLCollaborators(git_url), {\n        headers: { Authorization: `token ${token}` },\n        data: {},\n      })\n      .then((res) => {\n        let members = [];\n        res.data.map((info) => {\n          members.push({ id: info.id, name: info.login });\n          return null;\n        });\n        return members;\n      });\n  } else {\n    console.warn('token is not valid!');\n  }\n};\n\nexport const updateGitHubIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  const url = getGitHubAPIURLIssuebyNumber(\n    git_url,\n    removeFirstSharp(gantt_task.id)\n  );\n  axios\n    .get(url)\n    .then((res) => {\n      const issue_info = res.data;\n      if (\n        updateGitHubDescriptionStringFromGanttTask(\n          issue_info.body,\n          gantt_task\n        ) == null\n      ) {\n        gantt.message({\n          text: 'failed update issue. ' + gantt_task.text,\n          type: 'error',\n        });\n      } else {\n        if (gantt_task !== generateGanttTaskFromGitHub(issue_info.body, issue_info)) {\n          axios\n            .post(\n              url,\n              {\n                body: updateGitHubDescriptionStringFromGanttTask(\n                  issue_info.body,\n                  gantt_task\n                ),\n              },\n              {\n                headers: {\n                  Authorization: `token ${token}`,\n                },\n              }\n            )\n            .then((res) => {\n              gantt.message({\n                text: 'success update issue.  ' + gantt_task.id,\n              });\n            })\n            .catch((err) => {\n              gantt.message({\n                text: 'failed update GitHub issue. check your token.' + err,\n                type: 'error',\n              });\n            });\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitHub issue. check your url.' + err,\n        type: 'error',\n      });\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(\n    getGitHubURLIssuebyNumber(git_url, removeFirstSharp(gantt_task_id)),\n    '_blank'\n  );\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  const due_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import {\n  removeFirstSharp,\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  isValidVariable,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitLabAssignee = (issue_info) => {\n  if (isValidVariable(issue_info) && 'assignee' in issue_info) {\n    if (isValidVariable(issue_info.assignee) && 'name' in issue_info.assignee) {\n      return issue_info.assignee.name;\n    }\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getDateFromDescriptionYaml(\n    issue_info.description,\n    'start_date'\n  );\n  const due_date = adjustDateString(issue_info.due_date);\n  const gantt_task = {\n    id: '#' + issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(issue_info.description, 'progress'),\n    assignee: getGitLabAssignee(issue_info),\n    description: issue_info.description,\n    update: getGanttUpdateDate(issue_info.created_at,issue_info.updated_at),\n  };\n  let parent = getNumberFromDescriptionYaml(issue_info.description, 'parent');\n  if (parent !== null) {\n    if (parent !== 0) {\n      gantt_task.parent = '#' + parent;\n    }\n  }\n  return gantt_task;\n};\n\nexport const updateGitLabDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => {\n  const start_date_str = adjustDateString(gantt_task.start_date).replace(\n    /\\-/g,\n    '/'\n  );\n  const task = {\n    start_date: start_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  return replacePropertyInDescriptionString(description, task);\n};\n","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterd,\n  getGitLabAPIURLLabel,\n  getGitLabAPIURLMember,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n} from './GitLabHelper.js';\nimport {\n  adjustDateString,\n  calculateDueDate,\n  date2string,\n} from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitLabIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  assignee\n) => {\n  return axios\n    .get(getGitLabAPIURLIssueFilterd(git_url, token, selected_labels, assignee))\n    .then((res) => {\n      let data = [];\n      res.data.map((issue_info) => {\n        const gantt_task = generateGanttTaskFromGitLab(issue_info);\n        data.push(gantt_task);\n        return null;\n      });\n      return data;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLLabel(git_url, token))\n    .then((res) => {\n      let labels = [];\n      res.data.map((lebel_info) => {\n        labels.push(lebel_info);\n        return null;\n      });\n      return labels;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabMemberListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLMember(git_url, token))\n    .then((res) => {\n      let members = [];\n      res.data.map((info) => {\n        members.push({ id: info.id, name: info.name });\n        return null;\n      });\n      return members;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const updateGitLabIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  return axios\n    .get(\n      getGitabAPIURLIssuebyNumber(\n        git_url,\n        token,\n        removeFirstSharp(gantt_task.id)\n      )\n    )\n    .then((res) => {\n      const issue_info = res.data;\n      if (gantt_task !== generateGanttTaskFromGitLab(issue_info)) {\n        if (\n          parseInt(issue_info.iid) === parseInt(removeFirstSharp(gantt_task.id))\n        ) {\n          let description = updateGitLabDescriptionStringFromGanttTask(\n            issue_info.description,\n            gantt_task\n          );\n          if (description == null) {\n            gantt.message({\n              text: 'failed update issue. ' + gantt_task.text,\n              type: 'error',\n            });\n          } else {\n            description = encodeURIComponent(description);\n            const start_date_str = adjustDateString(gantt_task.start_date);\n            const due_date_str = calculateDueDate(\n              start_date_str,\n              gantt_task.duration\n            );\n            const put_url =\n              getGitabAPIURLIssuebyNumber(\n                git_url,\n                token,\n                removeFirstSharp(gantt_task.id)\n              ) +\n              '&description=' +\n              description +\n              '&due_date=' +\n              due_date_str;\n            return axios\n              .put(put_url)\n              .then((res) => {\n                gantt.message({\n                  text: 'success update issue.  ' + gantt_task.id,\n                });\n              })\n              .catch((err) => {\n                console.error(err);\n                return Promise.reject(err);\n              });\n          }\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitLab issue. check your token.',\n        type: 'error',\n      });\n    });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(\n    getGitLabURLIssuebyNumber(git_url, removeFirstSharp(id)),\n    '_blank'\n  );\n};\n\nexport const openGitLabNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n  setGitHubMemberListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n  setGitLabMemberListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\nimport { isValidURL } from '../Common/CommonHelper.js';\n\nexport const getIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  selected_assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return getGitHubIssuesFromAPI(git_url, selected_labels, selected_assignee);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return getGitLabIssuesFromAPI(\n      git_url,\n      token,\n      selected_labels,\n      selected_assignee\n    );\n  }\n};\n\nexport const setLabelListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubLabelListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabLabelListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const setMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubMemberListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabMemberListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const updateIssueByAPI = (gantt_task, token, gantt, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return updateGitHubIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return updateGitLabIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  }\n};\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task, git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabNewIssueAtBrowser(gantt_task, git_url);\n  }\n};\n","import { bake_cookie } from 'sfcookies';\nimport {\n  convertIDNamesStringToList,\n  convertIDNameListToString,\n  removeLastSlash,\n  removeLastSpace,\n} from '../functions/Common/Parser.js';\nimport {\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../functions/Common/IssueAPI.js';\nimport { isValidVariable } from '../functions/Common/CommonHelper.js';\nimport { isGitHubURL } from '../functions/GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../functions/GitLab/GitLabURLHelper.js';\n\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const initialState = {\n  currentZoom: 'Days',\n  update: 0,\n  git_url: '',\n  token: 'Tokens that have not yet been entered',\n  labels: [],\n  selected_labels: [],\n  member_list: [],\n  selected_assignee: {},\n  issue: [],\n  issue_columns: [],\n};\n\nexport const reducerFunc = (state, action) => {\n  switch (action.type) {\n    case 'zoomChange':\n      return { ...state, currentZoom: action.value };\n    case 'gitURLChange':\n      return {\n        ...state,\n        git_url: handleGitURLChange(\n          action.value.props,\n          action.value.git_url,\n          state.selected_labels\n        ),\n      };\n    case 'tokenChange':\n      return { ...state, token: handleTokenChange(action.value) };\n    case 'labelChange':\n      return { ...state, labels: action.value };\n    case 'selectedLabelsChange':\n      return {\n        ...state,\n        selected_labels: handleSelectedLabelsChange(\n          action.value.props,\n          state.git_url,\n          action.value.selected_labels,\n          state.selected_assignee\n        ),\n      };\n    case 'memberListChange':\n      return { ...state, member_list: handleMemberListChange(action.value) };\n    case 'selectedAssigneeChange':\n      return {\n        ...state,\n        selected_assignee: handleSelectedAssigneeChange(\n          action.value.props,\n          state.git_url,\n          state.selected_labels,\n          action.value.selected_assignee\n        ),\n      };\n    case 'updateClick':\n      return { ...state, update: state.update + 1 };\n    case 'openIssueAtBrowser':\n      return handleOpenIssueAtBrowser(state, action);\n    case 'openNewIssueAtBrowser':\n      return handleOpenNewIssueAtBrowser(state, action);\n    case 'updateIssueByAPI':\n      return handleUpdateIssueByAPI(state, action);\n    case 'setIssue':\n      return { ...state, issue: action.value };\n      \n    case 'setStateFromURLQueryString':\n      return setStateFromURLQueryString(\n        state,\n        action.value.props,\n        action.value.setValue\n      );\n    default:\n      return state;\n  }\n};\n\nexport const handleOpenIssueAtBrowser = (state, action) => {\n  openIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleOpenNewIssueAtBrowser = (state, action) => {\n  openNewIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleUpdateIssueByAPI = (state, action) => {\n  updateIssueByAPI(\n    action.value.gantt_task,\n    state.token,\n    action.value.gantt,\n    state.git_url\n  );\n  return state;\n};\n\nexport const handleGitURLChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  git_url = removeLastSlash(removeLastSpace(git_url));\n  if (isGitHubURL(git_url)) {\n    gantt.message({ text: 'Access GitHub.com' });\n  } else if (isGitLabURL(git_url)) {\n    gantt.message({ text: 'Access GitLab.com' });\n  } else if (getSelfHostingGitLabDomain(git_url) !== null) {\n    gantt.message({ text: 'Access Maybe GitLab.self-host' });\n  } else {\n    gantt.message({ text: 'Not a valid URL.', type: 'error' });\n    return null;\n  }\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return git_url;\n};\n\nexport const handleTokenChange = (token) => {\n  bake_cookie('git_token', token);\n  return token;\n};\n\nexport const handleSelectedLabelsChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_labels;\n};\n\nexport const handleMemberListChange = (\n  member_list\n) => {\n  if (isValidVariable(member_list)) {\n    return member_list;\n  } else {\n    return [];\n  }\n};\n\nexport const handleSelectedAssigneeChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_assignee;\n};\n\nexport const setURLQuery = (props, git_url, selected_labels, selected_assignee) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertIDNameListToString(selected_labels));\n  params.set('assignee', convertIDNameListToString([selected_assignee]));\n  props.history.push({\n    search: params.toString(),\n  });\n  return null;\n};\n\nexport const setStateFromURLQueryString = (state, props, setValue) => {\n  const params = new URLSearchParams(props.location.search);\n  state.git_url = params.get('giturl');\n\n  const selected_labels = convertIDNamesStringToList(params.get('labels'));\n  if (isValidVariable(selected_labels[0])) {\n    if ('name' in selected_labels[0]) {\n      if (selected_labels[0].name !== '') {\n        state.selected_labels = selected_labels;\n      }\n    }\n  }\n\n  const selected_assignee_list = convertIDNamesStringToList(\n    params.get('assignee')\n  );\n  if (isValidVariable(selected_assignee_list)) {\n    state.selected_assignee = selected_assignee_list[0];\n  }\n  setValue('git_url', state.git_url);\n  return state;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Toolbar from './components/Toolbar';\nimport Gantt from './components/Gantt';\nimport { read_cookie } from 'sfcookies';\nimport { withRouter } from 'react-router-dom';\nimport { initialState, reducerFunc } from './State/Reducer.js';\nimport {\n  getIssuesFromAPI,\n  setLabelListOfRepoFromAPI,\n  setMemberListOfRepoFromAPI,\n} from './functions/Common/IssueAPI.js';\nimport { gantt } from 'dhtmlx-gantt';\n\nconst App = (props) => {\n  const [state, dispatch] = useReducer(reducerFunc, initialState);\n  const { register, setValue } = useForm({ git_url: '', token: '' });\n\n  useEffect(() => {\n    setValue('token', read_cookie('git_token'));\n    dispatch({ type: 'tokenChange', value: read_cookie('git_token') });\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: 'setStateFromURLQueryString',\n      value: { props: props, setValue: setValue },\n    });\n  }, [props.location]);\n\n  useEffect(() => {\n    setLabelListOfRepoFromAPI(state.git_url, state.token)\n      .then((labels) => {\n        dispatch({ type: 'labelChange', value: labels });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n    setMemberListOfRepoFromAPI(state.git_url, state.token)\n      .then((members) => {\n        dispatch({ type: 'memberListChange', value: members });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n  }, [state.git_url, state.token, state.selected_assignee]);\n\n  useEffect(() => {\n    //dispatch({ type: 'getIssueByAPI' });\n    getIssuesFromAPI(\n      state.git_url,\n      state.token,\n      state.selected_labels,\n      state.selected_assignee\n    )\n      .then((issues) => {\n        dispatch({ type: 'setIssue', value: issues });\n      })\n      .catch((err) => {\n        console.log('error');\n      });\n  }, [\n    state.git_url,\n    state.token,\n    state.selected_labels,\n    state.selected_assignee,\n    state.update,\n  ]);\n\n  return (\n    <>\n      <div className=\"zoom-bar\">\n        <Toolbar\n          zoom={state.currentZoom}\n          onZoomChange={(zoom) => dispatch({ type: 'zoomChange', value: zoom })}\n          onGitURLChange={(git_url) =>\n            dispatch({\n              type: 'gitURLChange',\n              value: { props: props, git_url: git_url },\n            })\n          }\n          token={state.token}\n          onTokenChange={(token) =>\n            dispatch({ type: 'tokenChange', value: token })\n          }\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\n          labels={state.labels}\n          selected_labels={state.selected_labels}\n          onSelectedLabelChange={(selected_labels) =>\n            dispatch({\n              type: 'selectedLabelsChange',\n              value: { props: props, selected_labels: selected_labels },\n            })\n          }\n          member_list={state.member_list}\n          selected_assignee={state.selected_assignee}\n          onSelectedAssigneeChange={(selected_assignee) =>\n            dispatch({\n              type: 'selectedAssigneeChange',\n              value: { props: props, selected_assignee: selected_assignee },\n            })\n          }\n          register={register}\n        />\n      </div>\n      <div className=\"gantt-container\">\n        <Gantt\n          zoom={state.currentZoom}\n          git_url={state.git_url}\n          token={state.token}\n          selected_labels={state.selected_labels}\n          selected_assignee={state.selected_assignee}\n          issue={state.issue}\n          update={state.update}\n          openIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openIssueAtBrowser', value: gantt_task_id })\n          }\n          openNewIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openNewIssueAtBrowser', value: gantt_task_id })\n          }\n          updateIssueByAPI={(gantt_task, gantt) =>\n            dispatch({\n              type: 'updateIssueByAPI',\n              value: { gantt_task: gantt_task, gantt: gantt },\n            })\n          }\n        />\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={(props) => <App />} />\n  </Router>,\n  document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}