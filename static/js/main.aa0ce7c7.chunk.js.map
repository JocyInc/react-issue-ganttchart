{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","components/Gantt/GanttConfig.js","components/Gantt/Gantt.js","components/Gantt/GanttTemplates.js","components/Gantt/GanttAttachEvent.js","components/Gantt/index.js","functions/State/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","marginRight","props","classes","noValidate","TextField","className","required","placeholder","label","style","onChange","e","onGitURLChange","target","value","inputRef","register","name","type","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","Autocomplete","size","member_list","getOptionLabel","option","selected_assignee","noOptionsText","assignee","onSelectedAssigneeChange","renderInput","params","variant","ButtonGroup","height","Button","onClick","onZoomChange","IconButton","color","onUpdateClick","window","open","Toolbar","isValidVariable","variable","Array","isArray","length","isValidIDName","id_name","isValidURL","url","test","orgRound","base","Math","round","calculateDuration","start_date","due_date","start_date_moment","moment","diff","calculateDueDate","start_date_str","duration","Date","add","toDate","date2string","date","string","toLocaleDateString","getFullYear","getMonth","getDate","adjustDateString","date_str","getGanttStartDate","created_at","getGanttDueDate","getGanttDuration","removeFirstSharp","id_str","substring","removeLastSpace","slice","parseYamlFromDescription","description","yaml_part","str","split","getYamlPartFromDescription","yaml_struct","yaml","load","gantt","message","text","getNumberFromDescriptionYaml","column_name","number","getDateFromDescriptionYaml","getStringFromDescriptionYaml","replacePropertyInDescriptionString","task","task_section","dump","first_section","convertIDNameListToString","list","map","info","id","convertIDNamesStringToList","split_string","forEach","element","index","array","isNaN","parseInt","push","GitHubAPIURL","GitHubURL","isGitHubURL","git_url","getGitHubNameSpaceFromGitURL","split_git_url","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","getGitHubAPIURLIssueFilterd","url_query_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","getGitHubURLIssuebyNumber","n","Number","isFinite","isGitLabURL","getSelfHostingGitLabDomain","getGitLabDomain","gitlab_domain","self_hosting_gitlab_domain","getGitLabURL","getGitLabAPIURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterd","getGitabAPIURLIssuebyNumber","getGitLabAPIURLLabel","getGitLabAPIURLMember","getGitHubAssignee","issue_info","login","generateGanttTaskFromGitHub","title","progress","parent","updateGitHubDescriptionStringFromGanttTask","gantt_task","replace","getGitHubIssuesFromAPI","gantt_parse","a","axios","get","then","res","data","body","addTask","sort","catch","err","console","log","setGitHubLabelListOfRepoFromAPI","setLabels","setGitHubMemberListOfRepoFromAPI","headers","Authorization","warn","openGitHubNewIssueAtBrowser","encodeURIComponent","getGitHubURLNewIssueWithTemplate","getGitLabAssignee","generateGanttTaskFromGitLab","iid","getGitLabIssuesFromAPI","links","error","setGitLabLabelListOfRepoFromAPI","lebel_info","setGitLabMemberListOfRepoFromAPI","updateGitLabIssueFromGanttTask","updateGitLabDescriptionStringFromGanttTask","due_date_str","put_url","put","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","setLabelListOfRepoFromAPI","setMemberListOfRepoFromAPI","setMemberList","updateIssueByAPI","post","updateGitHubIssueFromGanttTask","openIssueAtBrowser","gantt_task_id","openGitHubIssueAtBrowser","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","shortenDate","Gantt","containerRef","useRef","useEffect","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","open_tree_initially","fit_tasks","columns","template","getWBSCode","align","tree","obj","plugins","quick_info","drag_timeline","ext","zoom","init","templates","timeline_cell_class","item","getDay","yesterday","setDate","rightside_text","start","end","task_text","task_class","setGanttTemplates","attachEvent","openNewIssueAtBrowser","getTask","locale","detail_button","$click","buttons","quickInfo","setContent","header","ReactDOMServer","renderToStaticMarkup","toString","content","mode","original","showDate","state","getState","minDate","min_date","maxDate","max_date","scaleStep","scale_step","scale_unit","repaint","abs","end_date","render","current","setLevel","eachTask","$open","clearAll","parse","update","ref","initialState","currentZoom","reducerFunc","action","handleGitURLChange","handleTokenChange","handleSelectedLabelsChange","handleSelectedAssigneeChange","handleOpenIssueAtBrowser","handleOpenNewIssueAtBrowser","handleUpdateIssueByAPI","setStateFromURLQueryString","setValue","setURLQuery","bake_cookie","URLSearchParams","location","search","set","history","selected_assignee_list","withRouter","useReducer","dispatch","useForm","read_cookie","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa0ce7c7.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst Toolbar = (props) => {\n  const { classes } = props;\n  return (\n    <form noValidate>\n      <TextField\n        className={classes.root}\n        required\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n        label=\"Git Repository URL\"\n        style={{ width: '25%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onGitURLChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"git_url\"\n      />\n      <TextField\n        className={classes.root}\n        type=\"password\"\n        placeholder=\"Access Token\"\n        label=\"Access Token\"\n        style={{ width: '10%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onTokenChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"token\"\n      />\n      <Multiselect\n        className={classes.root}\n        options={props.labels}\n        selectedValues={props.selected_labels}\n        onSelect={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        onRemove={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        displayValue=\"name\"\n        style={selector_style}\n        placeholder=\"filter by labels\"\n        hidePlaceholder=\"false\"\n        emptyRecordMsg=\"No Labels\"\n        closeIcon=\"cancel\"\n      />\n      <Autocomplete\n        className={classes.root}\n        size=\"small\"\n        options={props.member_list}\n        getOptionLabel={(option) => option.name}\n        value={props.selected_assignee}\n        noOptionsText=\"Enter the token.\"\n        onChange={(e, assignee) => {\n          props.onSelectedAssigneeChange(assignee);\n        }}\n        style={{\n          width: '15%',\n          verticalAlign: 'middle',\n          display: 'inline-block',\n          marginRight: '15px',\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            className={classes.root}\n            label=\"Assignee\"\n            variant=\"standard\"\n          />\n        )}\n      />\n      <ButtonGroup size=\"small\" style={{ height: '34px' }}>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Weeks');\n          }}\n        >\n          Weeks\n        </Button>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Days');\n          }}\n        >\n          Days\n        </Button>\n      </ButtonGroup>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <CachedIcon\n          onClick={(e) => {\n            props.onUpdateClick();\n          }}\n        />\n      </IconButton>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <GitHubIcon onClick={() => window.open('https://github.com/lamact/react-issue-ganttchart')} />\n      </IconButton>\n    </form>\n  );\n};\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      fontSize: '13px',\n      marginRight: '4px',\n    },\n  },\n});\n\nconst selector_style = {\n  multiselectContainer: {\n    width: '27%',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    padding: '4px',\n    alignItems: 'flex-end',\n  },\n  chips: {\n    background: 'light blue',\n    fontSize: '15px',\n  },\n  searchBox: {\n    border: 'none',\n  },\n};\n\nexport default withStyles(styles)(Toolbar);\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import moment from 'moment';\n\nexport const isValidVariable = (variable) => {\n  if (\n    variable !== null &&\n    variable !== [] &&\n    variable !== void 0 &&\n    variable !== ''\n  ) {\n    return true;\n  }\n  if (Array.isArray(variable)) {\n    return variable.length > 0;\n  }\n  return false;\n};\n\nexport const validVariable = (variable) => {\n  if (isValidVariable(variable)) {\n    return variable;\n  } else {\n    return '';\n  }\n};\n\nexport const isValidIDName = (id_name) => {\n  return isValidVariable(id_name) && 'id' in id_name && 'name' in id_name;\n};\n\nexport const isValidURL = (url) => {\n  if (!isValidVariable(url)) {\n    return false;\n  }\n  return /https:\\/\\//.test(url);\n};\n\nexport const isNumber = (n) => {\n  if (typeof n === 'number' && Number.isFinite(n)) {\n    return true;\n  }\n  return false;\n};\n\nexport const orgRound = (value, base) => {\n  return Math.round(value / base) * base;\n};\n\nexport const calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date, 'YYYY/MM/DD');\n  const due_date_moment = moment(due_date, 'YYYY/MM/DD');\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n};\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date, 'YYYY/MM/DD')\n    .add(duration - 1, 'd')\n    .toDate();\n  return date2string(due_date);\n};\n\nexport const date2string = (date) => {\n  let string = date.toLocaleDateString('ja-JP');\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(string)) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    string = year + '/' + month + '/' + day;\n  }\n  return string;\n};\n\nexport const adjustDateString = (date_str) => {\n  return date2string(new Date(date_str));\n};\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = date2string(start_date);\n  } else {\n    start_date_str = adjustDateString(created_at);\n  }\n  return start_date_str;\n};\n\nexport const getGanttDueDate = (start_date, due_date, created_at) => {\n  let due_date_str = null;\n  if (start_date != null && due_date != null) {\n    due_date_str = new Date(due_date);\n  } else {\n    due_date_str = new Date(created_at);\n  }\n  return due_date_str;\n};\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n};\n","import { isValidVariable, isValidIDName, isNumber } from './CommonHelper.js';\nimport yaml from 'js-yaml';\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const removeFirstSharp = (id_str) => {\n  if (id_str.length > 1 && /^#/.test(id_str)) {\n    id_str = id_str.substring(1);\n  }\n  return id_str;\n};\n\nexport const removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const getYamlPartFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  if (typeof description !== 'string') {\n    return null;\n  }\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  return str[0];\n};\n\nexport const parseYamlFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_part = getYamlPartFromDescription(description);\n  if (yaml_part === null) {\n    return null;\n  }\n\n  let yaml_struct = null;\n  try {\n    yaml_struct = yaml.load(yaml_part);\n  } catch (e) {\n    gantt.message({ text: 'failed load yaml' + yaml_part, type: 'error' });\n  }\n  return yaml_struct;\n};\n\nexport const getStringFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const string = yaml_struct[column_name];\n  if (typeof string !== 'string') {\n    return null;\n  }\n  return removeLastSpace(removeLastSpace(string));\n};\n\nexport const getNumberFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const number = yaml_struct[column_name];\n  if (typeof number !== 'number') {\n    return null;\n  }\n  return number;\n};\n\nexport const getDateFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const date = getStringFromDescriptionYaml(description, column_name);\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(date)) {\n    return null;\n  }\n  return new Date(date);\n};\n\nexport const replacePropertyInDescriptionString = (description, task) => {\n  if (description === null || task === null) {\n    return null;\n  }\n  let task_section = yaml.dump(task);\n  task_section =\n    `\\`\\`\\`yaml\n` +\n    task_section +\n    `\\`\\`\\``;\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    if (/```/.test(description)) {\n      return null;\n    }\n    return task_section + '\\n' + description;\n  }\n  const first_section = str[0];\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  const end_section = str[1];\n  return first_section + task_section + end_section;\n};\n\nexport const convertIDNameListToString = (list) => {\n  let string = '';\n  if (isValidVariable(list)) {\n    list.map((info) => {\n      if (isValidIDName(info) && isValidVariable(info.id)) {\n        string += info.id + ':' + info.name + ',';\n      }\n      return null;\n    });\n    return string;\n  }\n  return null;\n};\n\nexport const convertIDNamesStringToList = (string) => {\n  let list = [];\n  if (isValidVariable(string)) {\n    const split_string = string.split(',');\n    split_string.forEach((element, index, array) => {\n      if (index < split_string.length - 1) {\n        const info = element.split(':');\n        if (!isNaN(parseInt(info[0]))) {\n          const label = {\n            id: parseInt(info[0]),\n            name: info[1],\n          };\n          list.push(label);\n        }\n      }\n    });\n  } else {\n    list = [{ id: 0, name: '' }];\n  }\n  return list;\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n  isNumber,\n} from '../Common/CommonHelper.js';\nimport { removeFirstSharp } from '../Common/Parser.js';\n\nconst GitHubAPIURL = 'https://api.github.com/repos/';\nconst GitHubURL = 'https://github.com/';\n\nexport const isGitHubURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /github\\.com/.test(git_url);\n};\n\nexport const getGitHubNameSpaceFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitHubProjectFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues'\n  );\n};\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubAPIURLIssueFilterd = (git_url, labels, assignee) => {\n  if (\n    !isGitHubURL(git_url) ||\n    !isValidVariable(labels) ||\n    !isValidVariable(assignee)\n  ) {\n    return null;\n  }\n  let url_query_str = '?';\n  url_query_str += 'labels=';\n  labels.map((label) => {\n    if (isValidIDName(label)) {\n      url_query_str += label.name + ',';\n    }\n  });\n\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      url_query_str += '&assignee=' + assignee.name;\n    }\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues' +\n    url_query_str\n  );\n};\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/labels'\n  );\n};\n\nexport const getGitHubAPIURLCollaborators = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/collaborators'\n  );\n};\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  if (!isNumber(number)) {\n    number = removeFirstSharp(number);\n  }\n  if (number <= 0) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/new?assignees=&labels=&title=&body='\n  );\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n} from '../Common/CommonHelper.js';\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\n\nexport const isGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /gitlab\\.com/.test(git_url);\n};\n\nexport const getSelfHostingGitLabDomain = (git_url) => {\n  if (isGitHubURL(git_url)) {\n    return null;\n  }\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[2];\n  }\n  return null;\n};\n\nexport const getGitLabDomain = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let gitlab_domain = null;\n  const self_hosting_gitlab_domain = getSelfHostingGitLabDomain(git_url);\n  if (self_hosting_gitlab_domain !== null) {\n    gitlab_domain = 'https://' + self_hosting_gitlab_domain + '/';\n  }\n  return gitlab_domain;\n};\n\nexport const getGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url);\n};\n\nexport const getGitLabAPIURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url) + 'api/v4/';\n};\n\nexport const getGitLabNameSpaceFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitLabProjectFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const postFixToken = (token) => {\n  let post_fix_str = '?';\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    post_fix_str += 'access_token=' + token;\n  } \n  return post_fix_str;\n};\n\nexport const getGitLabAPIURLIssueFilterd = (\n  git_url,\n  token,\n  labels,\n  assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(labels)) {\n    return null;\n  }\n  if (!isValidIDName(assignee)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  if (isValidVariable(labels)) {\n    post_fix_str += '&labels=';\n    labels.map((label) => {\n      if (isValidIDName(label)) {\n        post_fix_str += label.name + ',';\n      }\n      return null;\n    });\n  }\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      post_fix_str += '&assignee_id=' + assignee.id;\n    }\n  }\n  post_fix_str += '&per_page=100&state=opened';\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues' +\n    post_fix_str\n  );\n};\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(number)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/' +\n    number +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  post_fix_str += '&per_page=100';\n\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/labels' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLMember = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'groups/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/members/all' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/-/issues/' +\n    number\n  );\n};\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/new?issue[description]='\n  );\n};\n","import {\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n} from '../Common/CommonHelper.js';\n\nconst getGitHubAssignee = (issue_info) => {\n  if (issue_info.assignee !== null) {\n    return issue_info.assignee.login;\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getDateFromDescriptionYaml(description, 'start_date');\n  const due_date = getDateFromDescriptionYaml(description, 'due_date');\n\n  const gantt_task = {\n    id: '#' + issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(description, 'progress'),\n    assignee: getGitHubAssignee(issue_info),\n    parent: '#' + getNumberFromDescriptionYaml(description, 'parent'),\n    description: description,\n  };\n  return gantt_task;\n};\n\nexport const updateGitHubDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => { \n  const start_date_str = adjustDateString(gantt_task.start_date)\n    .replace(/\\-/g, '/');\n  const due_date_str = calculateDueDate(\n    start_date_str,\n    gantt_task.duration\n  ).replace(/\\-/g, '/');\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  description = replacePropertyInDescriptionString(description, task);\n  return description;\n};\n","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterd,\n  getGitHubAPIURLLabel,\n  getGitHubAPIURLCollaborators,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n} from './GitHubHelper.js';\nimport { date2string, isValidVariable } from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitHubIssuesFromAPI = async (\n  gantt_parse,\n  gantt,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  axios\n    .get(\n      getGitHubAPIURLIssueFilterd(git_url, selected_labels, selected_assignee)\n    )\n    .then((res) => {\n      res.data.map((issue_info) => {\n        axios\n          .get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number))\n          .then((res) => {\n            const gantt_task = generateGanttTaskFromGitHub(\n              res.data.body,\n              issue_info\n            );\n            gantt.addTask(gantt_task);\n            gantt.sort('due_date', false);\n          });\n        return null;\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      // gantt.message({\n      //   text: 'failed get GitHub issue. check your url or token.',\n      //   type: 'error',\n      // });\n    });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (\n  setLabels,\n  git_url,\n  token\n) => {\n  axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\n    let list = [];\n    res.data.map((info) => {\n      list.push({ id: info.id, name: info.name });\n      return null;\n    });\n    setLabels(list);\n  });\n};\n\nexport const setGitHubMemberListOfRepoFromAPI = async (\n  setLabels,\n  git_url,\n  token\n) => {\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    axios\n      .get(getGitHubAPIURLCollaborators(git_url), {\n        headers: { Authorization: `token ${token}` },\n        data: {},\n      })\n      .then((res) => {\n        let list = [];\n        res.data.map((info) => {\n          list.push({ id: info.id, name: info.login });\n          return null;\n        });\n        setLabels(list);\n      });\n  } else {\n    console.warn('token is not valid!');\n  }\n};\n\nexport const updateGitHubIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  const url = getGitHubAPIURLIssuebyNumber(\n    git_url,\n    removeFirstSharp(gantt_task.id)\n  );\n  axios\n    .get(url)\n    .then((res) => {\n      axios\n        .post(\n          url,\n          {\n            body: updateGitHubDescriptionStringFromGanttTask(\n              res.data.body,\n              gantt_task\n            ),\n          },\n          {\n            headers: {\n              Authorization: `token ${token}`,\n            },\n          }\n        )\n        .then((res) => {\n          gantt.message({ text: 'success update issue.  ' + gantt_task.id });\n        })\n        .catch((err) => {\n          gantt.message({\n            text: 'failed update GitHub issue. check your token.',\n            type: 'error',\n          });\n          getGitHubIssuesFromAPI(gantt, git_url);\n        });\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitHub issue. check your url.',\n        type: 'error',\n      });\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(\n    getGitHubURLIssuebyNumber(git_url, removeFirstSharp(gantt_task_id)),\n    '_blank'\n  );\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  const due_date_str = date2string(new Date());\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import {\n  removeFirstSharp,\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\nimport {\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  isValidVariable,\n} from '../Common/CommonHelper.js';\n\nconst getGitLabAssignee = (issue_info) => {\n  if (isValidVariable(issue_info) && 'assignee' in issue_info) {\n    if (isValidVariable(issue_info.assignee) && 'name' in issue_info.assignee) {\n      return issue_info.assignee.name;\n    }\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getDateFromDescriptionYaml(\n    issue_info.description,\n    'start_date'\n  );\n  const due_date = adjustDateString(issue_info.due_date);\n  const gantt_task = {\n    id: '#' + issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(issue_info.description, 'progress'),\n    assignee: getGitLabAssignee(issue_info),\n    description: issue_info.description,\n  };\n  let parent = getNumberFromDescriptionYaml(issue_info.description, 'parent');\n  if (parent !== null) {\n    if (parent !== 0) {\n      gantt_task.parent = '#' + parent;\n    }\n  }\n  return gantt_task;\n};\n\nexport const updateGitLabDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => {\n  const start_date_str = adjustDateString(gantt_task.start_date).replace(\n    /\\-/g,\n    '/'\n  );\n  const task = {\n    start_date: start_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  return replacePropertyInDescriptionString(description, task);\n};\n","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterd,\n  getGitLabAPIURLLabel,\n  getGitLabAPIURLMember,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n} from './GitLabHelper.js';\nimport {\n  adjustDateString,\n  calculateDueDate,\n  date2string,\n} from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitLabIssuesFromAPI = async (\n  gantt_parse,\n  gantt,\n  git_url,\n  token,\n  selected_labels,\n  assignee\n) => {\n  axios\n    .get(getGitLabAPIURLIssueFilterd(git_url, token, selected_labels, assignee))\n    .then((res) => {\n      let data = [];\n      let links = [];\n      res.data.map((issue_info) => {\n        const gantt_task = generateGanttTaskFromGitLab(issue_info);\n        data.push(gantt_task);\n        return null;\n      });\n      gantt_parse({ data: data, links: links });\n    })\n    .catch((err) => {\n      // gantt.message({\n      //   text: 'failed get GitLab issue. check your url or token.'+ err,\n      //   type: 'error',\n      // });\n      console.error(err)\n    });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (\n  setLabels,\n  git_url,\n  token\n) => {\n  axios.get(getGitLabAPIURLLabel(git_url, token)).then((res) => {\n    let list = [];\n    res.data.map((lebel_info) => {\n      list.push(lebel_info);\n      return null;\n    });\n    setLabels(list);\n  });\n};\n\nexport const setGitLabMemberListOfRepoFromAPI = async (\n  setLabels,\n  git_url,\n  token\n) => {\n  axios.get(getGitLabAPIURLMember(git_url, token)).then((res) => {\n    let list = [];\n    res.data.map((info) => {\n      list.push({ id: info.id, name: info.name });\n      return null;\n    });\n    setLabels(list);\n  });\n};\n\nexport const updateGitLabIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  axios\n    .get(\n      getGitabAPIURLIssuebyNumber(\n        git_url,\n        token,\n        removeFirstSharp(gantt_task.id)\n      )\n    )\n    .then((res) => {\n      const issue_info = res.data;\n      if (\n        parseInt(issue_info.iid) === parseInt(removeFirstSharp(gantt_task.id))\n      ) {\n        let description = updateGitLabDescriptionStringFromGanttTask(\n          issue_info.description,\n          gantt_task\n        );\n        description = encodeURIComponent(description);\n        const start_date_str = adjustDateString(gantt_task.start_date);\n        const due_date_str = calculateDueDate(\n          start_date_str,\n          gantt_task.duration\n        );\n        const put_url =\n          getGitabAPIURLIssuebyNumber(\n            git_url,\n            token,\n            removeFirstSharp(gantt_task.id)\n          ) +\n          '&description=' +\n          description +\n          '&due_date=' +\n          due_date_str;\n        axios\n          .put(put_url)\n          .then((res) => {\n            gantt.message({ text: 'success update issue.  ' + gantt_task.id });\n          })\n          .catch((err) => {\n            gantt.message({\n              text: 'failed update GitLab issue. check your token.',\n              type: 'error',\n            });\n            getGitLabIssuesFromAPI(gantt, git_url);\n          });\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitLab issue. check your token.',\n        type: 'error',\n      });\n    });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(\n    getGitLabURLIssuebyNumber(git_url, removeFirstSharp(id)),\n    '_blank'\n  );\n};\n\nexport const openGitLabNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  const task = {\n    start_date: start_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n  setGitHubMemberListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n  setGitLabMemberListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\nimport { isValidURL } from '../Common/CommonHelper.js';\n\nexport const getIssuesFromAPI = async (\n  gantt_parse,\n  gantt,\n  git_url,\n  token,\n  selected_labels,\n  selected_assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    getGitHubIssuesFromAPI(\n      gantt_parse,\n      gantt,\n      git_url,\n      selected_labels,\n      selected_assignee\n    );\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    getGitLabIssuesFromAPI(\n      gantt_parse,\n      gantt,\n      git_url,\n      token,\n      selected_labels,\n      selected_assignee\n    );\n  }\n};\n\nexport const setLabelListOfRepoFromAPI = async (setLabels, git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    setGitHubLabelListOfRepoFromAPI(setLabels, git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    setGitLabLabelListOfRepoFromAPI(setLabels, git_url, token);\n  }\n};\n\nexport const setMemberListOfRepoFromAPI = async (\n  setMemberList,\n  git_url,\n  token\n) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    setGitHubMemberListOfRepoFromAPI(setMemberList, git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    setGitLabMemberListOfRepoFromAPI(setMemberList, git_url, token);\n  }\n};\n\nexport const updateIssueByAPI = (gantt_task, token, gantt, git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  // } else if (gantt_task === gantt.getTask(gantt_task.id)){\n  //   return null;\n  } else if (isGitHubURL(git_url)) {\n    updateGitHubIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    updateGitLabIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  }\n};\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task, git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabNewIssueAtBrowser(gantt_task, git_url);\n  }\n};\n","const zoom_level = {\n  levels: [\n    {\n      name: 'Days',\n      scale_height: 60,\n      min_column_width: 70,\n      scales: [{ unit: 'day', step: 1, format: '%n/%d' }],\n    },\n    {\n      name: 'Weeks',\n      scale_height: 60,\n      min_column_width: 70,\n      scales: [\n        { unit: 'month', step: 1, format: '%Y年 %n月' },\n        { unit: 'week', step: 1, format: '%n/%d~' },\n      ],\n    },\n  ],\n};\n\nconst shortenDate = (date) => {\n  const m = ('00' + (date.getMonth() + 1)).slice(-2);\n  const d = ('00' + date.getDate()).slice(-2);\n  const shorten_date = m + '/' + d;\n  return shorten_date;\n};\n\nexport const setGanttConfig = (gantt) => {\n  gantt.config.xml_date = '%Y/%m/%d %H:%i';\n  gantt.config.order_branch = true;\n  gantt.config.order_branch_free = true;\n\n  gantt.config.keep_grid_width = true;\n  gantt.config.grid_resize = true;\n  gantt.config.open_tree_initially = true;\n  gantt.config.fit_tasks = true;\n\n  gantt.config.sort = true;\n\n  gantt.config.columns = [\n    { name: 'wbs', label: 'WBS', width: 40, template: gantt.getWBSCode },\n    { name: 'id', label: 'No.', align: 'left', tree: true, width: '*' },\n    {\n      name: 'start_date',\n      label: 'Start ',\n      align: 'center',\n      width: '100',\n      template: (obj) => {\n        return shortenDate(obj.start_date);\n      },\n    },\n    {\n      name: 'due_date',\n      label: 'due ',\n      align: 'center',\n      width: '100',\n      template: (obj) => {\n        return shortenDate(obj.due_date);\n      },\n    },\n    { name: 'assignee', label: 'Assignee', align: 'center', width: '150' },\n    { name: 'add', label: '' },\n  ];\n\n  gantt.plugins({\n    quick_info: true,\n    drag_timeline: true,\n  });\n\n  gantt.ext.zoom.init(zoom_level);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { getIssuesFromAPI } from '../../functions/Common/IssueAPI.js';\nimport { attachEvent } from './GanttAttachEvent.js';\nimport { setGanttTemplates } from './GanttTemplates.js';\nimport { setGanttConfig } from './GanttConfig.js';\n\nconst Gantt = (props) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setGanttConfig(gantt);\n    setGanttTemplates(gantt);\n    attachEvent(gantt, props);\n    gantt.init(containerRef.current);\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, []);\n\n  useEffect(() => {\n    if (props.zoom === 'Days') {\n      gantt.eachTask(function (task) {\n        task.$open = true;\n      });\n    } else {\n      gantt.eachTask(function (task) {\n        task.$open = false;\n      });\n    }\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, [props.zoom]);\n\n  useEffect(() => {\n    gantt.clearAll();\n    getIssuesFromAPI(\n      (data) => {\n        gantt.parse(data);\n        gantt.sort('start_date', false);\n      },\n      gantt,\n      props.git_url,\n      props.token,\n      props.selected_labels,\n      props.selected_assignee\n    );\n  }, [\n    props.git_url,\n    props.token,\n    props.selected_labels,\n    props.selected_assignee,\n    props.update,\n  ]);\n\n  return (\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}></div>\n  );\n};\n\nexport default Gantt;\n","import {\n  calculateDuration,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper.js';\n\nexport const setGanttTemplates = (gantt) => {\n  gantt.templates.timeline_cell_class = function (item, date) {\n    if (date.getDay() === 0 || date.getDay() === 6) {\n      return 'weekend';\n    }\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date < yesterday) {\n      return 'past_days';\n    }\n  };\n\n  gantt.templates.rightside_text = function (start, end, task) {\n    return task.text;\n  };\n\n  gantt.templates.task_text = function (start, end, task) {\n    return (\n      \"<span style='text-align:left;'>\" +\n      Math.round(task.progress * 100) +\n      '% </span>'\n    );\n  };\n\n  gantt.templates.task_class = function (start, end, task) {\n    if (\n      new Date(\n        calculateDueDate(\n          start,\n          (calculateDuration(start, end) + 1) * task.progress\n        )\n      ) < new Date()\n    ) {\n      return 'behind';\n    }\n  };\n};\n","import ReactMarkdown from 'react-markdown';\nimport ReactDOMServer from 'react-dom/server';\n\nexport const attachEvent = (gantt, props) => {\n  gantt.attachEvent('onTaskDblClick', (gantt_task_id, e) => {\n    props.openIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onTaskCreated', (gantt_task_id, e) => {\n    props.openNewIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onAfterTaskUpdate', (id, gantt_task) => {\n    props.updateIssueByAPI(gantt_task, gantt);\n  });\n\n  gantt.attachEvent('onAfterTaskMove', (id, parent) => {\n    let gantt_task = gantt.getTask(id);\n    if ('parent' in gantt_task) {\n      if (gantt_task.parent !== 0) {\n        gantt_task.parent = parent;\n        props.updateIssueByAPI(gantt_task, gantt);\n      }\n    }\n  });\n\n  // Custom QuickInfo\n  // https://docs.dhtmlx.com/gantt/desktop__quick_info.html\n  gantt.attachEvent('onQuickInfo', (id) => {\n    let gantt_task = gantt.getTask(id);\n    gantt.locale.labels.detail_button = 'DETAIL';\n    gantt.$click.buttons.detail_button = (gantt_task_id) => {\n      props.openIssueAtBrowser(gantt_task_id);\n      return true;\n    };\n\n    gantt.ext.quickInfo.setContent({\n      header: {\n        title: '',\n        date: ReactDOMServer.renderToStaticMarkup().toString(),\n      },\n      content: ReactDOMServer.renderToStaticMarkup(\n        <div>\n          <h3>{gantt_task.text}</h3>\n          <ReactMarkdown>{gantt_task.description}</ReactMarkdown>\n        </div>\n      ).toString(),\n      buttons: ['detail_button'],\n    });\n  });\n\n  // Changing the displayed range dynamically\n  // https://docs.dhtmlx.com/gantt/desktop__configuring_time_scale.html#range\n  gantt.attachEvent('onTaskDrag', function (id, mode, task, original) {\n    var state = gantt.getState();\n    var minDate = state.min_date,\n      maxDate = state.max_date;\n\n    var scaleStep =\n      gantt.date.add(new Date(), state.scale_step, state.scale_unit) -\n      new Date();\n\n    var showDate,\n      repaint = false;\n    if (mode == 'resize' || mode == 'move') {\n      if (Math.abs(task.start_date - minDate) < scaleStep) {\n        showDate = task.start_date;\n        repaint = true;\n      } else if (Math.abs(task.end_date - maxDate) < scaleStep) {\n        showDate = task.end_date;\n        repaint = true;\n      }\n\n      if (repaint) {\n        gantt.render();\n        gantt.showDate(showDate);\n      }\n    }\n  });\n};\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import { bake_cookie } from 'sfcookies';\nimport {\n  convertIDNamesStringToList,\n  convertIDNameListToString,\n  removeLastSlash,\n  removeLastSpace,\n} from '../Common/Parser.js';\nimport {\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../Common/IssueAPI.js';\nimport { isValidVariable } from '../Common/CommonHelper.js';\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../GitLab/GitLabURLHelper.js';\n\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const initialState = {\n  currentZoom: 'Weeks',\n  update: 0,\n  git_url: '',\n  token: 'Tokens that have not yet been entered',\n  labels: [],\n  selected_labels: [],\n  member_list: [],\n  selected_assignee: {},\n};\n\nexport const reducerFunc = (state, action) => {\n  switch (action.type) {\n    case 'zoomChange':\n      return { ...state, currentZoom: action.value };\n    case 'gitURLChange':\n      return {\n        ...state,\n        git_url: handleGitURLChange(\n          action.value.props,\n          action.value.git_url,\n          state.selected_labels\n        ),\n      };\n    case 'tokenChange':\n      return { ...state, token: handleTokenChange(action.value) };\n    case 'labelChange':\n      return { ...state, labels: action.value };\n    case 'selectedLabelsChange':\n      return {\n        ...state,\n        selected_labels: handleSelectedLabelsChange(\n          action.value.props,\n          state.git_url,\n          action.value.selected_labels,\n          state.selected_assignee\n        ),\n      };\n    case 'memberListChange':\n      return { ...state, member_list: action.value };\n    case 'selectedAssigneeChange':\n      return {\n        ...state,\n        selected_assignee: handleSelectedAssigneeChange(\n          action.value.props,\n          state.git_url,\n          state.selected_labels,\n          action.value.selected_assignee\n        ),\n      };\n    case 'updateClick':\n      return { ...state, update: state.update + 1 };\n    case 'openIssueAtBrowser':\n      return handleOpenIssueAtBrowser(state, action);\n    case 'openNewIssueAtBrowser':\n      return handleOpenNewIssueAtBrowser(state, action);\n    case 'updateIssueByAPI':\n      return handleUpdateIssueByAPI(state, action);\n    case 'setStateFromURLQueryString':\n      return setStateFromURLQueryString(\n        state,\n        action.value.props,\n        action.value.setValue\n      );\n    default:\n      return state;\n  }\n};\n\nconst handleOpenIssueAtBrowser = (state, action) => {\n  openIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nconst handleOpenNewIssueAtBrowser = (state, action) => {\n  openNewIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nconst handleUpdateIssueByAPI = (state, action) => {\n  updateIssueByAPI(\n    action.value.gantt_task,\n    state.token,\n    action.value.gantt,\n    state.git_url\n  );\n  return state;\n};\n\nconst handleGitURLChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  git_url = removeLastSlash(removeLastSpace(git_url));\n  if (isGitHubURL(git_url)) {\n    gantt.message({ text: 'Access GitHub.com' });\n  } else if (isGitLabURL(git_url)) {\n    gantt.message({ text: 'Access GitLab.com' });\n  } else if (getSelfHostingGitLabDomain(git_url) !== null) {\n    gantt.message({ text: 'Access Maybe GitLab.self-host' });\n  } else {\n    gantt.message({ text: 'Not a valid URL.', type: 'error' });\n    return null;\n  }\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return git_url;\n};\n\nconst handleTokenChange = (token) => {\n  bake_cookie('git_token', token);\n  return token;\n};\n\nconst handleSelectedLabelsChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_labels;\n};\n\nconst handleSelectedAssigneeChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_assignee;\n};\n\nconst setURLQuery = (props, git_url, selected_labels, selected_assignee) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertIDNameListToString(selected_labels));\n  params.set('assignee', convertIDNameListToString([selected_assignee]));\n  props.history.push({\n    search: params.toString(),\n  });\n  return null;\n};\n\nconst setStateFromURLQueryString = (state, props, setValue) => {\n  const params = new URLSearchParams(props.location.search);\n  state.git_url = params.get('giturl');\n\n  const selected_labels = convertIDNamesStringToList(params.get('labels'));\n  if (isValidVariable(selected_labels[0])) {\n    if ('name' in selected_labels[0]) {\n      if (selected_labels[0].name !== '') {\n        state.selected_labels = selected_labels;\n      }\n    }\n  }\n\n  const selected_assignee_list = convertIDNamesStringToList(\n    params.get('assignee')\n  );\n  if (isValidVariable(selected_assignee_list)) {\n    state.selected_assignee = selected_assignee_list[0];\n  }\n  setValue('git_url', state.git_url);\n  return state;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Toolbar from './components/Toolbar';\nimport Gantt from './components/Gantt';\nimport { read_cookie } from 'sfcookies';\nimport { withRouter } from 'react-router-dom';\nimport { initialState, reducerFunc } from './functions/State/Reducer.js';\nimport {\n  setLabelListOfRepoFromAPI,\n  setMemberListOfRepoFromAPI,\n} from './functions/Common/IssueAPI.js';\n\nconst App = (props) => {\n  const [state, dispatch] = useReducer(reducerFunc, initialState);\n  const { register, setValue } = useForm({ git_url: '', token: '' });\n\n  useEffect(() => {\n    setValue('token', read_cookie('git_token'));\n    dispatch({ type: 'tokenChange', value: read_cookie('git_token') });\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: 'setStateFromURLQueryString',\n      value: { props: props, setValue: setValue },\n    });\n  }, [props.location]);\n\n  useEffect(() => {\n    setLabelListOfRepoFromAPI(\n      (labels) => {\n        dispatch({ type: 'labelChange', value: labels });\n      },\n      state.git_url,\n      state.token\n    );\n    setMemberListOfRepoFromAPI(\n      (setMemberList) => {\n        dispatch({ type: 'memberListChange', value: setMemberList });\n      },\n      state.git_url,\n      state.token\n    );\n  }, [state.git_url, state.token, state.selected_assignee]);\n\n  return (\n    <>\n      <div className=\"zoom-bar\">\n        <Toolbar\n          zoom={state.currentZoom}\n          onZoomChange={(zoom) => dispatch({ type: 'zoomChange', value: zoom })}\n          onGitURLChange={(git_url) =>\n            dispatch({\n              type: 'gitURLChange',\n              value: { props: props, git_url: git_url },\n            })\n          }\n          token={state.token}\n          onTokenChange={(token) =>\n            dispatch({ type: 'tokenChange', value: token })\n          }\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\n          labels={state.labels}\n          selected_labels={state.selected_labels}\n          onSelectedLabelChange={(selected_labels) =>\n            dispatch({\n              type: 'selectedLabelsChange',\n              value: { props: props, selected_labels: selected_labels },\n            })\n          }\n          member_list={state.member_list}\n          selected_assignee={state.selected_assignee}\n          onSelectedAssigneeChange={(selected_assignee) =>\n            dispatch({\n              type: 'selectedAssigneeChange',\n              value: { props: props, selected_assignee: selected_assignee },\n            })\n          }\n          register={register}\n        />\n      </div>\n      <div className=\"gantt-container\">\n        <Gantt\n          zoom={state.currentZoom}\n          git_url={state.git_url}\n          token={state.token}\n          selected_labels={state.selected_labels}\n          selected_assignee={state.selected_assignee}\n          update={state.update}\n          openIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openIssueAtBrowser', value: gantt_task_id })\n          }\n          openNewIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openNewIssueAtBrowser', value: gantt_task_id })\n          }\n          updateIssueByAPI={(gantt_task, gantt) =>\n            dispatch({\n              type: 'updateIssueByAPI',\n              value: { gantt_task: gantt_task, gantt: gantt },\n            })\n          }\n        />\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={(props) => <App />} />\n  </Router>,\n  document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}