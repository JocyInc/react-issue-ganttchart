{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","components/Gantt/GanttAttachEvent.js","components/Gantt/GanttConfig.js","components/Gantt/Gantt.js","components/Gantt/GanttTemplates.js","components/Gantt/index.js","components/Table/Table.js","components/Table/index.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","State/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","marginRight","props","classes","noValidate","TextField","className","required","placeholder","label","style","onChange","e","onGitURLChange","target","value","inputRef","register","name","type","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","Autocomplete","size","member_list","getOptionLabel","option","selected_assignee","noOptionsText","assignee","onSelectedAssigneeChange","renderInput","params","variant","ButtonGroup","height","Button","onClick","onScreenChange","IconButton","color","onUpdateClick","window","open","Toolbar","isValidVariable","variable","Array","isArray","length","isValidIDName","id_name","isValidURL","url","test","orgRound","base","Math","round","calculateDuration","start_date","due_date","start_date_moment","moment","diff","calculateDueDate","start_date_str","duration","Date","add","toDate","date2string","dateorstring2string","date","Object","prototype","toString","call","isNaN","getFullYear","string","toLocaleDateString","getMonth","getDate","adjustDateString","date_str","getGanttStartDate","created_at","getGanttDueDate","getGanttUpdateDate","updated_at","getGanttDuration","updateParentTaskDate","gantt","gantt_task","parent","parent_gantt_task","getTask","valueOf","getTime","updateTask","id","render","end_date","updateChildTaskDate","child_gantt_task_id","child_gantt_task","date_duration","due_date_str","calculateStartDate","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","shortenDate","slice","Gantt","containerRef","useRef","useEffect","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","open_tree_initially","fit_tasks","sort","columns","align","tree","template","obj","befweek","setDate","update","plugins","drag_timeline","showDate","ext","zoom","init","templates","timeline_cell_class","item","today","getDay","yesterday","task_text","start","end","task","text","task_class","progress","setGanttTemplates","attachEvent","gantt_task_id","openIssueAtBrowser","openNewIssueAtBrowser","getChildren","map","updateIssueByAPI","mode","afterlinkId","afterlink","addobj","$target","forEach","linkId","link","getLink","linkid","linkIds","source","push","relinkIds","dependon","links","original","state","getState","minDate","min_date","maxDate","max_date","scaleStep","scale_step","scale_unit","repaint","abs","current","setLevel","clearAll","issue","addTask","addLink","err","message","ref","Styles","styled","div","SmartTable","data","useTable","useSortBy","useBlockLayout","useResizeColumns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","allColumns","getToggleHideAllColumnsProps","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","getResizerProps","isResizing","row","i","getRowProps","cells","cell","getCellProps","checkVoidColumns","issue_columns","issuedata","Table","removeFirstSharp","id_str","substring","removeLastSpace","parseYamlFromDescription","description","yaml_part","str","split","getYamlPartFromDescription","yaml_struct","yaml","load","getNumberFromDescriptionYaml","column_name","number","getDateFromDescriptionYaml","getStringFromDescriptionYaml","replacePropertyInDescriptionString","task_section","dump","first_section","end_section","convertIDNameListToString","list","info","convertIDNamesStringToList","split_string","element","index","array","parseInt","getDependonFromDescriptionYaml","GitHubAPIURL","GitHubURL","isGitHubURL","git_url","getGitHubNameSpaceFromGitURL","split_git_url","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","getGitHubAPIURLIssueFilterd","url_query_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","getGitHubURLIssuebyNumber","n","Number","isFinite","isGitLabURL","getSelfHostingGitLabDomain","getGitLabDomain","gitlab_domain","self_hosting_gitlab_domain","getGitLabURL","getGitLabAPIURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterd","getGitabAPIURLIssuebyNumber","getGitLabAPIURLLabel","getGitLabAPIURLMember","getGitHubAssignee","issue_info","login","generateGanttTaskFromGitHub","title","entries","key","generateLinkFromGitHub","body","updateGitHubDescriptionStringFromGanttTask","replace","getGitHubIssueFromAPI","a","axios","get","then","res","prelink","catch","Promise","reject","getGitHubIssuesFromAPI","promise_list","all","setGitHubLabelListOfRepoFromAPI","setGitHubMemberListOfRepoFromAPI","Authorization","members","console","warn","updateGitHubIssueFromGanttTask","Arrange","generate","arrangelink","prearrangelink","Arrangegantt","post","openGitHubNewIssueAtBrowser","encodeURIComponent","getGitHubURLNewIssueWithTemplate","getGitLabAssignee","generateGanttTaskFromGitLab","iid","generateLinkFromGitLab","getGitLabIssuesFromAPI","error","setGitLabLabelListOfRepoFromAPI","lebel_info","setGitLabMemberListOfRepoFromAPI","updateGitLabIssueFromGanttTask","JSON","stringify","updateGitLabDescriptionStringFromGanttTask","put_url","put","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","resolve","setLabelListOfRepoFromAPI","setMemberListOfRepoFromAPI","openGitHubIssueAtBrowser","initialState","screen","read_cookie","initflag","reducerFunc","action","handleGitURLChange","handleTokenChange","handleSelectedLabelsChange","handleMemberListChange","handleSelectedAssigneeChange","handleOpenIssueAtBrowser","handleOpenNewIssueAtBrowser","handleUpdateIssueByAPI","setIssue","setStateFromURLQueryString","setValue","concat","keys","j","splice","table_columns","lengthall","issueone","lengthone","accessor","Header","setURLQuery","bake_cookie","URLSearchParams","location","search","set","history","selected_assignee_list","withRouter","useForm","useReducer","dispatch","issues","log","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9351782.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst Toolbar = (props) => {\n  const { classes } = props;\n  return (\n    <form noValidate>\n      <TextField\n        className={classes.root}\n        required\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n        label=\"Git Repository URL\"\n        style={{ width: '25%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onGitURLChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"git_url\"\n      />\n      <TextField\n        className={classes.root}\n        type=\"password\"\n        placeholder=\"Access Token\"\n        label=\"Access Token\"\n        style={{ width: '10%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onTokenChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"token\"\n      />\n      <Multiselect\n        className={classes.root}\n        options={props.labels}\n        selectedValues={props.selected_labels}\n        onSelect={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        onRemove={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        displayValue=\"name\"\n        style={selector_style}\n        placeholder=\"filter by labels\"\n        hidePlaceholder=\"false\"\n        emptyRecordMsg=\"No Labels\"\n        closeIcon=\"cancel\"\n      />\n      <Autocomplete\n        className={classes.root}\n        size=\"small\"\n        options={props.member_list}\n        getOptionLabel={(option) => option.name}\n        value={props.selected_assignee}\n        noOptionsText=\"Requires a valid token\"\n        onChange={(e, assignee) => {\n          props.onSelectedAssigneeChange(assignee);\n        }}\n        style={{\n          width: '10%',\n          verticalAlign: 'middle',\n          display: 'inline-block',\n          marginRight: '15px',\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            className={classes.root}\n            label=\"Assignee\"\n            variant=\"standard\"\n          />\n        )}\n      />\n      <ButtonGroup size=\"small\" style={{ height: '34px' }}>\n        <Button\n          onClick={(e) => {\n            props.onScreenChange('Gantt');\n          }}\n        >\n          Gantt\n        </Button>\n        <Button\n          onClick={(e) => {\n            props.onScreenChange('Table');\n          }}\n        >\n          Table\n        </Button>\n      </ButtonGroup>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <CachedIcon\n          onClick={(e) => {\n            props.onUpdateClick();\n          }}\n        />\n      </IconButton>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <GitHubIcon onClick={() => window.open('https://github.com/lamact/react-issue-ganttchart')} />\n      </IconButton>\n    </form>\n  );\n};\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      fontSize: '13px',\n      marginRight: '4px',\n    },\n  },\n});\n\nconst selector_style = {\n  multiselectContainer: {\n    width: '27%',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    padding: '4px',\n    alignItems: 'flex-end',\n  },\n  chips: {\n    background: 'light blue',\n    fontSize: '15px',\n  },\n  searchBox: {\n    border: 'none',\n  },\n};\n\nexport default withStyles(styles)(Toolbar);\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import moment from 'moment';\n\nexport const isValidVariable = (variable) => {\n  if (\n    variable !== null &&\n    variable !== void 0 &&\n    variable !== ''\n  ) {\n    return true;\n  }\n  if (Array.isArray(variable)) {\n    return variable.length > 0;\n  }\n  return false;\n};\n\nexport const validVariable = (variable) => {\n  if (isValidVariable(variable)) {\n    return variable;\n  } else {\n    return '';\n  }\n};\n\nexport const isValidIDName = (id_name) => {\n  return isValidVariable(id_name) && 'id' in id_name && 'name' in id_name;\n};\n\nexport const isValidURL = (url) => {\n  if (!isValidVariable(url)) {\n    return false;\n  }\n  return /https:\\/\\//.test(url);\n};\n\nexport const isNumber = (n) => {\n  if (typeof n === 'number' && Number.isFinite(n)) {\n    return true;\n  }\n  return false;\n};\n\nexport const orgRound = (value, base) => {\n  return Math.round(value / base) * base;\n};\n\nexport const calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date, 'YYYY/MM/DD');\n  const due_date_moment = moment(due_date, 'YYYY/MM/DD');\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n};\n\nexport const calculateStartDate = (due_date_str, duration) => {\n  const due_date = new Date(due_date_str);\n  const start_date = moment(due_date, 'YYYY/MM/DD')\n    .add(-duration, 'd')\n    .toDate();\n  return date2string(start_date);\n};\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date, 'YYYY/MM/DD')\n    .add(duration - 1, 'd')\n    .toDate();\n  return date2string(due_date);\n};\n\nexport const dateorstring2string = (date) => {\n  if (typeof date === 'string') {\n    return (date);\n  } else {\n    return date2string(date); \n  }\n}\n\nexport const date2string = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  } else if (isNaN(date.getFullYear())) {\n    return null;\n  }\n\n  let string = date.toLocaleDateString('ja-JP');\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(string)) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    string = year + '/' + month + '/' + day;\n  }\n  return string;\n};\n\nexport const adjustDateString = (date_str) => {\n  return date2string(new Date(date_str));\n};\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (start_date != null && due_date != null) {\n    start_date_str = date2string(start_date);\n  } else {\n    start_date_str = adjustDateString(created_at);\n  }\n  return start_date_str;\n};\n\nexport const getGanttDueDate = (start_date, due_date, created_at) => {\n  let due_date_str = null;\n  if (start_date != null && due_date != null) {\n    due_date_str = new Date(due_date);\n  } else {\n    due_date_str = new Date(created_at);\n  }\n  return due_date_str;\n};\n\nexport const getGanttUpdateDate = (created_at, updated_at) => {\n  let updated_date_str = null;\n  if (updated_at != null) {\n    updated_date_str = adjustDateString(updated_at);\n  } else {\n    updated_date_str = adjustDateString(created_at);\n  }\n  return updated_date_str;\n};\n\nexport const getGanttDuration = (start_date, due_date) => {\n  let duration = null;\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n};\n","import ReactMarkdown from 'react-markdown';\nimport ReactDOMServer from 'react-dom/server';\nimport {\n  calculateStartDate,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper';\n\nexport const attachEvent = (gantt, props) => {\n  gantt.attachEvent('onTaskDblClick', (gantt_task_id, e) => {\n    props.openIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onTaskCreated', (gantt_task_id, e) => {\n    props.openNewIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onAfterTaskUpdate', (id, gantt_task) => {\n    updateParentTaskDate(gantt, gantt_task);\n    gantt.getChildren(gantt_task.id).map((child_gantt_task_id) => {\n      updateChildTaskDate(gantt, gantt_task, child_gantt_task_id);\n    });\n    props.updateIssueByAPI(gantt_task, gantt);\n  });\n\n  gantt.attachEvent('onBeforeTaskUpdate', (id, mode, gantt_task) => {\n  });\n\n  gantt.attachEvent('onAfterTaskMove', (id, parent) => {\n    let gantt_task = gantt.getTask(id);\n    if ('parent' in gantt_task) {\n      if (gantt_task.parent !== 0) {\n        gantt_task.parent = parent;\n        props.updateIssueByAPI(gantt_task, gantt);\n      }\n    }\n  });\n  gantt.attachEvent(\"onAfterLinkAdd\", function (id, item) {\n    let afterlinkId = [];\n    let afterlink = [];\n    let addobj = item.target;\n    let taskObj = gantt.getTask(addobj);\n    let target = taskObj.$target;\n    target.forEach(function (linkId) {\n      let link = gantt.getLink(linkId);\n      let linkid = link.target;\n      let linkIds = link.source;\n      afterlink.push({type:'0',target:linkid,source:linkIds});\n      let relinkIds = linkIds.slice(1);\n      if (relinkIds != '') {\n        afterlinkId.push(relinkIds);\n      }\n    });\n    // let linkids = afterlinkId.join(',');\n    // gantt.getTask(addobj).dependon = linkids; //changes task's data\n    // gantt.updateTask(addobj); //renders the updated task\n    gantt.getTask(addobj).dependon = afterlinkId;\n    gantt.getTask(addobj).links = afterlink;\n    gantt.updateTask(addobj);\n  });\n\n  gantt.attachEvent(\"onAfterLinkDelete\", function (id, item) {\n    let afterlinkId = [];\n    let afterlink = [];\n    let addobj = item.target;\n    let taskObj = gantt.getTask(addobj);\n    let target = taskObj.$target;\n    target.forEach(function (linkId) {\n      let link = gantt.getLink(linkId);\n      let linkid = link.target;\n      let linkIds = link.source;\n      afterlink.push({type:'0',target:linkid,source:linkIds});\n      let relinkIds = linkIds.slice(1);\n      if (relinkIds != '') {\n        afterlinkId.push(relinkIds);\n      }\n    });\n    // let linkids = afterlinkId.join(',');\n    // gantt.getTask(addobj).dependon = linkids; //changes task's data\n    // gantt.updateTask(addobj); //renders the updated task\n    gantt.getTask(addobj).dependon = afterlinkId;\n    gantt.getTask(addobj).links = afterlink;\n    gantt.updateTask(addobj);\n  });\n  // // Custom QuickInfo\n  // // https://docs.dhtmlx.com/gantt/desktop__quick_info.html\n  // gantt.attachEvent('onQuickInfo', (id) => {\n  //   let gantt_task = gantt.getTask(id);\n  //   gantt.locale.labels.detail_button = 'DETAIL';\n  //   gantt.$click.buttons.detail_button = (gantt_task_id) => {\n  //     props.openIssueAtBrowser(gantt_task_id);\n  //     return true;\n  //   };\n\n  //   gantt.ext.quickInfo.setContent({\n  //     header: {\n  //       title: '',\n  //       date: ReactDOMServer.renderToStaticMarkup().toString(),\n  //     },\n  //     content: ReactDOMServer.renderToStaticMarkup(\n  //       <div>\n  //         <h3>{gantt_task.text}</h3>\n  //         <ReactMarkdown>{gantt_task.description}</ReactMarkdown>\n  //       </div>\n  //     ).toString(),\n  //     buttons: ['detail_button'],\n  //   });\n  // });\n\n  // Changing the displayed range dynamically\n  // https://docs.dhtmlx.com/gantt/desktop__configuring_time_scale.html#range\n  gantt.attachEvent('onTaskDrag', function (id, mode, task, original) {\n    var state = gantt.getState();\n    var minDate = state.min_date,\n      maxDate = state.max_date;\n\n    var scaleStep =\n      gantt.date.add(new Date(), state.scale_step, state.scale_unit) -\n      new Date();\n\n    var showDate,\n      repaint = false;\n    if (mode == 'resize' || mode == 'move') {\n      if (Math.abs(task.start_date - minDate) < scaleStep) {\n        showDate = task.start_date;\n        repaint = true;\n      } else if (Math.abs(task.end_date - maxDate) < scaleStep) {\n        showDate = task.end_date;\n        repaint = true;\n      }\n\n      if (repaint) {\n        gantt.render();\n        gantt.showDate(showDate);\n      }\n    }\n  });\n};\n\nexport const updateParentTaskDate = (gantt, gantt_task) => {\n  if (!'parent' in gantt_task) {\n    return null;\n  }\n  if (gantt_task.parent === 0) {\n    return null;\n  }\n  let parent_gantt_task = gantt.getTask(gantt_task.parent).valueOf();\n  if (\n    parent_gantt_task.start_date.getTime() > gantt_task.start_date.getTime()\n  ) {\n    parent_gantt_task.start_date = gantt_task.start_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n  if (parent_gantt_task.end_date.getTime() < gantt_task.end_date.getTime()) {\n    parent_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n};\n\nexport const updateChildTaskDate = (gantt, gantt_task, child_gantt_task_id) => {\n  let child_gantt_task = gantt.getTask(child_gantt_task_id).valueOf();\n  const date_duration = child_gantt_task.duration.valueOf();\n  if (child_gantt_task.start_date.getTime() < gantt_task.start_date.getTime()) {\n    child_gantt_task.start_date = gantt_task.start_date;\n    child_gantt_task.end_date = new Date(\n      calculateDueDate(gantt_task.start_date, date_duration)\n    );\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n  if (child_gantt_task.end_date.getTime() > gantt_task.end_date.getTime()) {\n    child_gantt_task.start_date = new Date(\n      calculateStartDate(gantt_task.end_date, date_duration)\n    );\n    child_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n};\n","const zoom_level = {\n  levels: [\n    {\n      name: 'Days',\n      scale_height: 30,\n      min_column_width: 25,\n      scales: [\n        { unit: 'month', step: 1, format: '%n' },\n        { unit: 'day', step: 1, format: '%d' },\n      ],\n    },\n  ],\n};\nconst shortenDate = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  }\n  const m = ('00' + (date.getMonth() + 1)).slice(-2);\n  const d = ('00' + date.getDate()).slice(-2);\n  const shorten_date = m + '/' + d;\n  return shorten_date;\n};\n\nexport const setGanttConfig = (gantt) => {\n  gantt.config.xml_date = '%Y/%m/%d %H:%i';\n  gantt.config.order_branch = true;\n  gantt.config.order_branch_free = true;\n\n  gantt.config.keep_grid_width = true;\n  gantt.config.grid_resize = true;\n  gantt.config.open_tree_initially = true;\n  gantt.config.fit_tasks = true;\n\n  gantt.config.sort = true;\n\n  gantt.config.columns = [\n    {\n      name: 'id',\n      label: 'No.',\n      align: 'left',\n      tree: true,\n      width: '120',\n      template: (obj) => {\n        var befweek = new Date();\n        befweek.setDate(befweek.getDate() - 7);\n        if (obj.update < befweek.toLocaleDateString()) {\n          return (\n            obj.id +\n            \"<a title='There is no update for a week.'><span class='overdue'>i</span></a>\"\n          );\n        }\n        return obj.id;\n      },\n    },\n    {\n      name: 'start_date',\n      label: 'Start ',\n      align: 'center',\n      width: '60',\n      template: (obj) => {\n        return shortenDate(obj.start_date);\n      },\n    },\n    {\n      name: 'due_date',\n      label: 'Due ',\n      align: 'center',\n      width: '60',\n      template: (obj) => {\n        return shortenDate(obj.due_date);\n      },\n    },\n    { name: 'assignee', label: 'Assignee', align: 'center', width: '130' },\n    { name: 'add', label: '', width: '40' },\n  ];\n\n  gantt.plugins({\n    // quick_info: true,\n    drag_timeline: true,\n  });\n  gantt.showDate(new Date());\n  gantt.ext.zoom.init(zoom_level);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { attachEvent } from './GanttAttachEvent.js';\nimport { setGanttTemplates } from './GanttTemplates.js';\nimport { setGanttConfig } from './GanttConfig.js';\nimport { isValidVariable } from '../../functions/Common/CommonHelper.js';\n\nconst Gantt = (props) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setGanttConfig(gantt);\n    setGanttTemplates(gantt);\n    attachEvent(gantt, props);\n    gantt.init(containerRef.current);\n    gantt.ext.zoom.setLevel('Days');\n  }, []);\n\n  useEffect(() => {\n    try {\n      gantt.clearAll();\n      if (isValidVariable(props.issue)) {\n        props.issue.map((issue) => {\n          gantt.addTask(issue);\n          if ('links' in issue) {\n            issue.links.map((link) => {\n              gantt.addLink(link);\n              return null;\n            });\n          }\n        });\n        gantt.sort('due_date', false);\n      }\n    } catch (err) {\n      gantt.message({ text: err, type: 'error' });\n    }\n  }, [\n    props.issue,\n  ]);\n\n  return (\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}></div>\n  );\n};\n\nexport default Gantt;\n","import {\n  calculateDuration,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper.js';\n\nexport const setGanttTemplates = (gantt) => {\n  gantt.templates.timeline_cell_class = function (item, date) {\n    if (Object.prototype.toString.call(date) !== '[object Date]') {\n      return null;\n    }\n    var today = new Date();\n    if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth()) {\n      return 'today';\n    }\n    if (date.getDay() === 0 || date.getDay() === 6) {\n      return 'weekend';\n    }\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date < yesterday) {\n      return 'past_days';\n    }\n  };\n\n  gantt.templates.task_text = function (start, end, task) {\n    return task.text;\n  };\n\n  gantt.templates.task_class = function (start, end, task) {\n    if (task.progress == 1) {\n      return '';\n    }\n    if (task.progress < 0.01) {\n      if (start <= new Date()) {\n        return 'behind';\n      }\n    } else if (\n      new Date(\n        calculateDueDate(\n          start,\n          (calculateDuration(start, end) + 1) * task.progress\n        )\n      ) < new Date()\n    ) {\n      return 'behind';\n    }\n  };\n};\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React from 'react';\nimport styled from 'styled-components'\nimport { useTable, useSortBy, useBlockLayout, useResizeColumns } from 'react-table'\nimport { dateorstring2string } from '../../functions/Common/CommonHelper.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BTable from 'react-bootstrap/Table';\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    display: inline-block; \n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      position: relative;\n\n      .resizer {\n        display: inline-block;\n        background: black;\n        width: 1px;\n        height: 100%;\n        position: absolute;\n        right: 0;\n        top: 0;\n        transform: translateX(50%);\n        z-index: 1;\n        ${'' /* prevents from scrolling while dragging on touch devices */}\n        touch-action:none;\n\n        &.isResizing {\n          background: red;\n        }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef()\n    const resolvedRef = ref || defaultRef\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate\n    }, [resolvedRef, indeterminate])\n\n    return <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n  }\n)\n\nfunction SmartTable({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    allColumns,\n    getToggleHideAllColumnsProps,\n    state,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy,\n    useBlockLayout,\n    useResizeColumns\n  )\n\n  return (\n    <>\n      {/* <div>\n        <div>\n          <IndeterminateCheckbox {...getToggleHideAllColumnsProps()} /> Toggle\n          All\n        </div>\n        {allColumns.map(column => (\n          <div key={column.id}>\n            <label>\n              <input type=\"checkbox\" {...column.getToggleHiddenProps()} />{' '}\n              {column.id}\n            </label>\n          </div>\n        ))}\n        <br />\n      </div> */}\n      <BTable striped bordered hover size=\"sm\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' 🔽'\n                        : ' 🔼'\n                      : ''}\n                  </span>\n                  <div\n                    {...column.getResizerProps()}\n                    className={`resizer ${column.isResizing ? 'isResizing' : ''\n                      }`}\n                  />\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </BTable>\n      {/* <pre>{JSON.stringify(state, null, 2)}</pre> */}\n    </>\n  )\n}\n\nconst checkVoidColumns = (props, columns) => {\n  if (typeof props.issue_columns[0] === \"undefined\" || typeof props.issue === \"undefined\") {\n    return false;\n  } else {\n    let data = [];\n    props.issue.map((issue) => {\n      const issuedata = {\n        ...issue,\n        start_date: dateorstring2string(issue.start_date),\n        end_date: dateorstring2string(issue.end_date),\n        due_date: dateorstring2string(issue.due_date),\n        links: \"\"\n      };\n      data.push(issuedata)\n    });\n    return (\n      < Styles >\n        <SmartTable columns={props.issue_columns[0].columns} data={data} />\n      </Styles >\n    );\n  }\n};\n\n\n\nconst Table = (props) => {\n  return (\n    <div>\n      {checkVoidColumns(props)\n      }\n    </div>\n\n  )\n}\n\nexport default Table","import Table from './Table';\nimport './Table.css';\nexport default Table;","import { isValidVariable, isValidIDName, isNumber } from './CommonHelper.js';\nimport yaml from 'js-yaml';\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const removeFirstSharp = (id_str) => {\n  if (id_str.length > 1 && /^#/.test(id_str)) {\n    id_str = id_str.substring(1);\n  }\n  return id_str;\n};\n\nexport const removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const getYamlPartFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  if (typeof description !== 'string') {\n    return null;\n  }\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  return str[0];\n};\n\nexport const parseYamlFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_part = getYamlPartFromDescription(description);\n  if (yaml_part === null) {\n    return null;\n  }\n\n  let yaml_struct = null;\n  try {\n    yaml_struct = yaml.load(yaml_part);\n  } catch (e) {\n    gantt.message({ text: 'failed load yaml' + yaml_part, type: 'error' });\n  }\n  return yaml_struct;\n};\n\nexport const getStringFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const string = yaml_struct[column_name];\n  if (typeof string !== 'string') {\n    return null;\n  }\n  return removeLastSpace(removeLastSpace(string));\n};\n\nexport const getNumberFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const number = yaml_struct[column_name];\n  if (typeof number !== 'number') {\n    return null;\n  }\n  return number;\n};\n\nexport const getDateFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const date = getStringFromDescriptionYaml(description, column_name);\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(date)) {\n    return null;\n  }\n  return new Date(date);\n};\n\nexport const replacePropertyInDescriptionString = (description, task) => {\n  if (description === null || task === null) {\n    return null;\n  }\n  let task_section = yaml.dump(task);\n  task_section =\n    `\\`\\`\\`yaml\n` +\n    task_section +\n    `\\`\\`\\``;\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    if (/```/.test(description)) {\n      return null;\n    }\n    return task_section + '\\n' + description;\n  }\n  const first_section = str[0];\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  const end_section = str[1];\n  if (first_section == null || end_section == null) {\n    return null;\n  }\n  return first_section + task_section + end_section;\n};\n\nexport const convertIDNameListToString = (list) => {\n  let string = '';\n  if (isValidVariable(list)) {\n    list.map((info) => {\n      if (isValidIDName(info) && isValidVariable(info.id)) {\n        string += info.id + ':' + info.name + ',';\n      }\n      return null;\n    });\n    return string;\n  }\n  return null;\n};\n\nexport const convertIDNamesStringToList = (string) => {\n  let list = [];\n  if (isValidVariable(string)) {\n    const split_string = string.split(',');\n    split_string.forEach((element, index, array) => {\n      if (index < split_string.length - 1) {\n        const info = element.split(':');\n        if (!isNaN(parseInt(info[0]))) {\n          const label = {\n            id: parseInt(info[0]),\n            name: info[1],\n          };\n          list.push(label);\n        }\n      }\n    });\n  } else {\n    list = [{ id: 0, name: '' }];\n  }\n  return list;\n};\n\nexport const getDependonFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const number = yaml_struct[column_name];\n     return number;\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n  isNumber,\n} from '../Common/CommonHelper.js';\nimport { removeFirstSharp } from '../Common/Parser.js';\n\nconst GitHubAPIURL = 'https://api.github.com/repos/';\nconst GitHubURL = 'https://github.com/';\n\nexport const isGitHubURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /github\\.com/.test(git_url);\n};\n\nexport const getGitHubNameSpaceFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitHubProjectFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues'\n  );\n};\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubAPIURLIssueFilterd = (git_url, labels, assignee) => {\n  if (\n    !isGitHubURL(git_url) ||\n    !isValidVariable(labels) ||\n    !isValidVariable(assignee)\n  ) {\n    return null;\n  }\n  let url_query_str = '?';\n  url_query_str += 'labels=';\n  labels.map((label) => {\n    if (isValidIDName(label)) {\n      url_query_str += label.name + ',';\n    }\n  });\n\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      url_query_str += '&assignee=' + assignee.name;\n    }\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues' +\n    url_query_str\n  );\n};\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/labels'\n  );\n};\n\nexport const getGitHubAPIURLCollaborators = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/collaborators'\n  );\n};\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  if (!isNumber(number)) {\n    number = removeFirstSharp(number);\n  }\n  if (number <= 0) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/new?assignees=&labels=&title=&body='\n  );\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n} from '../Common/CommonHelper.js';\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\n\nexport const isGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /gitlab\\.com/.test(git_url);\n};\n\nexport const getSelfHostingGitLabDomain = (git_url) => {\n  if (isGitHubURL(git_url)) {\n    return null;\n  }\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[2];\n  }\n  return null;\n};\n\nexport const getGitLabDomain = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let gitlab_domain = null;\n  const self_hosting_gitlab_domain = getSelfHostingGitLabDomain(git_url);\n  if (self_hosting_gitlab_domain !== null) {\n    gitlab_domain = 'https://' + self_hosting_gitlab_domain + '/';\n  }\n  return gitlab_domain;\n};\n\nexport const getGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url);\n};\n\nexport const getGitLabAPIURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url) + 'api/v4/';\n};\n\nexport const getGitLabNameSpaceFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitLabProjectFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const postFixToken = (token) => {\n  let post_fix_str = '?';\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    post_fix_str += 'access_token=' + token;\n  } \n  return post_fix_str;\n};\n\nexport const getGitLabAPIURLIssueFilterd = (\n  git_url,\n  token,\n  labels,\n  assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(labels)) {\n    return null;\n  }\n  if (!isValidIDName(assignee)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  if (isValidVariable(labels)) {\n    post_fix_str += '&labels=';\n    labels.map((label) => {\n      if (isValidIDName(label)) {\n        post_fix_str += label.name + ',';\n      }\n      return null;\n    });\n  }\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      post_fix_str += '&assignee_id=' + assignee.id;\n    }\n  }\n  post_fix_str += '&per_page=100&state=opened';\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues' +\n    post_fix_str\n  );\n};\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(number)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/' +\n    number +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  post_fix_str += '&per_page=100';\n\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/labels' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLMember = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'groups/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/members/all' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/-/issues/' +\n    number\n  );\n};\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/new?issue[description]='\n  );\n};\n","import {\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  parseYamlFromDescription,\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n  getDependonFromDescriptionYaml,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitHubAssignee = (issue_info) => {\n  if (issue_info.assignee !== null) {\n    return issue_info.assignee.login;\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getDateFromDescriptionYaml(description, 'start_date');\n  const due_date = getDateFromDescriptionYaml(description, 'due_date');\n\n  const gantt_task = {\n    id: '#' + issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(description, 'progress'),\n    assignee: getGitHubAssignee(issue_info),\n    parent: '#' + getNumberFromDescriptionYaml(description, 'parent'),\n    description: description,\n    update: getGanttUpdateDate(issue_info.created_at, issue_info.updated_at),\n  };\n  const yaml_struct = parseYamlFromDescription(issue_info.description);\n\n  for (let [key, value] of Object.entries(yaml_struct)) {\n    if (!(key in gantt_task)) {\n      gantt_task[key]=value;\n    }\n  }\n  return gantt_task;\n};\n\nexport const generateLinkFromGitHub = (issue_info) => {\n  const link = [];\n  let dependon = [];\n  dependon = getDependonFromDescriptionYaml(issue_info.body, 'dependon');\n  if (dependon != null) {\n    //let data = [];\n    for (let i = 0; i < dependon.length; i++) {\n      let data = [];\n      data.type = '0';\n      data.target = '#' + issue_info.number;\n      data.source = '#' + dependon[i];\n      link.push(data);\n    }\n    return link;\n  }\n};\n\nexport const updateGitHubDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => {\n  const start_date_str = adjustDateString(gantt_task.start_date)\n    .replace(/\\-/g, '/');\n  const due_date_str = calculateDueDate(\n    start_date_str,\n    gantt_task.duration\n  ).replace(/\\-/g, '/');\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  if ('dependon' in gantt_task) {\n    task.dependon = gantt_task.dependon;\n  }\n  description = replacePropertyInDescriptionString(description, task);\n  return description;\n};\n\nexport const Arrangegantt = (issue_info) => {\n  let arrangelink = [];\n  issue_info.links.map((list) => {\n  let prearrangelink = [];\n      prearrangelink.type = list.type;\n      prearrangelink.target = list.target;\n      prearrangelink.source = list.source\n      arrangelink.push(prearrangelink);\n  });\n\n  const arrange = {\n    id: issue_info.id,\n    text: issue_info.text,\n    start_date: adjustDateString(issue_info.start_date),\n    due_date: issue_info.due_date,\n    duration: issue_info.duration,\n    progress: issue_info.progress,\n    assignee: issue_info.assignee,\n    description: issue_info.description,\n    update: issue_info.update,\n    links: arrangelink,\n    parent: '#'+issue_info.parent,\n  }\n\n  return arrange;\n};\n\nexport const contentcheck = (Arrange, generate,links) => {\n  if (\n    Arrange.id == generate.id &&\n    Arrange.text == generate.text &&\n    Arrange.start_date == generate.start_date &&\n    Arrange.due_date == generate.due_date.toString() &&\n    Arrange.duration == generate.duration &&\n    Arrange.progress == generate.progress &&\n    Arrange.assignee == generate.assignee &&\n    Arrange.description == generate.description &&\n    Arrange.update == generate.update &&\n    Arrange.parent == generate.parent &&\n    Arrange.links.toString() == links.toString() \n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterd,\n  getGitHubAPIURLLabel,\n  getGitHubAPIURLCollaborators,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  generateLinkFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n  Arrangegantt,\n  contentcheck,\n} from './GitHubHelper.js';\nimport { date2string, isValidVariable } from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitHubIssueFromAPI = async (git_url, issue_info) => {\n  return axios\n    .get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number))\n    .then((res) => {\n      let links = [];\n      const gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n      const link = generateLinkFromGitHub(issue_info);\n      if (typeof link != \"undefined\") {\n        for (let i = 0; i < link.length; i++) {\n          let prelink = {\n            type: link[i].type,\n            target: link[i].target,\n            source: link[i].source,\n          }\n          links.push(prelink)\n        }\n      }\n      gantt_task.links = links;\n      return gantt_task;\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getGitHubIssuesFromAPI = async (\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  return axios\n    .get(\n      getGitHubAPIURLIssueFilterd(git_url, selected_labels, selected_assignee)\n    )\n    .then((res) => {\n      const promise_list = [];\n      res.data.map((issue_info) => {\n        promise_list.push(getGitHubIssueFromAPI(git_url, issue_info));\n      });\n      return Promise.all(promise_list);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios.get(getGitHubAPIURLLabel(git_url)).then((res) => {\n    let labels = [];\n    res.data.map((info) => {\n      labels.push({ id: info.id, name: info.name });\n      return null;\n    });\n    return labels;\n  });\n};\n\nexport const setGitHubMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    return axios\n      .get(getGitHubAPIURLCollaborators(git_url), {\n        headers: { Authorization: `token ${token}` },\n        data: {},\n      })\n      .then((res) => {\n        let members = [];\n        res.data.map((info) => {\n          members.push({ id: info.id, name: info.login });\n          return null;\n        });\n        return members;\n      });\n  } else {\n    console.warn('token is not valid!');\n  }\n};\n\nexport const updateGitHubIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  const url = getGitHubAPIURLIssuebyNumber(\n    git_url,\n    removeFirstSharp(gantt_task.id)\n  );\n  axios\n    .get(url)\n    .then((res) => {\n      const issue_info = res.data;\n      if (\n        updateGitHubDescriptionStringFromGanttTask(\n          issue_info.body,\n          gantt_task\n        ) == null\n      ) {\n        gantt.message({\n          text: 'failed update issue. ' + gantt_task.text,\n          type: 'error',\n        });\n      } else {\n        if (contentcheck(Arrangegantt(gantt_task), generateGanttTaskFromGitHub(issue_info.body, issue_info), generateLinkFromGitHub(issue_info))!=true) {\n          axios\n            .post(\n              url,\n              {\n                body: updateGitHubDescriptionStringFromGanttTask(\n                  issue_info.body,\n                  gantt_task\n                ),\n              },\n              {\n                headers: {\n                  Authorization: `token ${token}`,\n                },\n              }\n            )\n            .then((res) => {\n              gantt.message({\n                text: 'success update issue.  ' + gantt_task.id,\n              });\n            })\n            .catch((err) => {\n              gantt.message({\n                text: 'failed update GitHub issue. check your token.' + err,\n                type: 'error',\n              });\n            });\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitHub issue. check your url.' + err,\n        type: 'error',\n      });\n      getGitHubIssuesFromAPI(gantt, git_url);\n    });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(\n    getGitHubURLIssuebyNumber(git_url, removeFirstSharp(gantt_task_id)),\n    '_blank'\n  );\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  const due_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import {\n  removeFirstSharp,\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  replacePropertyInDescriptionString,\n  parseYamlFromDescription,\n  getDependonFromDescriptionYaml,\n} from '../Common/Parser.js';\nimport {\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  isValidVariable,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitLabAssignee = (issue_info) => {\n  if (isValidVariable(issue_info) && 'assignee' in issue_info) {\n    if (isValidVariable(issue_info.assignee) && 'name' in issue_info.assignee) {\n      return issue_info.assignee.name;\n    }\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getDateFromDescriptionYaml(\n    issue_info.description,\n    'start_date'\n  );\n  const due_date = adjustDateString(issue_info.due_date);\n  const gantt_task = {\n    id: '#' + issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date),\n    progress: getNumberFromDescriptionYaml(issue_info.description, 'progress'),\n    assignee: getGitLabAssignee(issue_info),\n    description: issue_info.description,\n    update: getGanttUpdateDate(issue_info.created_at, issue_info.updated_at),\n  };\n  let parent = getNumberFromDescriptionYaml(issue_info.description, 'parent');\n  if (parent !== null) {\n    if (parent !== 0) {\n      gantt_task.parent = '#' + parent;\n    }\n  }\n\n  const yaml_struct = parseYamlFromDescription(issue_info.description);\n  if (yaml_struct) {\n    for (let [key, value] of Object.entries(yaml_struct)) {\n      if (!(key in gantt_task)) {\n        gantt_task[key] = value;\n      }\n    }\n  }\n  let links = [];\n  const link = generateLinkFromGitLab(issue_info);\n  if (typeof link != \"undefined\") {\n    for (let i = 0; i < link.length; i++) {\n      let prelink = {\n        type: link[i].type,\n        target: link[i].target,\n        source: link[i].source,\n      }\n      links.push(prelink);\n    }\n  }\n  gantt_task.links = links;\n  return gantt_task;\n};\n\nexport const generateLinkFromGitLab = (issue_info) => {\n  const link = [];\n  let dependon = [];\n  dependon = getDependonFromDescriptionYaml(issue_info.description, 'dependon');\n  if (dependon != null) {\n    //let data = [];\n    for (let i = 0; i < dependon.length; i++) {\n      let data = [];\n      data.type = '0';\n      data.target = '#' + issue_info.iid;\n      data.source = '#' + dependon[i];\n      link.push(data);\n    }\n    return link;\n  }\n};\n\nexport const updateGitLabDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => {\n  const start_date_str = adjustDateString(gantt_task.start_date).replace(\n    /\\-/g,\n    '/'\n  );\n  const task = {\n    start_date: start_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  if ('dependon' in gantt_task) {\n    task.dependon = gantt_task.dependon;\n  }\n  return replacePropertyInDescriptionString(description, task);\n};\n\nexport const Arrangegantt = (issue_info) => {\n  let arrangelink = [];\n  issue_info.links.map((list) => {\n    arrangelink.push({ type: list.type, target: list.target, source: list.source });\n  });\n\n  const arrange = {\n    id: issue_info.id,\n    text: issue_info.text,\n    start_date: adjustDateString(issue_info.start_date),\n    due_date: issue_info.due_date,\n    duration: issue_info.duration,\n    progress: issue_info.progress,\n    assignee: issue_info.assignee,\n    description: issue_info.description,\n    update: issue_info.update,\n    parent: issue_info.parent,\n    links: arrangelink,\n  }\n\n  return arrange;\n};\n\nexport const contentcheck = (Arrange, generate) => {\nif (\n    Arrange.id == generate.id &&\n    Arrange.text == generate.text &&\n    Arrange.start_date == generate.start_date &&\n    Arrange.due_date == generate.due_date.toString() &&\n    Arrange.duration == generate.duration &&\n    Arrange.progress == generate.progress &&\n    Arrange.assignee == generate.assignee &&\n    Arrange.description == generate.description &&\n    Arrange.update == generate.update &&\n    Arrange.parent == generate.parent &&\n    JSON.stringify(Arrange.links) == JSON.stringify(generate.links)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterd,\n  getGitLabAPIURLLabel,\n  getGitLabAPIURLMember,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  generateLinkFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n  Arrangegantt,\n  contentcheck,\n} from './GitLabHelper.js';\nimport {\n  adjustDateString,\n  calculateDueDate,\n  date2string,\n} from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitLabIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  assignee\n) => {\n  return axios\n    .get(getGitLabAPIURLIssueFilterd(git_url, token, selected_labels, assignee))\n    .then((res) => {\n      let data = [];\n      res.data.map((issue_info) => {\n        const gantt_task = generateGanttTaskFromGitLab(issue_info);\n\n        data.push(gantt_task);\n      });\n      return data;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLLabel(git_url, token))\n    .then((res) => {\n      let labels = [];\n      res.data.map((lebel_info) => {\n        labels.push(lebel_info);\n        return null;\n      });\n      return labels;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabMemberListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLMember(git_url, token))\n    .then((res) => {\n      let members = [];\n      res.data.map((info) => {\n        members.push({ id: info.id, name: info.name });\n        return null;\n      });\n      return members;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const updateGitLabIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  return axios\n    .get(\n      getGitabAPIURLIssuebyNumber(\n        git_url,\n        token,\n        removeFirstSharp(gantt_task.id)\n      )\n    )\n    .then((res) => {\n      const issue_info = res.data;\n      if (contentcheck(Arrangegantt(gantt_task),generateGanttTaskFromGitLab(issue_info))!=true) {\n        if (\n          parseInt(issue_info.iid) === parseInt(removeFirstSharp(gantt_task.id))\n        ) {\n          let description = updateGitLabDescriptionStringFromGanttTask(\n            issue_info.description,\n            gantt_task\n          );\n          if (description == null) {\n            gantt.message({\n              text: 'failed update issue. ' + gantt_task.text,\n              type: 'error',\n            });\n          } else {\n            description = encodeURIComponent(description);\n            const start_date_str = adjustDateString(gantt_task.start_date);\n            const due_date_str = calculateDueDate(\n              start_date_str,\n              gantt_task.duration\n            );\n            const put_url =\n              getGitabAPIURLIssuebyNumber(\n                git_url,\n                token,\n                removeFirstSharp(gantt_task.id)\n              ) +\n              '&description=' +\n              description +\n              '&due_date=' +\n              due_date_str;\n            return axios\n              .put(put_url)\n              .then((res) => {\n                gantt.message({\n                  text: 'success update issue.  ' + gantt_task.id,\n                });\n              })\n              .catch((err) => {\n                console.error(err);\n                return Promise.reject(err);\n              });\n          }\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitLab issue. check your token.',\n        type: 'error',\n      });\n    });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(\n    getGitLabURLIssuebyNumber(git_url, removeFirstSharp(id)),\n    '_blank'\n  );\n};\n\nexport const openGitLabNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n  setGitHubMemberListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n  setGitLabMemberListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\nimport { isValidURL } from '../Common/CommonHelper.js';\n\nexport const getIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  selected_assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return getGitHubIssuesFromAPI(git_url, selected_labels, selected_assignee);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return getGitLabIssuesFromAPI(\n      git_url,\n      token,\n      selected_labels,\n      selected_assignee\n    );\n  }\n};\n\nexport const setLabelListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubLabelListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabLabelListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const setMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubMemberListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabMemberListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const updateIssueByAPI = (gantt_task, token, gantt, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return updateGitHubIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return updateGitLabIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  }\n};\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task, git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabNewIssueAtBrowser(gantt_task, git_url);\n  }\n};\n","import { bake_cookie, read_cookie } from 'sfcookies';\nimport {\n  convertIDNamesStringToList,\n  convertIDNameListToString,\n  removeLastSlash,\n  removeLastSpace,\n} from '../functions/Common/Parser.js';\nimport {\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../functions/Common/IssueAPI.js';\nimport { isValidVariable } from '../functions/Common/CommonHelper.js';\nimport { isGitHubURL } from '../functions/GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../functions/GitLab/GitLabURLHelper.js';\n\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const initialState = {\n  screen: 'Table',\n  //screen: 'Gantt',\n  update: 0,\n  git_url: '',\n  token: read_cookie('git_token'),\n  labels: [],\n  selected_labels: [],\n  member_list: [],\n  selected_assignee: {},\n  issue: [],\n  issue_columns: [],\n  initflag: false,\n};\n\n\nexport const reducerFunc = (state, action) => {\n  switch (action.type) {\n    case 'screenChange':\n      return { ...state, screen: action.value };\n    case 'gitURLChange':\n      return {\n        ...state,\n        git_url: handleGitURLChange(\n          action.value.props,\n          action.value.git_url,\n          state.selected_labels\n        ),\n      };\n    case 'tokenChange':\n      return { ...state, token: handleTokenChange(action.value) };\n    case 'labelChange':\n      return { ...state, labels: action.value };\n    case 'selectedLabelsChange':\n      return {\n        ...state,\n        selected_labels: handleSelectedLabelsChange(\n          action.value.props,\n          state.git_url,\n          action.value.selected_labels,\n          state.selected_assignee\n        ),\n      };\n    case 'memberListChange':\n      return { ...state, member_list: handleMemberListChange(action.value) };\n    case 'selectedAssigneeChange':\n      return {\n        ...state,\n        selected_assignee: handleSelectedAssigneeChange(\n          action.value.props,\n          state.git_url,\n          state.selected_labels,\n          action.value.selected_assignee\n        ),\n      };\n    case 'updateClick':\n      return { ...state, update: state.update + 1 };\n    case 'openIssueAtBrowser':\n      return handleOpenIssueAtBrowser(state, action);\n    case 'openNewIssueAtBrowser':\n      return handleOpenNewIssueAtBrowser(state, action);\n    case 'updateIssueByAPI':\n      return handleUpdateIssueByAPI(state, action);\n    case 'setIssue':\n      return setIssue(state, action);\n    case 'initFlagTrue':\n      return { ...state, initflag: true };\n    case 'setStateFromURLQueryString':\n      return setStateFromURLQueryString(\n        state,\n        action.value.props,\n        action.value.setValue\n      );\n    default:\n      return state;\n  }\n};\n\nexport const handleOpenIssueAtBrowser = (state, action) => {\n  openIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleOpenNewIssueAtBrowser = (state, action) => {\n  openNewIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleUpdateIssueByAPI = (state, action) => {\n  updateIssueByAPI(\n    action.value.gantt_task,\n    state.token,\n    action.value.gantt,\n    state.git_url\n  );\n  return state;\n};\n\nexport const handleSetIssueByAPI = (state, action) => {\n  return { ...state, issue: action.value };\n};\n\nexport const setIssue = (state, action) => {\n  if (isValidVariable(action.value)) {\n    if (action.value.length !== 0) {\n\n      //Creating a column list\n      let columns = [];\n      action.value.map((issue) => {\n        columns = columns.concat(Object.keys(issue));\n        for (var i = 0; i < columns.length; ++i) {\n          for (var j = i + 1; j < columns.length; ++j) {\n            if (columns[i] === columns[j])\n              columns.splice(j--, 1);\n          }\n        }\n        return null;\n      });\n\n      //Creating a table setting\n      let table_columns = [];\n      columns.map((column) => {\n        let lengthall = column.length;\n        action.value.map((issueone) => {\n          let lengthone = 0;\n          try {\n            lengthone = issueone[column].length;\n          } catch (e) { }\n          if (isNaN(lengthall)) {\n            lengthone = 0;\n          } else if (lengthall < lengthone) {\n            lengthall = lengthone;\n          }\n        })\n        lengthall = 20 + (lengthall * 9);\n        if (lengthall > 150) lengthall = 150;\n        if (column === \"text\") {\n          table_columns.push({ accessor: 'text', Header: 'title', width: lengthall });\n        } else if (column === \"description\" || column === \"links\") {\n        } else {\n          table_columns.push({ accessor: column, Header: column, width: lengthall });\n        }\n        return null;\n      });\n      const issue_columns = [{ Header: 'Info', columns: table_columns }];\n      return { ...state, update: state.update + 1, issue_columns, issue: action.value }\n    }\n  }\n  return { ...state, issue: action.value }\n};\n\n\n\nexport const handleTableUpdateIssueByAPI = (state) => {\n  return state;\n};\n\nexport const handleGitURLChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  git_url = removeLastSlash(removeLastSpace(git_url));\n  if (isGitHubURL(git_url)) {\n    gantt.message({ text: 'Access GitHub.com' });\n  } else if (isGitLabURL(git_url)) {\n    gantt.message({ text: 'Access GitLab.com' });\n  } else if (getSelfHostingGitLabDomain(git_url) !== null) {\n    gantt.message({ text: 'Access Maybe GitLab.self-host' });\n  } else if (git_url === '') {\n  } else {\n    gantt.message({ text: 'Not a valid URL.', type: 'error' });\n    return null;\n  }\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return git_url;\n};\n\nexport const handleTokenChange = (token) => {\n  bake_cookie('git_token', token);\n  return token;\n};\n\nexport const handleSelectedLabelsChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_labels;\n};\n\nexport const handleMemberListChange = (\n  member_list\n) => {\n  if (isValidVariable(member_list)) {\n    return member_list;\n  } else {\n    return [];\n  }\n};\n\nexport const handleSelectedAssigneeChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_assignee;\n};\n\nexport const setURLQuery = (props, git_url, selected_labels, selected_assignee) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertIDNameListToString(selected_labels));\n  params.set('assignee', convertIDNameListToString([selected_assignee]));\n  props.history.push({\n    search: params.toString(),\n  });\n  return null;\n};\n\nexport const setStateFromURLQueryString = (state, props, setValue) => {\n  const params = new URLSearchParams(props.location.search);\n  state.git_url = params.get('giturl');\n\n  const selected_labels = convertIDNamesStringToList(params.get('labels'));\n  if (isValidVariable(selected_labels[0])) {\n    if ('name' in selected_labels[0]) {\n      if (selected_labels[0].name !== '') {\n        state.selected_labels = selected_labels;\n      }\n    }\n  }\n\n  const selected_assignee_list = convertIDNamesStringToList(\n    params.get('assignee')\n  );\n  if (isValidVariable(selected_assignee_list)) {\n    state.selected_assignee = selected_assignee_list[0];\n  }\n  setValue('git_url', state.git_url);\n  return state;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Toolbar from './components/Toolbar';\nimport Gantt from './components/Gantt';\nimport Table from './components/Table';\nimport { read_cookie } from 'sfcookies';\nimport { withRouter } from 'react-router-dom';\nimport { initialState, reducerFunc, setStateFromURLQueryString } from './State/Reducer.js';\nimport {\n  getIssuesFromAPI,\n  setLabelListOfRepoFromAPI,\n  setMemberListOfRepoFromAPI,\n} from './functions/Common/IssueAPI.js';\nimport { gantt } from 'dhtmlx-gantt';\n\nconst App = (props) => {\n  const { register, setValue } = useForm({ git_url: '', token: '' });\n  const [state, dispatch] = useReducer(reducerFunc, setStateFromURLQueryString(initialState, props, setValue));\n  setValue('token', read_cookie('git_token'));\n  \n  useEffect(() => {\n    if (state.initflag) {\n      dispatch({\n        type: 'setStateFromURLQueryString',\n        value: { props: props, setValue: setValue },\n      });\n    } else {\n      dispatch({ type: 'initFlagTrue' })\n    }\n  }, [props.location]);\n\n  useEffect(() => {\n    setLabelListOfRepoFromAPI(state.git_url, state.token)\n      .then((labels) => {\n        dispatch({ type: 'labelChange', value: labels });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n    setMemberListOfRepoFromAPI(state.git_url, state.token)\n      .then((members) => {\n        dispatch({ type: 'memberListChange', value: members });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n  }, [state.git_url, state.token, state.selected_assignee]);\n\n  useEffect(() => {\n    getIssuesFromAPI(\n      state.git_url,\n      state.token,\n      state.selected_labels,\n      state.selected_assignee\n    )\n      .then((issues) => {\n        dispatch({ type: 'setIssue', value: issues });\n      })\n      .catch((err) => {\n        console.log('error', err);\n\n      });\n  }, [\n    state.token,\n    state.git_url,\n    state.selected_labels,\n    state.selected_assignee,\n  ]);\n\n  return (\n    <>\n      <div>\n        <Toolbar\n          onScreenChange={(screen) => dispatch({ type: 'screenChange', value: screen })}\n          onGitURLChange={(git_url) =>\n            dispatch({\n              type: 'gitURLChange',\n              value: { props: props, git_url: git_url },\n            })\n          }\n          token={state.token}\n          onTokenChange={(token) =>\n            dispatch({ type: 'tokenChange', value: token })\n          }\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\n          labels={state.labels}\n          selected_labels={state.selected_labels}\n          onSelectedLabelChange={(selected_labels) =>\n            dispatch({\n              type: 'selectedLabelsChange',\n              value: { props: props, selected_labels: selected_labels },\n            })\n          }\n          member_list={state.member_list}\n          selected_assignee={state.selected_assignee}\n          onSelectedAssigneeChange={(selected_assignee) =>\n            dispatch({\n              type: 'selectedAssigneeChange',\n              value: { props: props, selected_assignee: selected_assignee },\n            })\n          }\n          register={register}\n        />\n      </div>\n        <div>\n          {state.screen === 'Gantt' ? ( //ガントチャートとインシデント棚卸し画面の切替フラグはここで制御する\n            <div className=\"gantt-container\">\n              <Gantt\n                git_url={state.git_url}\n                token={state.token}\n                selected_labels={state.selected_labels}\n                selected_assignee={state.selected_assignee}\n                issue={state.issue}\n                update={state.update}\n                openIssueAtBrowser={(gantt_task_id) =>\n                  dispatch({ type: 'openIssueAtBrowser', value: gantt_task_id })\n                }\n                openNewIssueAtBrowser={(gantt_task_id) =>\n                  dispatch({ type: 'openNewIssueAtBrowser', value: gantt_task_id })\n                }\n                updateIssueByAPI={(gantt_task, gantt) =>\n                  dispatch({\n                    type: 'updateIssueByAPI',\n                    value: { gantt_task: gantt_task, gantt: gantt },\n                  })\n                }\n              />\n            </div>\n          ) : (\n            <div className=\"gantt-container\">\n              <Table\n                issue={state.issue}\n                issue_columns={state.issue_columns}\n              />\n            </div>\n          )} \n        </div>\n    </>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={(props) => <App />} />\n  </Router>,\n  document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}