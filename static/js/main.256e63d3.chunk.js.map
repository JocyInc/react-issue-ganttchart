{"version":3,"sources":["functions/Parser.js","functions/GitHubAPI.js","components/Gantt/Gantt.js","components/Gantt/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","App.js","serviceWorker.js","index.js"],"names":["getStartDateFromBodyString","body","str","match","Date","getDueDateFromBodyString","getProgressFromBodyString","parseFloat","getGitHubIssues","gantt","a","url","axios","get","then","res","data","map","info","number","start_date_str","duration","start_date","due_date","unscheduled","start_date_moment","moment","due_date_moment","toLocaleDateString","diff","created_at","progress","issue","id","text","title","push","links","parse","sort","updateGitHubIssue","item","token","due_date_str","add","toDate","write_str","replace","replaceStartDateInBodyString","replaceDueDateInBodyString","write_float_number","write_round_str","Math","round","replaceProgressInBodyString","post","headers","console","log","catch","err","alert","Gantt","props","dataProcessor","initZoom","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","onDataUpdated","this","createDataProcessor","type","action","Promise","resolve","reject","nextProps","config","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","show_unscheduled","attachEvent","e","window","open","linkGitHubIssue","linkGitHubNewIssue","ganttContainer","initGanttDataProcessor","destructor","setZoom","ref","input","style","width","height","Component","Toolbar","handleZoomChange","onZoomChange","target","handleTokenChange","onTokenChange","handleGitURLChange","onGitURLChange","zoomRadios","isActive","key","className","checked","onChange","App","state","currentZoom","messages","git_url","setState","bake_cookie","read_cookie","logDataUpdate","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.256e63d3.chunk.js","sourcesContent":["\n\nexport const getStartDateFromBodyString = (body) => {\n  let str = body.match(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceStartDateInBodyString = (body, write_str) => {\n  let start_date = getStartDateFromBodyString(body);\n  if (start_date != null) {\n    return body.replace(/start_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"start_date: \" + write_str);\n  } else {\n    return \"start_date: \" + write_str + \"\\n\" + body;\n  }\n}\n\nexport const getDueDateFromBodyString = (body) => {\n  let str = body.match(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/)[0];\n  return new Date(str);\n}\n\nexport const replaceDueDateInBodyString = (body, write_str) => {\n  let due_date = getDueDateFromBodyString(body);\n  if (due_date != null) {\n    return body.replace(/due_date: \\d{4}\\/\\d{1,2}\\/\\d{1,2}/, \"due_date: \" + write_str);\n  } else {\n    return \"due_date: \" + write_str + \"\\n\" + body;\n  }\n}\n\nexport const getProgressFromBodyString = (body) => {\n  let str = body.match(/progress: \\d{1}\\.\\d{1}/);\n  if (str == null) {\n    return null;\n  }\n  str = str[0].match(/\\d{1}\\.\\d{1}/)[0];\n  return parseFloat(str);\n}\n\nexport const replaceProgressInBodyString = (body, write_float_number) => {\n  let progress = getProgressFromBodyString(body);\n  let write_round_str = Math.round(write_float_number * 10) / 10;\n  if (progress != null) {\n    return body.replace(/progress: \\d{1}\\.\\d{1}/, \"progress: \" + write_round_str);\n  } else {\n    return \"progress: \" + write_round_str + \"\\n\" + body;\n  }\n}","import axios from 'axios';\nimport moment from 'moment'\nimport {\n  getStartDateFromBodyString,\n  getDueDateFromBodyString,\n  replaceDueDateInBodyString,\n  replaceStartDateInBodyString,\n  getProgressFromBodyString,\n  replaceProgressInBodyString,\n} from './Parser.js';\n\nexport const getGitHubIssues = async (gantt) => {\n    const url = 'https://api.github.com/repos/lamact/react-issue-ganttchart/issues';\n    axios.get(url).then((res) => {\n      res.data.map((info) => {\n        axios.get(url + '/' + info.number).then((res) => {\n          let start_date = getStartDateFromBodyString(res.data.body);\n          let due_date = getDueDateFromBodyString(res.data.body);\n          let start_date_str, duration, unscheduled = null;\n          if (start_date != null && due_date != null) {\n            let start_date_moment = moment(start_date);\n            let due_date_moment = moment(due_date);\n            start_date_str = start_date.toLocaleDateString(\"ja-JP\");\n            duration = due_date_moment.diff(start_date_moment, 'days')+1;\n            unscheduled = false\n          } else {\n            start_date_str = new Date(info.created_at).toLocaleDateString(\"ja-JP\");\n            duration = 1;\n            unscheduled = true\n          }\n          let progress = getProgressFromBodyString(res.data.body);\n          if (progress == null) {\n            progress = 0.1;\n          } \n          let issue = {\n            id: info.number,\n            text: info.title,\n            start_date: start_date_str,\n            duration: duration,\n            progress: progress,\n            unscheduled: unscheduled,\n          }\n          let data = [];\n          let links = [];\n          data.push(issue);\n          data = { data: data, links: links }\n          gantt.parse(data);\n          gantt.sort(\"start_date\", false);\n        });\n        return null;\n      });\n    });\n  };\n\n  export const updateGitHubIssue = (id, item, token, gantt) => {\n    const url = 'https://api.github.com/repos/lamact/react-issue-ganttchart/issues/' + item.id;\n    let start_date = new Date(item.start_date);\n    let start_date_str = start_date.toLocaleDateString(\"ja-JP\");\n    let due_date = moment(start_date).add(item.duration-1, 'd').toDate();\n    let due_date_str = due_date.toLocaleDateString(\"ja-JP\");\n\n    axios.get(url).then((res) => {\n      let body = res.data.body;\n      body = replaceProgressInBodyString(body, item.progress);\n      body = replaceDueDateInBodyString(body, due_date_str);\n      body = replaceStartDateInBodyString(body, start_date_str);\n\n      axios.post(url, {\n        body: body,\n      }, {\n        headers: {\n          'Authorization': `token ${token}`\n        }\n      }).then((res) => {\n        console.log(\"success update issue\")\n      }).catch((err) => {\n        alert('failed update issue')\n        getGitHubIssues(gantt);\n      });\n    });\n    return null;\n  };\n\n  export const linkGitHubIssue = (id, e) => {\n    window.open(\"https://github.com/lamact/react-issue-ganttchart/issues/\" + id, \"_blank\");\n  };\n\n  export const linkGitHubNewIssue = (id, e) => {\n    let body = \"\";\n    body += \"start_date:%20\"+new Date().toLocaleDateString(\"ja-JP\")+\"%0D%0A\";\n    body += \"due_date:%20\"+new Date().toLocaleDateString(\"ja-JP\")+\"%0D%0A\";\n    body += \"progress:%200.1%0D%0A\";\n    window.open(\"https://github.com/lamact/react-issue-ganttchart/issues/new?assignees=&labels=&title=&body=\"+body, \"_blank\");\n    console.log(e)\n  };","import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport {\n  getGitHubIssues,\n  updateGitHubIssue,\n  linkGitHubIssue,\n  linkGitHubNewIssue,\n} from '../../functions/GitHubAPI.js';\n\nexport default class Gantt extends Component {\n\n  constructor(props) {\n    super(props);\n    this.initZoom();\n  }\n\n  // instance of gantt.dataProcessor\n  dataProcessor = null;\n\n  initZoom() {\n    gantt.ext.zoom.init({\n      levels: [\n        {\n          name: 'Days',\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: 'week', step: 1, format: '%M, %d week' },\n            { unit: 'day', step: 1, format: '%d %M' }\n          ]\n        },\n        {\n          name: 'Months',\n          scale_height: 60,\n          min_column_width: 70,\n          scales: [\n            { unit: \"month\", step: 1, format: '%Y %F' },\n            { unit: 'week', step: 1, format: '%M, %d week' },\n          ]\n        }\n      ]\n    });\n  }\n\n  setZoom(value) {\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\n     * type: \"task\"|\"link\"\n     * action: \"create\"|\"update\"|\"delete\"\n     * item: data object object\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        }\n\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n        return resolve();\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    gantt.config.xml_date = \"%Y/%m/%d %H:%i\";\n    gantt.config.order_branch = true;\n    gantt.config.order_branch_free = true;\n\n    gantt.config.keep_grid_width = true;\n    gantt.config.grid_resize = true;\n\n    gantt.config.show_unscheduled = true;\n    gantt.config.sort = true;\n\n    gantt.attachEvent(\"onTaskDblClick\", (id, e) => {\n      linkGitHubIssue(id, e);\n    });\n\n    gantt.attachEvent(\"onTaskCreated\", (id, e) => {\n      linkGitHubNewIssue(id, e);\n    });\n\n    gantt.attachEvent(\"onAfterTaskUpdate\", (id, item) => {\n      updateGitHubIssue(id, item, this.props.token, gantt);\n    });\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    getGitHubIssues(gantt);\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const { zoom } = this.props;\n    this.setZoom(zoom);\n    return (\n      <div\n        ref={(input) => { this.ganttContainer = input }}\n        style={{ width: '100%', height: '100%' }}\n      ></div>\n    );\n  }\n}\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import React, { Component } from 'react';\nexport default class Toolbar extends Component {\n  handleZoomChange = (e) => {\n    if (this.props.onZoomChange) {\n      this.props.onZoomChange(e.target.value)\n    }\n  }\n\n  handleTokenChange = (e) => {\n    if (this.props.onTokenChange) {\n      this.props.onTokenChange(e.target.value)\n    }\n  }\n\n  handleGitURLChange = (e) => {\n    if (this.props.onGitURLChange) {\n      this.props.onGitURLChange(e.target.value)\n    }\n  }\n\n  render() {\n    const zoomRadios = ['Days', 'Months'].map((value) => {\n      const isActive = this.props.zoom === value;\n      return (\n        <label key={value} className={`radio-label ${isActive ? 'radio-label-active' : ''}`}>\n          <input type='radio'\n            checked={isActive}\n            onChange={this.handleZoomChange}\n            value={value} />\n          {value}\n        </label>\n      );\n    });\n\n    return (\n      <div className=\"tool-bar\">\n        <b>URL: </b>\n        <input type=\"text\"\n          value={this.props.url}\n          onChange={this.handleGitURLChange}\n          className='text-input-label' />\n        <b>Token: </b>\n        <input type=\"password\"\n          value={this.props.token}\n          onChange={this.handleTokenChange}\n          className='text-input-label' />\n        <b>Zoom: </b>\n        {zoomRadios}\n      </div>\n    );\n  }\n}\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import React, { Component } from 'react';\nimport Gantt from './components/Gantt';\nimport Toolbar from './components/Toolbar';\nimport { bake_cookie, read_cookie } from 'sfcookies';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    currentZoom: 'Months',\n    messages: [],\n    git_url: 'https://github.com/',\n    token: '',\n  };\n\n  handleZoomChange = (zoom) => {\n    this.setState({\n      currentZoom: zoom\n    });\n    bake_cookie('currentZoom', zoom);\n  }\n\n  handleTokenChange = (token) => {\n    this.setState({ token });\n    bake_cookie('token', token);\n  }\n\n  handleGitURLChange = (git_url) => {\n    // this.setState({ git_url });\n    bake_cookie('git_url', git_url);\n  }\n\n  componentDidMount() {\n    this.setState({\n      token: read_cookie('token')\n    });\n    this.setState({\n      git_url: read_cookie('git_url')\n    });\n    if (read_cookie('currentZoom') === 'Days' || read_cookie('currentZoom') === 'Months')\n    this.setState({\n      currentZoom: read_cookie('currentZoom')\n    });\n  }\n\n  render() {\n    const { currentZoom, git_url, token } = this.state;\n    return (\n      <div>\n        <div className=\"zoom-bar\">\n          <Toolbar\n            zoom={currentZoom}\n            onZoomChange={this.handleZoomChange}\n            git_url={git_url}\n            onGitURLChange={this.handleGitURLChange}\n            token={token}\n            onTokenChange={this.handleTokenChange}\n          />\n        </div>\n        <div className=\"gantt-container\">\n          <Gantt\n            zoom={currentZoom}\n            git_url={git_url}\n            token={token}\n            onDataUpdated={this.logDataUpdate}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}